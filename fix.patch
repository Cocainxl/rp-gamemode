 (cd "$(git rev-parse --show-toplevel)" && git apply --3way <<'EOF' 
diff --git a/frontend/.eslintrc.cjs b/frontend/.eslintrc.cjs
new file mode 100644
index 0000000000000000000000000000000000000000..5a5486fdc09a14ef81dc99efe25507d0b25d3f6e
--- /dev/null
+++ b/frontend/.eslintrc.cjs
@@ -0,0 +1,27 @@
+module.exports = {
+  root: true,
+  env: {
+    browser: true,
+    es2021: true,
+    node: true
+  },
+  extends: [
+    "eslint:recommended",
+    "plugin:vue/vue3-recommended",
+    "plugin:@typescript-eslint/recommended",
+    "prettier"
+  ],
+  parser: "vue-eslint-parser",
+  parserOptions: {
+    parser: "@typescript-eslint/parser",
+    ecmaVersion: "latest",
+    sourceType: "module"
+  },
+  plugins: ["@typescript-eslint"],
+  rules: {
+    "vue/multi-word-component-names": "off",
+    "vue/attributes-order": "off",
+    "@typescript-eslint/no-explicit-any": "off",
+    "@typescript-eslint/ban-ts-comment": "off"
+  }
+};
diff --git a/frontend/app.vue b/frontend/app.vue
new file mode 100644
index 0000000000000000000000000000000000000000..8e5906e11b254c4bd65d9d1d4de12e6f923ba58a
--- /dev/null
+++ b/frontend/app.vue
@@ -0,0 +1,8 @@
+<template>
+  <UApp>
+    <NuxtLoadingIndicator color="#38bdf8" :height="3" />
+    <NuxtLayout>
+      <NuxtPage />
+    </NuxtLayout>
+  </UApp>
+</template>
diff --git a/frontend/src/assets/fonts/BebasNeue-Regular.ttf b/frontend/assets/fonts/BebasNeue-Regular.ttf
similarity index 100%
rename from frontend/src/assets/fonts/BebasNeue-Regular.ttf
rename to frontend/assets/fonts/BebasNeue-Regular.ttf
diff --git a/frontend/src/assets/images/auth/chars.png b/frontend/assets/images/auth/chars.png
similarity index 100%
rename from frontend/src/assets/images/auth/chars.png
rename to frontend/assets/images/auth/chars.png
diff --git a/frontend/src/assets/images/auth/icons/login.svg b/frontend/assets/images/auth/icons/login.svg
similarity index 100%
rename from frontend/src/assets/images/auth/icons/login.svg
rename to frontend/assets/images/auth/icons/login.svg
diff --git a/frontend/src/assets/images/auth/icons/register.svg b/frontend/assets/images/auth/icons/register.svg
similarity index 100%
rename from frontend/src/assets/images/auth/icons/register.svg
rename to frontend/assets/images/auth/icons/register.svg
diff --git a/frontend/src/assets/images/auth/username.svg b/frontend/assets/images/auth/username.svg
similarity index 100%
rename from frontend/src/assets/images/auth/username.svg
rename to frontend/assets/images/auth/username.svg
diff --git a/frontend/src/assets/images/bg.png b/frontend/assets/images/bg.png
similarity index 100%
rename from frontend/src/assets/images/bg.png
rename to frontend/assets/images/bg.png
diff --git a/frontend/src/assets/images/creator/female/21.png b/frontend/assets/images/creator/female/21.png
similarity index 100%
rename from frontend/src/assets/images/creator/female/21.png
rename to frontend/assets/images/creator/female/21.png
diff --git a/frontend/src/assets/images/creator/female/22.png b/frontend/assets/images/creator/female/22.png
similarity index 100%
rename from frontend/src/assets/images/creator/female/22.png
rename to frontend/assets/images/creator/female/22.png
diff --git a/frontend/src/assets/images/creator/female/23.png b/frontend/assets/images/creator/female/23.png
similarity index 100%
rename from frontend/src/assets/images/creator/female/23.png
rename to frontend/assets/images/creator/female/23.png
diff --git a/frontend/src/assets/images/creator/female/24.png b/frontend/assets/images/creator/female/24.png
similarity index 100%
rename from frontend/src/assets/images/creator/female/24.png
rename to frontend/assets/images/creator/female/24.png
diff --git a/frontend/src/assets/images/creator/female/25.png b/frontend/assets/images/creator/female/25.png
similarity index 100%
rename from frontend/src/assets/images/creator/female/25.png
rename to frontend/assets/images/creator/female/25.png
diff --git a/frontend/src/assets/images/creator/female/26.png b/frontend/assets/images/creator/female/26.png
similarity index 100%
rename from frontend/src/assets/images/creator/female/26.png
rename to frontend/assets/images/creator/female/26.png
diff --git a/frontend/src/assets/images/creator/female/27.png b/frontend/assets/images/creator/female/27.png
similarity index 100%
rename from frontend/src/assets/images/creator/female/27.png
rename to frontend/assets/images/creator/female/27.png
diff --git a/frontend/src/assets/images/creator/female/28.png b/frontend/assets/images/creator/female/28.png
similarity index 100%
rename from frontend/src/assets/images/creator/female/28.png
rename to frontend/assets/images/creator/female/28.png
diff --git a/frontend/src/assets/images/creator/female/29.png b/frontend/assets/images/creator/female/29.png
similarity index 100%
rename from frontend/src/assets/images/creator/female/29.png
rename to frontend/assets/images/creator/female/29.png
diff --git a/frontend/src/assets/images/creator/female/30.png b/frontend/assets/images/creator/female/30.png
similarity index 100%
rename from frontend/src/assets/images/creator/female/30.png
rename to frontend/assets/images/creator/female/30.png
diff --git a/frontend/src/assets/images/creator/female/31.png b/frontend/assets/images/creator/female/31.png
similarity index 100%
rename from frontend/src/assets/images/creator/female/31.png
rename to frontend/assets/images/creator/female/31.png
diff --git a/frontend/src/assets/images/creator/female/32.png b/frontend/assets/images/creator/female/32.png
similarity index 100%
rename from frontend/src/assets/images/creator/female/32.png
rename to frontend/assets/images/creator/female/32.png
diff --git a/frontend/src/assets/images/creator/female/33.png b/frontend/assets/images/creator/female/33.png
similarity index 100%
rename from frontend/src/assets/images/creator/female/33.png
rename to frontend/assets/images/creator/female/33.png
diff --git a/frontend/src/assets/images/creator/female/34.png b/frontend/assets/images/creator/female/34.png
similarity index 100%
rename from frontend/src/assets/images/creator/female/34.png
rename to frontend/assets/images/creator/female/34.png
diff --git a/frontend/src/assets/images/creator/female/35.png b/frontend/assets/images/creator/female/35.png
similarity index 100%
rename from frontend/src/assets/images/creator/female/35.png
rename to frontend/assets/images/creator/female/35.png
diff --git a/frontend/src/assets/images/creator/female/36.png b/frontend/assets/images/creator/female/36.png
similarity index 100%
rename from frontend/src/assets/images/creator/female/36.png
rename to frontend/assets/images/creator/female/36.png
diff --git a/frontend/src/assets/images/creator/female/37.png b/frontend/assets/images/creator/female/37.png
similarity index 100%
rename from frontend/src/assets/images/creator/female/37.png
rename to frontend/assets/images/creator/female/37.png
diff --git a/frontend/src/assets/images/creator/female/38.png b/frontend/assets/images/creator/female/38.png
similarity index 100%
rename from frontend/src/assets/images/creator/female/38.png
rename to frontend/assets/images/creator/female/38.png
diff --git a/frontend/src/assets/images/creator/female/39.png b/frontend/assets/images/creator/female/39.png
similarity index 100%
rename from frontend/src/assets/images/creator/female/39.png
rename to frontend/assets/images/creator/female/39.png
diff --git a/frontend/src/assets/images/creator/female/40.png b/frontend/assets/images/creator/female/40.png
similarity index 100%
rename from frontend/src/assets/images/creator/female/40.png
rename to frontend/assets/images/creator/female/40.png
diff --git a/frontend/src/assets/images/creator/female/41.png b/frontend/assets/images/creator/female/41.png
similarity index 100%
rename from frontend/src/assets/images/creator/female/41.png
rename to frontend/assets/images/creator/female/41.png
diff --git a/frontend/src/assets/images/creator/female/45.png b/frontend/assets/images/creator/female/45.png
similarity index 100%
rename from frontend/src/assets/images/creator/female/45.png
rename to frontend/assets/images/creator/female/45.png
diff --git a/frontend/src/assets/images/creator/icons/cheekbones.svg b/frontend/assets/images/creator/icons/cheekbones.svg
similarity index 100%
rename from frontend/src/assets/images/creator/icons/cheekbones.svg
rename to frontend/assets/images/creator/icons/cheekbones.svg
diff --git a/frontend/src/assets/images/creator/icons/cheeks.svg b/frontend/assets/images/creator/icons/cheeks.svg
similarity index 100%
rename from frontend/src/assets/images/creator/icons/cheeks.svg
rename to frontend/assets/images/creator/icons/cheeks.svg
diff --git a/frontend/src/assets/images/creator/icons/chin.svg b/frontend/assets/images/creator/icons/chin.svg
similarity index 100%
rename from frontend/src/assets/images/creator/icons/chin.svg
rename to frontend/assets/images/creator/icons/chin.svg
diff --git a/frontend/src/assets/images/creator/icons/clothes.svg b/frontend/assets/images/creator/icons/clothes.svg
similarity index 100%
rename from frontend/src/assets/images/creator/icons/clothes.svg
rename to frontend/assets/images/creator/icons/clothes.svg
diff --git a/frontend/src/assets/images/creator/icons/create.svg b/frontend/assets/images/creator/icons/create.svg
similarity index 100%
rename from frontend/src/assets/images/creator/icons/create.svg
rename to frontend/assets/images/creator/icons/create.svg
diff --git a/frontend/src/assets/images/creator/icons/error.svg b/frontend/assets/images/creator/icons/error.svg
similarity index 100%
rename from frontend/src/assets/images/creator/icons/error.svg
rename to frontend/assets/images/creator/icons/error.svg
diff --git a/frontend/src/assets/images/creator/icons/eyebrows.svg b/frontend/assets/images/creator/icons/eyebrows.svg
similarity index 100%
rename from frontend/src/assets/images/creator/icons/eyebrows.svg
rename to frontend/assets/images/creator/icons/eyebrows.svg
diff --git a/frontend/src/assets/images/creator/icons/eyes.svg b/frontend/assets/images/creator/icons/eyes.svg
similarity index 100%
rename from frontend/src/assets/images/creator/icons/eyes.svg
rename to frontend/assets/images/creator/icons/eyes.svg
diff --git a/frontend/src/assets/images/creator/icons/face.svg b/frontend/assets/images/creator/icons/face.svg
similarity index 100%
rename from frontend/src/assets/images/creator/icons/face.svg
rename to frontend/assets/images/creator/icons/face.svg
diff --git a/frontend/src/assets/images/creator/icons/female.svg b/frontend/assets/images/creator/icons/female.svg
similarity index 100%
rename from frontend/src/assets/images/creator/icons/female.svg
rename to frontend/assets/images/creator/icons/female.svg
diff --git a/frontend/src/assets/images/creator/icons/hairstyle.svg b/frontend/assets/images/creator/icons/hairstyle.svg
similarity index 100%
rename from frontend/src/assets/images/creator/icons/hairstyle.svg
rename to frontend/assets/images/creator/icons/hairstyle.svg
diff --git a/frontend/src/assets/images/creator/icons/hats.svg b/frontend/assets/images/creator/icons/hats.svg
similarity index 100%
rename from frontend/src/assets/images/creator/icons/hats.svg
rename to frontend/assets/images/creator/icons/hats.svg
diff --git a/frontend/src/assets/images/creator/icons/hexagon.svg b/frontend/assets/images/creator/icons/hexagon.svg
similarity index 100%
rename from frontend/src/assets/images/creator/icons/hexagon.svg
rename to frontend/assets/images/creator/icons/hexagon.svg
diff --git a/frontend/src/assets/images/creator/icons/info.svg b/frontend/assets/images/creator/icons/info.svg
similarity index 100%
rename from frontend/src/assets/images/creator/icons/info.svg
rename to frontend/assets/images/creator/icons/info.svg
diff --git a/frontend/src/assets/images/creator/icons/makeup.svg b/frontend/assets/images/creator/icons/makeup.svg
similarity index 100%
rename from frontend/src/assets/images/creator/icons/makeup.svg
rename to frontend/assets/images/creator/icons/makeup.svg
diff --git a/frontend/src/assets/images/creator/icons/male.svg b/frontend/assets/images/creator/icons/male.svg
similarity index 100%
rename from frontend/src/assets/images/creator/icons/male.svg
rename to frontend/assets/images/creator/icons/male.svg
diff --git a/frontend/src/assets/images/creator/icons/nose.svg b/frontend/assets/images/creator/icons/nose.svg
similarity index 100%
rename from frontend/src/assets/images/creator/icons/nose.svg
rename to frontend/assets/images/creator/icons/nose.svg
diff --git a/frontend/src/assets/images/creator/icons/pants.svg b/frontend/assets/images/creator/icons/pants.svg
similarity index 100%
rename from frontend/src/assets/images/creator/icons/pants.svg
rename to frontend/assets/images/creator/icons/pants.svg
diff --git a/frontend/src/assets/images/creator/icons/random.svg b/frontend/assets/images/creator/icons/random.svg
similarity index 100%
rename from frontend/src/assets/images/creator/icons/random.svg
rename to frontend/assets/images/creator/icons/random.svg
diff --git a/frontend/src/assets/images/creator/icons/rmb.svg b/frontend/assets/images/creator/icons/rmb.svg
similarity index 100%
rename from frontend/src/assets/images/creator/icons/rmb.svg
rename to frontend/assets/images/creator/icons/rmb.svg
diff --git a/frontend/src/assets/images/creator/icons/shoes.svg b/frontend/assets/images/creator/icons/shoes.svg
similarity index 100%
rename from frontend/src/assets/images/creator/icons/shoes.svg
rename to frontend/assets/images/creator/icons/shoes.svg
diff --git a/frontend/src/assets/images/creator/icons/success.svg b/frontend/assets/images/creator/icons/success.svg
similarity index 100%
rename from frontend/src/assets/images/creator/icons/success.svg
rename to frontend/assets/images/creator/icons/success.svg
diff --git a/frontend/src/assets/images/creator/icons/tops.svg b/frontend/assets/images/creator/icons/tops.svg
similarity index 100%
rename from frontend/src/assets/images/creator/icons/tops.svg
rename to frontend/assets/images/creator/icons/tops.svg
diff --git a/frontend/src/assets/images/creator/male/0.png b/frontend/assets/images/creator/male/0.png
similarity index 100%
rename from frontend/src/assets/images/creator/male/0.png
rename to frontend/assets/images/creator/male/0.png
diff --git a/frontend/src/assets/images/creator/male/1.png b/frontend/assets/images/creator/male/1.png
similarity index 100%
rename from frontend/src/assets/images/creator/male/1.png
rename to frontend/assets/images/creator/male/1.png
diff --git a/frontend/src/assets/images/creator/male/10.png b/frontend/assets/images/creator/male/10.png
similarity index 100%
rename from frontend/src/assets/images/creator/male/10.png
rename to frontend/assets/images/creator/male/10.png
diff --git a/frontend/src/assets/images/creator/male/11.png b/frontend/assets/images/creator/male/11.png
similarity index 100%
rename from frontend/src/assets/images/creator/male/11.png
rename to frontend/assets/images/creator/male/11.png
diff --git a/frontend/src/assets/images/creator/male/12.png b/frontend/assets/images/creator/male/12.png
similarity index 100%
rename from frontend/src/assets/images/creator/male/12.png
rename to frontend/assets/images/creator/male/12.png
diff --git a/frontend/src/assets/images/creator/male/13.png b/frontend/assets/images/creator/male/13.png
similarity index 100%
rename from frontend/src/assets/images/creator/male/13.png
rename to frontend/assets/images/creator/male/13.png
diff --git a/frontend/src/assets/images/creator/male/14.png b/frontend/assets/images/creator/male/14.png
similarity index 100%
rename from frontend/src/assets/images/creator/male/14.png
rename to frontend/assets/images/creator/male/14.png
diff --git a/frontend/src/assets/images/creator/male/15.png b/frontend/assets/images/creator/male/15.png
similarity index 100%
rename from frontend/src/assets/images/creator/male/15.png
rename to frontend/assets/images/creator/male/15.png
diff --git a/frontend/src/assets/images/creator/male/16.png b/frontend/assets/images/creator/male/16.png
similarity index 100%
rename from frontend/src/assets/images/creator/male/16.png
rename to frontend/assets/images/creator/male/16.png
diff --git a/frontend/src/assets/images/creator/male/17.png b/frontend/assets/images/creator/male/17.png
similarity index 100%
rename from frontend/src/assets/images/creator/male/17.png
rename to frontend/assets/images/creator/male/17.png
diff --git a/frontend/src/assets/images/creator/male/18.png b/frontend/assets/images/creator/male/18.png
similarity index 100%
rename from frontend/src/assets/images/creator/male/18.png
rename to frontend/assets/images/creator/male/18.png
diff --git a/frontend/src/assets/images/creator/male/19.png b/frontend/assets/images/creator/male/19.png
similarity index 100%
rename from frontend/src/assets/images/creator/male/19.png
rename to frontend/assets/images/creator/male/19.png
diff --git a/frontend/src/assets/images/creator/male/2.png b/frontend/assets/images/creator/male/2.png
similarity index 100%
rename from frontend/src/assets/images/creator/male/2.png
rename to frontend/assets/images/creator/male/2.png
diff --git a/frontend/src/assets/images/creator/male/20.png b/frontend/assets/images/creator/male/20.png
similarity index 100%
rename from frontend/src/assets/images/creator/male/20.png
rename to frontend/assets/images/creator/male/20.png
diff --git a/frontend/src/assets/images/creator/male/3.png b/frontend/assets/images/creator/male/3.png
similarity index 100%
rename from frontend/src/assets/images/creator/male/3.png
rename to frontend/assets/images/creator/male/3.png
diff --git a/frontend/src/assets/images/creator/male/4.png b/frontend/assets/images/creator/male/4.png
similarity index 100%
rename from frontend/src/assets/images/creator/male/4.png
rename to frontend/assets/images/creator/male/4.png
diff --git a/frontend/src/assets/images/creator/male/42.png b/frontend/assets/images/creator/male/42.png
similarity index 100%
rename from frontend/src/assets/images/creator/male/42.png
rename to frontend/assets/images/creator/male/42.png
diff --git a/frontend/src/assets/images/creator/male/43.png b/frontend/assets/images/creator/male/43.png
similarity index 100%
rename from frontend/src/assets/images/creator/male/43.png
rename to frontend/assets/images/creator/male/43.png
diff --git a/frontend/src/assets/images/creator/male/44.png b/frontend/assets/images/creator/male/44.png
similarity index 100%
rename from frontend/src/assets/images/creator/male/44.png
rename to frontend/assets/images/creator/male/44.png
diff --git a/frontend/src/assets/images/creator/male/5.png b/frontend/assets/images/creator/male/5.png
similarity index 100%
rename from frontend/src/assets/images/creator/male/5.png
rename to frontend/assets/images/creator/male/5.png
diff --git a/frontend/src/assets/images/creator/male/6.png b/frontend/assets/images/creator/male/6.png
similarity index 100%
rename from frontend/src/assets/images/creator/male/6.png
rename to frontend/assets/images/creator/male/6.png
diff --git a/frontend/src/assets/images/creator/male/7.png b/frontend/assets/images/creator/male/7.png
similarity index 100%
rename from frontend/src/assets/images/creator/male/7.png
rename to frontend/assets/images/creator/male/7.png
diff --git a/frontend/src/assets/images/creator/male/8.png b/frontend/assets/images/creator/male/8.png
similarity index 100%
rename from frontend/src/assets/images/creator/male/8.png
rename to frontend/assets/images/creator/male/8.png
diff --git a/frontend/src/assets/images/creator/male/9.png b/frontend/assets/images/creator/male/9.png
similarity index 100%
rename from frontend/src/assets/images/creator/male/9.png
rename to frontend/assets/images/creator/male/9.png
diff --git a/frontend/src/assets/images/error.svg b/frontend/assets/images/error.svg
similarity index 100%
rename from frontend/src/assets/images/error.svg
rename to frontend/assets/images/error.svg
diff --git a/frontend/src/assets/images/hud/icons/ammo.svg b/frontend/assets/images/hud/icons/ammo.svg
similarity index 100%
rename from frontend/src/assets/images/hud/icons/ammo.svg
rename to frontend/assets/images/hud/icons/ammo.svg
diff --git a/frontend/src/assets/images/hud/icons/areaname.svg b/frontend/assets/images/hud/icons/areaname.svg
similarity index 100%
rename from frontend/src/assets/images/hud/icons/areaname.svg
rename to frontend/assets/images/hud/icons/areaname.svg
diff --git a/frontend/src/assets/images/hud/icons/cash.svg b/frontend/assets/images/hud/icons/cash.svg
similarity index 100%
rename from frontend/src/assets/images/hud/icons/cash.svg
rename to frontend/assets/images/hud/icons/cash.svg
diff --git a/frontend/src/assets/images/hud/icons/enter.svg b/frontend/assets/images/hud/icons/enter.svg
similarity index 100%
rename from frontend/src/assets/images/hud/icons/enter.svg
rename to frontend/assets/images/hud/icons/enter.svg
diff --git a/frontend/src/assets/images/hud/icons/interact.svg b/frontend/assets/images/hud/icons/interact.svg
similarity index 100%
rename from frontend/src/assets/images/hud/icons/interact.svg
rename to frontend/assets/images/hud/icons/interact.svg
diff --git a/frontend/src/assets/images/hud/icons/ping.svg b/frontend/assets/images/hud/icons/ping.svg
similarity index 100%
rename from frontend/src/assets/images/hud/icons/ping.svg
rename to frontend/assets/images/hud/icons/ping.svg
diff --git a/frontend/src/assets/images/hud/icons/star.svg b/frontend/assets/images/hud/icons/star.svg
similarity index 100%
rename from frontend/src/assets/images/hud/icons/star.svg
rename to frontend/assets/images/hud/icons/star.svg
diff --git a/frontend/src/assets/images/hud/icons/user.svg b/frontend/assets/images/hud/icons/user.svg
similarity index 100%
rename from frontend/src/assets/images/hud/icons/user.svg
rename to frontend/assets/images/hud/icons/user.svg
diff --git a/frontend/src/assets/images/hud/inventory/close.svg b/frontend/assets/images/hud/inventory/close.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/close.svg
rename to frontend/assets/images/hud/inventory/close.svg
diff --git a/frontend/src/assets/images/hud/inventory/icons/draghere.svg b/frontend/assets/images/hud/inventory/icons/draghere.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/icons/draghere.svg
rename to frontend/assets/images/hud/inventory/icons/draghere.svg
diff --git a/frontend/src/assets/images/hud/inventory/icons/entericon.svg b/frontend/assets/images/hud/inventory/icons/entericon.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/icons/entericon.svg
rename to frontend/assets/images/hud/inventory/icons/entericon.svg
diff --git a/frontend/src/assets/images/hud/inventory/icons/giveaway.svg b/frontend/assets/images/hud/inventory/icons/giveaway.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/icons/giveaway.svg
rename to frontend/assets/images/hud/inventory/icons/giveaway.svg
diff --git a/frontend/src/assets/images/hud/inventory/icons/lockedslot.svg b/frontend/assets/images/hud/inventory/icons/lockedslot.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/icons/lockedslot.svg
rename to frontend/assets/images/hud/inventory/icons/lockedslot.svg
diff --git a/frontend/src/assets/images/hud/inventory/icons/removeicon.svg b/frontend/assets/images/hud/inventory/icons/removeicon.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/icons/removeicon.svg
rename to frontend/assets/images/hud/inventory/icons/removeicon.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/GlockAP.svg b/frontend/assets/images/hud/inventory/items/GlockAP.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/GlockAP.svg
rename to frontend/assets/images/hud/inventory/items/GlockAP.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/advancedrifle.svg b/frontend/assets/images/hud/inventory/items/advancedrifle.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/advancedrifle.svg
rename to frontend/assets/images/hud/inventory/items/advancedrifle.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/appistol.svg b/frontend/assets/images/hud/inventory/items/appistol.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/appistol.svg
rename to frontend/assets/images/hud/inventory/items/appistol.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/armour.svg b/frontend/assets/images/hud/inventory/items/armour.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/armour.svg
rename to frontend/assets/images/hud/inventory/items/armour.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/assaultrifle.svg b/frontend/assets/images/hud/inventory/items/assaultrifle.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/assaultrifle.svg
rename to frontend/assets/images/hud/inventory/items/assaultrifle.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/assaultrifle_mk2.svg b/frontend/assets/images/hud/inventory/items/assaultrifle_mk2.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/assaultrifle_mk2.svg
rename to frontend/assets/images/hud/inventory/items/assaultrifle_mk2.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/assaultshotgun.svg b/frontend/assets/images/hud/inventory/items/assaultshotgun.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/assaultshotgun.svg
rename to frontend/assets/images/hud/inventory/items/assaultshotgun.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/assaultsmg 1.svg b/frontend/assets/images/hud/inventory/items/assaultsmg 1.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/assaultsmg 1.svg
rename to frontend/assets/images/hud/inventory/items/assaultsmg 1.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/autoshotgun.svg b/frontend/assets/images/hud/inventory/items/autoshotgun.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/autoshotgun.svg
rename to frontend/assets/images/hud/inventory/items/autoshotgun.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/backpack.svg b/frontend/assets/images/hud/inventory/items/backpack.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/backpack.svg
rename to frontend/assets/images/hud/inventory/items/backpack.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/ball.svg b/frontend/assets/images/hud/inventory/items/ball.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/ball.svg
rename to frontend/assets/images/hud/inventory/items/ball.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/ball2.svg b/frontend/assets/images/hud/inventory/items/ball2.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/ball2.svg
rename to frontend/assets/images/hud/inventory/items/ball2.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/bat.svg b/frontend/assets/images/hud/inventory/items/bat.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/bat.svg
rename to frontend/assets/images/hud/inventory/items/bat.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/battleaxe.svg b/frontend/assets/images/hud/inventory/items/battleaxe.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/battleaxe.svg
rename to frontend/assets/images/hud/inventory/items/battleaxe.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/batton.svg b/frontend/assets/images/hud/inventory/items/batton.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/batton.svg
rename to frontend/assets/images/hud/inventory/items/batton.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/bottle.svg b/frontend/assets/images/hud/inventory/items/bottle.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/bottle.svg
rename to frontend/assets/images/hud/inventory/items/bottle.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/bullpuprifle.svg b/frontend/assets/images/hud/inventory/items/bullpuprifle.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/bullpuprifle.svg
rename to frontend/assets/images/hud/inventory/items/bullpuprifle.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/bullpuprifle_mk2.svg b/frontend/assets/images/hud/inventory/items/bullpuprifle_mk2.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/bullpuprifle_mk2.svg
rename to frontend/assets/images/hud/inventory/items/bullpuprifle_mk2.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/bullpupshotgun.svg b/frontend/assets/images/hud/inventory/items/bullpupshotgun.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/bullpupshotgun.svg
rename to frontend/assets/images/hud/inventory/items/bullpupshotgun.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/carbinerifle.svg b/frontend/assets/images/hud/inventory/items/carbinerifle.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/carbinerifle.svg
rename to frontend/assets/images/hud/inventory/items/carbinerifle.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/carbinerifle_mk2.svg b/frontend/assets/images/hud/inventory/items/carbinerifle_mk2.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/carbinerifle_mk2.svg
rename to frontend/assets/images/hud/inventory/items/carbinerifle_mk2.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/ceramicpistol.svg b/frontend/assets/images/hud/inventory/items/ceramicpistol.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/ceramicpistol.svg
rename to frontend/assets/images/hud/inventory/items/ceramicpistol.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/chain.svg b/frontend/assets/images/hud/inventory/items/chain.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/chain.svg
rename to frontend/assets/images/hud/inventory/items/chain.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/combatmg.svg b/frontend/assets/images/hud/inventory/items/combatmg.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/combatmg.svg
rename to frontend/assets/images/hud/inventory/items/combatmg.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/combatmg_mk2.svg b/frontend/assets/images/hud/inventory/items/combatmg_mk2.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/combatmg_mk2.svg
rename to frontend/assets/images/hud/inventory/items/combatmg_mk2.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/combatpdw.svg b/frontend/assets/images/hud/inventory/items/combatpdw.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/combatpdw.svg
rename to frontend/assets/images/hud/inventory/items/combatpdw.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/combatpistol.svg b/frontend/assets/images/hud/inventory/items/combatpistol.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/combatpistol.svg
rename to frontend/assets/images/hud/inventory/items/combatpistol.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/compactrifle.svg b/frontend/assets/images/hud/inventory/items/compactrifle.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/compactrifle.svg
rename to frontend/assets/images/hud/inventory/items/compactrifle.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/crowbar.svg b/frontend/assets/images/hud/inventory/items/crowbar.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/crowbar.svg
rename to frontend/assets/images/hud/inventory/items/crowbar.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/dagger.svg b/frontend/assets/images/hud/inventory/items/dagger.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/dagger.svg
rename to frontend/assets/images/hud/inventory/items/dagger.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/dbshotgun.svg b/frontend/assets/images/hud/inventory/items/dbshotgun.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/dbshotgun.svg
rename to frontend/assets/images/hud/inventory/items/dbshotgun.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/doubleaction.svg b/frontend/assets/images/hud/inventory/items/doubleaction.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/doubleaction.svg
rename to frontend/assets/images/hud/inventory/items/doubleaction.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/earRings.svg b/frontend/assets/images/hud/inventory/items/earRings.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/earRings.svg
rename to frontend/assets/images/hud/inventory/items/earRings.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/fireextinguisher.svg b/frontend/assets/images/hud/inventory/items/fireextinguisher.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/fireextinguisher.svg
rename to frontend/assets/images/hud/inventory/items/fireextinguisher.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/flare.svg b/frontend/assets/images/hud/inventory/items/flare.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/flare.svg
rename to frontend/assets/images/hud/inventory/items/flare.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/flaregun.svg b/frontend/assets/images/hud/inventory/items/flaregun.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/flaregun.svg
rename to frontend/assets/images/hud/inventory/items/flaregun.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/flashbang.svg b/frontend/assets/images/hud/inventory/items/flashbang.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/flashbang.svg
rename to frontend/assets/images/hud/inventory/items/flashbang.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/flashlight.svg b/frontend/assets/images/hud/inventory/items/flashlight.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/flashlight.svg
rename to frontend/assets/images/hud/inventory/items/flashlight.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/garbagebag.svg b/frontend/assets/images/hud/inventory/items/garbagebag.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/garbagebag.svg
rename to frontend/assets/images/hud/inventory/items/garbagebag.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/gas.svg b/frontend/assets/images/hud/inventory/items/gas.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/gas.svg
rename to frontend/assets/images/hud/inventory/items/gas.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/glasses.svg b/frontend/assets/images/hud/inventory/items/glasses.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/glasses.svg
rename to frontend/assets/images/hud/inventory/items/glasses.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/glock19.svg b/frontend/assets/images/hud/inventory/items/glock19.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/glock19.svg
rename to frontend/assets/images/hud/inventory/items/glock19.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/gloves.svg b/frontend/assets/images/hud/inventory/items/gloves.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/gloves.svg
rename to frontend/assets/images/hud/inventory/items/gloves.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/golfclub.svg b/frontend/assets/images/hud/inventory/items/golfclub.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/golfclub.svg
rename to frontend/assets/images/hud/inventory/items/golfclub.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/grenade.svg b/frontend/assets/images/hud/inventory/items/grenade.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/grenade.svg
rename to frontend/assets/images/hud/inventory/items/grenade.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/gunHandgunT1Pistol.svg b/frontend/assets/images/hud/inventory/items/gunHandgunT1Pistol.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/gunHandgunT1Pistol.svg
rename to frontend/assets/images/hud/inventory/items/gunHandgunT1Pistol.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/gunHandgunT2Magnum44.svg b/frontend/assets/images/hud/inventory/items/gunHandgunT2Magnum44.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/gunHandgunT2Magnum44.svg
rename to frontend/assets/images/hud/inventory/items/gunHandgunT2Magnum44.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/gunHandgunT3DesertVulture.svg b/frontend/assets/images/hud/inventory/items/gunHandgunT3DesertVulture.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/gunHandgunT3DesertVulture.svg
rename to frontend/assets/images/hud/inventory/items/gunHandgunT3DesertVulture.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/gusenberg.svg b/frontend/assets/images/hud/inventory/items/gusenberg.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/gusenberg.svg
rename to frontend/assets/images/hud/inventory/items/gusenberg.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/hammer.svg b/frontend/assets/images/hud/inventory/items/hammer.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/hammer.svg
rename to frontend/assets/images/hud/inventory/items/hammer.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/hat.svg b/frontend/assets/images/hud/inventory/items/hat.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/hat.svg
rename to frontend/assets/images/hud/inventory/items/hat.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/hatchet.svg b/frontend/assets/images/hud/inventory/items/hatchet.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/hatchet.svg
rename to frontend/assets/images/hud/inventory/items/hatchet.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/heavypistol.svg b/frontend/assets/images/hud/inventory/items/heavypistol.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/heavypistol.svg
rename to frontend/assets/images/hud/inventory/items/heavypistol.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/heavyshotgun.svg b/frontend/assets/images/hud/inventory/items/heavyshotgun.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/heavyshotgun.svg
rename to frontend/assets/images/hud/inventory/items/heavyshotgun.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/heavysniper.svg b/frontend/assets/images/hud/inventory/items/heavysniper.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/heavysniper.svg
rename to frontend/assets/images/hud/inventory/items/heavysniper.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/heavysniper_mk2.svg b/frontend/assets/images/hud/inventory/items/heavysniper_mk2.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/heavysniper_mk2.svg
rename to frontend/assets/images/hud/inventory/items/heavysniper_mk2.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/katana.svg b/frontend/assets/images/hud/inventory/items/katana.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/katana.svg
rename to frontend/assets/images/hud/inventory/items/katana.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/knife.svg b/frontend/assets/images/hud/inventory/items/knife.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/knife.svg
rename to frontend/assets/images/hud/inventory/items/knife.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/knuckle.svg b/frontend/assets/images/hud/inventory/items/knuckle.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/knuckle.svg
rename to frontend/assets/images/hud/inventory/items/knuckle.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/m45a1.svg b/frontend/assets/images/hud/inventory/items/m45a1.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/m45a1.svg
rename to frontend/assets/images/hud/inventory/items/m45a1.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/machete.svg b/frontend/assets/images/hud/inventory/items/machete.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/machete.svg
rename to frontend/assets/images/hud/inventory/items/machete.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/machinepistol.svg b/frontend/assets/images/hud/inventory/items/machinepistol.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/machinepistol.svg
rename to frontend/assets/images/hud/inventory/items/machinepistol.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/marksmanpistol.svg b/frontend/assets/images/hud/inventory/items/marksmanpistol.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/marksmanpistol.svg
rename to frontend/assets/images/hud/inventory/items/marksmanpistol.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/marksmanrifle.svg b/frontend/assets/images/hud/inventory/items/marksmanrifle.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/marksmanrifle.svg
rename to frontend/assets/images/hud/inventory/items/marksmanrifle.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/marksmanrifle_mk2.svg b/frontend/assets/images/hud/inventory/items/marksmanrifle_mk2.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/marksmanrifle_mk2.svg
rename to frontend/assets/images/hud/inventory/items/marksmanrifle_mk2.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/mask.svg b/frontend/assets/images/hud/inventory/items/mask.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/mask.svg
rename to frontend/assets/images/hud/inventory/items/mask.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/meleeToolAxeT1IronFireaxe.svg b/frontend/assets/images/hud/inventory/items/meleeToolAxeT1IronFireaxe.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/meleeToolAxeT1IronFireaxe.svg
rename to frontend/assets/images/hud/inventory/items/meleeToolAxeT1IronFireaxe.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/meleeToolAxeT2SteelAxe.svg b/frontend/assets/images/hud/inventory/items/meleeToolAxeT2SteelAxe.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/meleeToolAxeT2SteelAxe.svg
rename to frontend/assets/images/hud/inventory/items/meleeToolAxeT2SteelAxe.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/meleeToolFlashlight02.svg b/frontend/assets/images/hud/inventory/items/meleeToolFlashlight02.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/meleeToolFlashlight02.svg
rename to frontend/assets/images/hud/inventory/items/meleeToolFlashlight02.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/meleeToolRepairT0StoneAxe.svg b/frontend/assets/images/hud/inventory/items/meleeToolRepairT0StoneAxe.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/meleeToolRepairT0StoneAxe.svg
rename to frontend/assets/images/hud/inventory/items/meleeToolRepairT0StoneAxe.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/meleeWpnBatonT0PipeBaton.svg b/frontend/assets/images/hud/inventory/items/meleeWpnBatonT0PipeBaton.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/meleeWpnBatonT0PipeBaton.svg
rename to frontend/assets/images/hud/inventory/items/meleeWpnBatonT0PipeBaton.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/meleeWpnBladeT1HuntingKnife.svg b/frontend/assets/images/hud/inventory/items/meleeWpnBladeT1HuntingKnife.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/meleeWpnBladeT1HuntingKnife.svg
rename to frontend/assets/images/hud/inventory/items/meleeWpnBladeT1HuntingKnife.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/mg.svg b/frontend/assets/images/hud/inventory/items/mg.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/mg.svg
rename to frontend/assets/images/hud/inventory/items/mg.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/mg_ammo.svg b/frontend/assets/images/hud/inventory/items/mg_ammo.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/mg_ammo.svg
rename to frontend/assets/images/hud/inventory/items/mg_ammo.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/microsmg.svg b/frontend/assets/images/hud/inventory/items/microsmg.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/microsmg.svg
rename to frontend/assets/images/hud/inventory/items/microsmg.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/minigun.svg b/frontend/assets/images/hud/inventory/items/minigun.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/minigun.svg
rename to frontend/assets/images/hud/inventory/items/minigun.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/minismg.svg b/frontend/assets/images/hud/inventory/items/minismg.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/minismg.svg
rename to frontend/assets/images/hud/inventory/items/minismg.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/molotov.svg b/frontend/assets/images/hud/inventory/items/molotov.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/molotov.svg
rename to frontend/assets/images/hud/inventory/items/molotov.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/musket.svg b/frontend/assets/images/hud/inventory/items/musket.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/musket.svg
rename to frontend/assets/images/hud/inventory/items/musket.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/navyrevolver.svg b/frontend/assets/images/hud/inventory/items/navyrevolver.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/navyrevolver.svg
rename to frontend/assets/images/hud/inventory/items/navyrevolver.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/nightstick.svg b/frontend/assets/images/hud/inventory/items/nightstick.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/nightstick.svg
rename to frontend/assets/images/hud/inventory/items/nightstick.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/pants.svg b/frontend/assets/images/hud/inventory/items/pants.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/pants.svg
rename to frontend/assets/images/hud/inventory/items/pants.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/pipebomb.svg b/frontend/assets/images/hud/inventory/items/pipebomb.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/pipebomb.svg
rename to frontend/assets/images/hud/inventory/items/pipebomb.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/pistol.svg b/frontend/assets/images/hud/inventory/items/pistol.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/pistol.svg
rename to frontend/assets/images/hud/inventory/items/pistol.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/pistol2.svg b/frontend/assets/images/hud/inventory/items/pistol2.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/pistol2.svg
rename to frontend/assets/images/hud/inventory/items/pistol2.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/pistol50.svg b/frontend/assets/images/hud/inventory/items/pistol50.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/pistol50.svg
rename to frontend/assets/images/hud/inventory/items/pistol50.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/pistol_ammo.svg b/frontend/assets/images/hud/inventory/items/pistol_ammo.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/pistol_ammo.svg
rename to frontend/assets/images/hud/inventory/items/pistol_ammo.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/pistol_mk2-2.svg b/frontend/assets/images/hud/inventory/items/pistol_mk2-2.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/pistol_mk2-2.svg
rename to frontend/assets/images/hud/inventory/items/pistol_mk2-2.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/pistol_mk2.svg b/frontend/assets/images/hud/inventory/items/pistol_mk2.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/pistol_mk2.svg
rename to frontend/assets/images/hud/inventory/items/pistol_mk2.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/poolcue.svg b/frontend/assets/images/hud/inventory/items/poolcue.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/poolcue.svg
rename to frontend/assets/images/hud/inventory/items/poolcue.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/proxmine.svg b/frontend/assets/images/hud/inventory/items/proxmine.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/proxmine.svg
rename to frontend/assets/images/hud/inventory/items/proxmine.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/pumpshotgun.svg b/frontend/assets/images/hud/inventory/items/pumpshotgun.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/pumpshotgun.svg
rename to frontend/assets/images/hud/inventory/items/pumpshotgun.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/pumpshotgun_mk2.svg b/frontend/assets/images/hud/inventory/items/pumpshotgun_mk2.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/pumpshotgun_mk2.svg
rename to frontend/assets/images/hud/inventory/items/pumpshotgun_mk2.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/railgun.svg b/frontend/assets/images/hud/inventory/items/railgun.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/railgun.svg
rename to frontend/assets/images/hud/inventory/items/railgun.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/raycarbine.svg b/frontend/assets/images/hud/inventory/items/raycarbine.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/raycarbine.svg
rename to frontend/assets/images/hud/inventory/items/raycarbine.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/rayminigun.svg b/frontend/assets/images/hud/inventory/items/rayminigun.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/rayminigun.svg
rename to frontend/assets/images/hud/inventory/items/rayminigun.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/raypistol.svg b/frontend/assets/images/hud/inventory/items/raypistol.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/raypistol.svg
rename to frontend/assets/images/hud/inventory/items/raypistol.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/revolver.svg b/frontend/assets/images/hud/inventory/items/revolver.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/revolver.svg
rename to frontend/assets/images/hud/inventory/items/revolver.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/revolver_mk2.svg b/frontend/assets/images/hud/inventory/items/revolver_mk2.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/revolver_mk2.svg
rename to frontend/assets/images/hud/inventory/items/revolver_mk2.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/rifle_ammo.svg b/frontend/assets/images/hud/inventory/items/rifle_ammo.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/rifle_ammo.svg
rename to frontend/assets/images/hud/inventory/items/rifle_ammo.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/sawnoffshotgun.svg b/frontend/assets/images/hud/inventory/items/sawnoffshotgun.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/sawnoffshotgun.svg
rename to frontend/assets/images/hud/inventory/items/sawnoffshotgun.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/shoes.svg b/frontend/assets/images/hud/inventory/items/shoes.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/shoes.svg
rename to frontend/assets/images/hud/inventory/items/shoes.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/shotgun_ammo.svg b/frontend/assets/images/hud/inventory/items/shotgun_ammo.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/shotgun_ammo.svg
rename to frontend/assets/images/hud/inventory/items/shotgun_ammo.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/smg.svg b/frontend/assets/images/hud/inventory/items/smg.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/smg.svg
rename to frontend/assets/images/hud/inventory/items/smg.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/smg_ammo.svg b/frontend/assets/images/hud/inventory/items/smg_ammo.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/smg_ammo.svg
rename to frontend/assets/images/hud/inventory/items/smg_ammo.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/smg_mk2.svg b/frontend/assets/images/hud/inventory/items/smg_mk2.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/smg_mk2.svg
rename to frontend/assets/images/hud/inventory/items/smg_mk2.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/sniperrifle.svg b/frontend/assets/images/hud/inventory/items/sniperrifle.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/sniperrifle.svg
rename to frontend/assets/images/hud/inventory/items/sniperrifle.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/snowball.svg b/frontend/assets/images/hud/inventory/items/snowball.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/snowball.svg
rename to frontend/assets/images/hud/inventory/items/snowball.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/snowball2.svg b/frontend/assets/images/hud/inventory/items/snowball2.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/snowball2.svg
rename to frontend/assets/images/hud/inventory/items/snowball2.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/snspistol.svg b/frontend/assets/images/hud/inventory/items/snspistol.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/snspistol.svg
rename to frontend/assets/images/hud/inventory/items/snspistol.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/snspistol_mk2.svg b/frontend/assets/images/hud/inventory/items/snspistol_mk2.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/snspistol_mk2.svg
rename to frontend/assets/images/hud/inventory/items/snspistol_mk2.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/specialcarbine.svg b/frontend/assets/images/hud/inventory/items/specialcarbine.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/specialcarbine.svg
rename to frontend/assets/images/hud/inventory/items/specialcarbine.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/specialcarbine_mk2.svg b/frontend/assets/images/hud/inventory/items/specialcarbine_mk2.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/specialcarbine_mk2.svg
rename to frontend/assets/images/hud/inventory/items/specialcarbine_mk2.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/stickybomb.svg b/frontend/assets/images/hud/inventory/items/stickybomb.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/stickybomb.svg
rename to frontend/assets/images/hud/inventory/items/stickybomb.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/stone_hatchet.svg b/frontend/assets/images/hud/inventory/items/stone_hatchet.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/stone_hatchet.svg
rename to frontend/assets/images/hud/inventory/items/stone_hatchet.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/stungun_black.svg b/frontend/assets/images/hud/inventory/items/stungun_black.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/stungun_black.svg
rename to frontend/assets/images/hud/inventory/items/stungun_black.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/stungun_blue.svg b/frontend/assets/images/hud/inventory/items/stungun_blue.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/stungun_blue.svg
rename to frontend/assets/images/hud/inventory/items/stungun_blue.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/stungun_green.svg b/frontend/assets/images/hud/inventory/items/stungun_green.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/stungun_green.svg
rename to frontend/assets/images/hud/inventory/items/stungun_green.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/stungun_red.svg b/frontend/assets/images/hud/inventory/items/stungun_red.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/stungun_red.svg
rename to frontend/assets/images/hud/inventory/items/stungun_red.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/stungun_yellow.svg b/frontend/assets/images/hud/inventory/items/stungun_yellow.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/stungun_yellow.svg
rename to frontend/assets/images/hud/inventory/items/stungun_yellow.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/switchblade.svg b/frontend/assets/images/hud/inventory/items/switchblade.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/switchblade.svg
rename to frontend/assets/images/hud/inventory/items/switchblade.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/switchblade2.svg b/frontend/assets/images/hud/inventory/items/switchblade2.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/switchblade2.svg
rename to frontend/assets/images/hud/inventory/items/switchblade2.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/tShirt.svg b/frontend/assets/images/hud/inventory/items/tShirt.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/tShirt.svg
rename to frontend/assets/images/hud/inventory/items/tShirt.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/thermite.svg b/frontend/assets/images/hud/inventory/items/thermite.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/thermite.svg
rename to frontend/assets/images/hud/inventory/items/thermite.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/top.svg b/frontend/assets/images/hud/inventory/items/top.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/top.svg
rename to frontend/assets/images/hud/inventory/items/top.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/vintagepistol.svg b/frontend/assets/images/hud/inventory/items/vintagepistol.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/vintagepistol.svg
rename to frontend/assets/images/hud/inventory/items/vintagepistol.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/wallet.svg b/frontend/assets/images/hud/inventory/items/wallet.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/wallet.svg
rename to frontend/assets/images/hud/inventory/items/wallet.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/watch.svg b/frontend/assets/images/hud/inventory/items/watch.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/watch.svg
rename to frontend/assets/images/hud/inventory/items/watch.svg
diff --git a/frontend/src/assets/images/hud/inventory/items/wrench.svg b/frontend/assets/images/hud/inventory/items/wrench.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/items/wrench.svg
rename to frontend/assets/images/hud/inventory/items/wrench.svg
diff --git a/frontend/src/assets/images/hud/inventory/weightIcon.svg b/frontend/assets/images/hud/inventory/weightIcon.svg
similarity index 100%
rename from frontend/src/assets/images/hud/inventory/weightIcon.svg
rename to frontend/assets/images/hud/inventory/weightIcon.svg
diff --git a/frontend/src/assets/images/hud/weapons/gadget_parachute.svg b/frontend/assets/images/hud/weapons/gadget_parachute.svg
similarity index 100%
rename from frontend/src/assets/images/hud/weapons/gadget_parachute.svg
rename to frontend/assets/images/hud/weapons/gadget_parachute.svg
diff --git a/frontend/src/assets/images/hud/weapons/weapon_acidpackage.svg b/frontend/assets/images/hud/weapons/weapon_acidpackage.svg
similarity index 100%
rename from frontend/src/assets/images/hud/weapons/weapon_acidpackage.svg
rename to frontend/assets/images/hud/weapons/weapon_acidpackage.svg
diff --git a/frontend/src/assets/images/hud/weapons/weapon_advancedrifle.svg b/frontend/assets/images/hud/weapons/weapon_advancedrifle.svg
similarity index 100%
rename from frontend/src/assets/images/hud/weapons/weapon_advancedrifle.svg
rename to frontend/assets/images/hud/weapons/weapon_advancedrifle.svg
diff --git a/frontend/src/assets/images/hud/weapons/weapon_appistol.svg b/frontend/assets/images/hud/weapons/weapon_appistol.svg
similarity index 100%
rename from frontend/src/assets/images/hud/weapons/weapon_appistol.svg
rename to frontend/assets/images/hud/weapons/weapon_appistol.svg
diff --git a/frontend/src/assets/images/hud/weapons/weapon_assaultrifle.svg b/frontend/assets/images/hud/weapons/weapon_assaultrifle.svg
similarity index 100%
rename from frontend/src/assets/images/hud/weapons/weapon_assaultrifle.svg
rename to frontend/assets/images/hud/weapons/weapon_assaultrifle.svg
diff --git a/frontend/src/assets/images/hud/weapons/weapon_assaultrifle_mk2.svg b/frontend/assets/images/hud/weapons/weapon_assaultrifle_mk2.svg
similarity index 100%
rename from frontend/src/assets/images/hud/weapons/weapon_assaultrifle_mk2.svg
rename to frontend/assets/images/hud/weapons/weapon_assaultrifle_mk2.svg
diff --git a/frontend/src/assets/images/hud/weapons/weapon_assaultshotgun.svg b/frontend/assets/images/hud/weapons/weapon_assaultshotgun.svg
similarity index 100%
rename from frontend/src/assets/images/hud/weapons/weapon_assaultshotgun.svg
rename to frontend/assets/images/hud/weapons/weapon_assaultshotgun.svg
diff --git a/frontend/src/assets/images/hud/weapons/weapon_assaultsmg.svg b/frontend/assets/images/hud/weapons/weapon_assaultsmg.svg
similarity index 100%
rename from frontend/src/assets/images/hud/weapons/weapon_assaultsmg.svg
rename to frontend/assets/images/hud/weapons/weapon_assaultsmg.svg
diff --git a/frontend/src/assets/images/hud/weapons/weapon_autoshotgun.svg b/frontend/assets/images/hud/weapons/weapon_autoshotgun.svg
similarity index 100%
rename from frontend/src/assets/images/hud/weapons/weapon_autoshotgun.svg
rename to frontend/assets/images/hud/weapons/weapon_autoshotgun.svg
diff --git a/frontend/src/assets/images/hud/weapons/weapon_ball.svg b/frontend/assets/images/hud/weapons/weapon_ball.svg
similarity index 100%
rename from frontend/src/assets/images/hud/weapons/weapon_ball.svg
rename to frontend/assets/images/hud/weapons/weapon_ball.svg
diff --git a/frontend/src/assets/images/hud/weapons/weapon_bat.svg b/frontend/assets/images/hud/weapons/weapon_bat.svg
similarity index 100%
rename from frontend/src/assets/images/hud/weapons/weapon_bat.svg
rename to frontend/assets/images/hud/weapons/weapon_bat.svg
diff --git a/frontend/src/assets/images/hud/weapons/weapon_battleaxe.svg b/frontend/assets/images/hud/weapons/weapon_battleaxe.svg
similarity index 100%
rename from frontend/src/assets/images/hud/weapons/weapon_battleaxe.svg
rename to frontend/assets/images/hud/weapons/weapon_battleaxe.svg
diff --git a/frontend/src/assets/images/hud/weapons/weapon_bottle.svg b/frontend/assets/images/hud/weapons/weapon_bottle.svg
similarity index 100%
rename from frontend/src/assets/images/hud/weapons/weapon_bottle.svg
rename to frontend/assets/images/hud/weapons/weapon_bottle.svg
diff --git a/frontend/src/assets/images/hud/weapons/weapon_bullpuprifle.svg b/frontend/assets/images/hud/weapons/weapon_bullpuprifle.svg
similarity index 100%
rename from frontend/src/assets/images/hud/weapons/weapon_bullpuprifle.svg
rename to frontend/assets/images/hud/weapons/weapon_bullpuprifle.svg
diff --git a/frontend/src/assets/images/hud/weapons/weapon_bullpuprifle_mk2.svg b/frontend/assets/images/hud/weapons/weapon_bullpuprifle_mk2.svg
similarity index 100%
rename from frontend/src/assets/images/hud/weapons/weapon_bullpuprifle_mk2.svg
rename to frontend/assets/images/hud/weapons/weapon_bullpuprifle_mk2.svg
diff --git a/frontend/src/assets/images/hud/weapons/weapon_bullpupshotgun.svg b/frontend/assets/images/hud/weapons/weapon_bullpupshotgun.svg
similarity index 100%
rename from frontend/src/assets/images/hud/weapons/weapon_bullpupshotgun.svg
rename to frontend/assets/images/hud/weapons/weapon_bullpupshotgun.svg
diff --git a/frontend/src/assets/images/hud/weapons/weapon_bzgas-1.svg b/frontend/assets/images/hud/weapons/weapon_bzgas-1.svg
similarity index 100%
rename from frontend/src/assets/images/hud/weapons/weapon_bzgas-1.svg
rename to frontend/assets/images/hud/weapons/weapon_bzgas-1.svg
diff --git a/frontend/src/assets/images/hud/weapons/weapon_bzgas.svg b/frontend/assets/images/hud/weapons/weapon_bzgas.svg
similarity index 100%
rename from frontend/src/assets/images/hud/weapons/weapon_bzgas.svg
rename to frontend/assets/images/hud/weapons/weapon_bzgas.svg
diff --git a/frontend/src/assets/images/hud/weapons/weapon_carbinerifle.svg b/frontend/assets/images/hud/weapons/weapon_carbinerifle.svg
similarity index 100%
rename from frontend/src/assets/images/hud/weapons/weapon_carbinerifle.svg
rename to frontend/assets/images/hud/weapons/weapon_carbinerifle.svg
diff --git a/frontend/src/assets/images/hud/weapons/weapon_carbinerifle_mk2.svg b/frontend/assets/images/hud/weapons/weapon_carbinerifle_mk2.svg
similarity index 100%
rename from frontend/src/assets/images/hud/weapons/weapon_carbinerifle_mk2.svg
rename to frontend/assets/images/hud/weapons/weapon_carbinerifle_mk2.svg
diff --git a/frontend/src/assets/images/hud/weapons/weapon_ceramicpistol.svg b/frontend/assets/images/hud/weapons/weapon_ceramicpistol.svg
similarity index 100%
rename from frontend/src/assets/images/hud/weapons/weapon_ceramicpistol.svg
rename to frontend/assets/images/hud/weapons/weapon_ceramicpistol.svg
diff --git a/frontend/src/assets/images/hud/weapons/weapon_combatmg.svg b/frontend/assets/images/hud/weapons/weapon_combatmg.svg
similarity index 100%
rename from frontend/src/assets/images/hud/weapons/weapon_combatmg.svg
rename to frontend/assets/images/hud/weapons/weapon_combatmg.svg
diff --git a/frontend/src/assets/images/hud/weapons/weapon_combatmg_mk2.svg b/frontend/assets/images/hud/weapons/weapon_combatmg_mk2.svg
similarity index 100%
rename from frontend/src/assets/images/hud/weapons/weapon_combatmg_mk2.svg
rename to frontend/assets/images/hud/weapons/weapon_combatmg_mk2.svg
diff --git a/frontend/src/assets/images/hud/weapons/weapon_combatpdw.svg b/frontend/assets/images/hud/weapons/weapon_combatpdw.svg
similarity index 100%
rename from frontend/src/assets/images/hud/weapons/weapon_combatpdw.svg
rename to frontend/assets/images/hud/weapons/weapon_combatpdw.svg
diff --git a/frontend/src/assets/images/hud/weapons/weapon_combatpistol.svg b/frontend/assets/images/hud/weapons/weapon_combatpistol.svg
similarity index 100%
rename from frontend/src/assets/images/hud/weapons/weapon_combatpistol.svg
rename to frontend/assets/images/hud/weapons/weapon_combatpistol.svg
diff --git a/frontend/src/assets/images/hud/weapons/weapon_combatshotgun.svg b/frontend/assets/images/hud/weapons/weapon_combatshotgun.svg
similarity index 100%
rename from frontend/src/assets/images/hud/weapons/weapon_combatshotgun.svg
rename to frontend/assets/images/hud/weapons/weapon_combatshotgun.svg
diff --git a/frontend/src/assets/images/hud/weapons/weapon_compactlauncher.svg b/frontend/assets/images/hud/weapons/weapon_compactlauncher.svg
similarity index 100%
rename from frontend/src/assets/images/hud/weapons/weapon_compactlauncher.svg
rename to frontend/assets/images/hud/weapons/weapon_compactlauncher.svg
diff --git a/frontend/src/assets/images/hud/weapons/weapon_compactrifle.svg b/frontend/assets/images/hud/weapons/weapon_compactrifle.svg
similarity index 100%
rename from frontend/src/assets/images/hud/weapons/weapon_compactrifle.svg
rename to frontend/assets/images/hud/weapons/weapon_compactrifle.svg
diff --git a/frontend/src/assets/images/hud/weapons/weapon_crowbar.svg b/frontend/assets/images/hud/weapons/weapon_crowbar.svg
similarity index 100%
rename from frontend/src/assets/images/hud/weapons/weapon_crowbar.svg
rename to frontend/assets/images/hud/weapons/weapon_crowbar.svg
diff --git a/frontend/src/assets/images/hud/weapons/weapon_dagger.svg b/frontend/assets/images/hud/weapons/weapon_dagger.svg
similarity index 100%
rename from frontend/src/assets/images/hud/weapons/weapon_dagger.svg
rename to frontend/assets/images/hud/weapons/weapon_dagger.svg
diff --git a/frontend/src/assets/images/hud/weapons/weapon_dbshotgun.svg b/frontend/assets/images/hud/weapons/weapon_dbshotgun.svg
similarity index 100%
rename from frontend/src/assets/images/hud/weapons/weapon_dbshotgun.svg
rename to frontend/assets/images/hud/weapons/weapon_dbshotgun.svg
diff --git a/frontend/src/assets/images/hud/weapons/weapon_doubleaction.svg b/frontend/assets/images/hud/weapons/weapon_doubleaction.svg
similarity index 100%
rename from frontend/src/assets/images/hud/weapons/weapon_doubleaction.svg
rename to frontend/assets/images/hud/weapons/weapon_doubleaction.svg
diff --git a/frontend/src/assets/images/hud/weapons/weapon_fireextinguisher.svg b/frontend/assets/images/hud/weapons/weapon_fireextinguisher.svg
similarity index 100%
rename from frontend/src/assets/images/hud/weapons/weapon_fireextinguisher.svg
rename to frontend/assets/images/hud/weapons/weapon_fireextinguisher.svg
diff --git a/frontend/src/assets/images/hud/weapons/weapon_firework.svg b/frontend/assets/images/hud/weapons/weapon_firework.svg
similarity index 100%
rename from frontend/src/assets/images/hud/weapons/weapon_firework.svg
rename to frontend/assets/images/hud/weapons/weapon_firework.svg
diff --git a/frontend/src/assets/images/hud/weapons/weapon_flare.svg b/frontend/assets/images/hud/weapons/weapon_flare.svg
similarity index 100%
rename from frontend/src/assets/images/hud/weapons/weapon_flare.svg
rename to frontend/assets/images/hud/weapons/weapon_flare.svg
diff --git a/frontend/src/assets/images/hud/weapons/weapon_flaregun.svg b/frontend/assets/images/hud/weapons/weapon_flaregun.svg
similarity index 100%
rename from frontend/src/assets/images/hud/weapons/weapon_flaregun.svg
rename to frontend/assets/images/hud/weapons/weapon_flaregun.svg
diff --git a/frontend/src/assets/images/hud/weapons/weapon_flashlight.svg b/frontend/assets/images/hud/weapons/weapon_flashlight.svg
similarity index 100%
rename from frontend/src/assets/images/hud/weapons/weapon_flashlight.svg
rename to frontend/assets/images/hud/weapons/weapon_flashlight.svg
diff --git a/frontend/src/assets/images/hud/weapons/weapon_gadgetpistol.svg b/frontend/assets/images/hud/weapons/weapon_gadgetpistol.svg
similarity index 100%
rename from frontend/src/assets/images/hud/weapons/weapon_gadgetpistol.svg
rename to frontend/assets/images/hud/weapons/weapon_gadgetpistol.svg
diff --git a/frontend/src/assets/images/hud/weapons/weapon_golfclub.svg b/frontend/assets/images/hud/weapons/weapon_golfclub.svg
similarity index 100%
rename from frontend/src/assets/images/hud/weapons/weapon_golfclub.svg
rename to frontend/assets/images/hud/weapons/weapon_golfclub.svg
diff --git a/frontend/src/assets/images/hud/weapons/weapon_grenade.svg b/frontend/assets/images/hud/weapons/weapon_grenade.svg
similarity index 100%
rename from frontend/src/assets/images/hud/weapons/weapon_grenade.svg
rename to frontend/assets/images/hud/weapons/weapon_grenade.svg
diff --git a/frontend/src/assets/images/hud/weapons/weapon_grenadelauncher_smoke-1.svg b/frontend/assets/images/hud/weapons/weapon_grenadelauncher_smoke-1.svg
similarity index 100%
rename from frontend/src/assets/images/hud/weapons/weapon_grenadelauncher_smoke-1.svg
rename to frontend/assets/images/hud/weapons/weapon_grenadelauncher_smoke-1.svg
diff --git a/frontend/src/assets/images/hud/weapons/weapon_grenadelauncher_smoke.svg b/frontend/assets/images/hud/weapons/weapon_grenadelauncher_smoke.svg
similarity index 100%
rename from frontend/src/assets/images/hud/weapons/weapon_grenadelauncher_smoke.svg
rename to frontend/assets/images/hud/weapons/weapon_grenadelauncher_smoke.svg
diff --git a/frontend/src/assets/images/hud/weapons/weapon_gusenberg.svg b/frontend/assets/images/hud/weapons/weapon_gusenberg.svg
similarity index 100%
rename from frontend/src/assets/images/hud/weapons/weapon_gusenberg.svg
rename to frontend/assets/images/hud/weapons/weapon_gusenberg.svg
diff --git a/frontend/src/assets/images/hud/weapons/weapon_hammer.svg b/frontend/assets/images/hud/weapons/weapon_hammer.svg
similarity index 100%
rename from frontend/src/assets/images/hud/weapons/weapon_hammer.svg
rename to frontend/assets/images/hud/weapons/weapon_hammer.svg
diff --git a/frontend/src/assets/images/hud/weapons/weapon_hatchet.svg b/frontend/assets/images/hud/weapons/weapon_hatchet.svg
similarity index 100%
rename from frontend/src/assets/images/hud/weapons/weapon_hatchet.svg
rename to frontend/assets/images/hud/weapons/weapon_hatchet.svg
diff --git a/frontend/src/assets/images/hud/weapons/weapon_hazardcan-1.svg b/frontend/assets/images/hud/weapons/weapon_hazardcan-1.svg
similarity index 100%
rename from frontend/src/assets/images/hud/weapons/weapon_hazardcan-1.svg
rename to frontend/assets/images/hud/weapons/weapon_hazardcan-1.svg
diff --git a/frontend/src/assets/images/hud/weapons/weapon_hazardcan.svg b/frontend/assets/images/hud/weapons/weapon_hazardcan.svg
similarity index 100%
rename from frontend/src/assets/images/hud/weapons/weapon_hazardcan.svg
rename to frontend/assets/images/hud/weapons/weapon_hazardcan.svg
diff --git a/frontend/src/assets/images/hud/weapons/weapon_heavypistol.svg b/frontend/assets/images/hud/weapons/weapon_heavypistol.svg
similarity index 100%
rename from frontend/src/assets/images/hud/weapons/weapon_heavypistol.svg
rename to frontend/assets/images/hud/weapons/weapon_heavypistol.svg
diff --git a/frontend/src/assets/images/hud/weapons/weapon_heavyshotgun.svg b/frontend/assets/images/hud/weapons/weapon_heavyshotgun.svg
similarity index 100%
rename from frontend/src/assets/images/hud/weapons/weapon_heavyshotgun.svg
rename to frontend/assets/images/hud/weapons/weapon_heavyshotgun.svg
diff --git a/frontend/src/assets/images/hud/weapons/weapon_heavysniper.svg b/frontend/assets/images/hud/weapons/weapon_heavysniper.svg
similarity index 100%
rename from frontend/src/assets/images/hud/weapons/weapon_heavysniper.svg
rename to frontend/assets/images/hud/weapons/weapon_heavysniper.svg
diff --git a/frontend/src/assets/images/hud/weapons/weapon_heavysniper_mk2.svg b/frontend/assets/images/hud/weapons/weapon_heavysniper_mk2.svg
similarity index 100%
rename from frontend/src/assets/images/hud/weapons/weapon_heavysniper_mk2.svg
rename to frontend/assets/images/hud/weapons/weapon_heavysniper_mk2.svg
diff --git a/frontend/src/assets/images/hud/weapons/weapon_hominglauncher.svg b/frontend/assets/images/hud/weapons/weapon_hominglauncher.svg
similarity index 100%
rename from frontend/src/assets/images/hud/weapons/weapon_hominglauncher.svg
rename to frontend/assets/images/hud/weapons/weapon_hominglauncher.svg
diff --git a/frontend/src/assets/images/hud/weapons/weapon_knife.svg b/frontend/assets/images/hud/weapons/weapon_knife.svg
similarity index 100%
rename from frontend/src/assets/images/hud/weapons/weapon_knife.svg
rename to frontend/assets/images/hud/weapons/weapon_knife.svg
diff --git a/frontend/src/assets/images/hud/weapons/weapon_knuckle.svg b/frontend/assets/images/hud/weapons/weapon_knuckle.svg
similarity index 100%
rename from frontend/src/assets/images/hud/weapons/weapon_knuckle.svg
rename to frontend/assets/images/hud/weapons/weapon_knuckle.svg
diff --git a/frontend/src/assets/images/hud/weapons/weapon_machete.svg b/frontend/assets/images/hud/weapons/weapon_machete.svg
similarity index 100%
rename from frontend/src/assets/images/hud/weapons/weapon_machete.svg
rename to frontend/assets/images/hud/weapons/weapon_machete.svg
diff --git a/frontend/src/assets/images/hud/weapons/weapon_machinepistol.svg b/frontend/assets/images/hud/weapons/weapon_machinepistol.svg
similarity index 100%
rename from frontend/src/assets/images/hud/weapons/weapon_machinepistol.svg
rename to frontend/assets/images/hud/weapons/weapon_machinepistol.svg
diff --git a/frontend/src/assets/images/hud/weapons/weapon_marksmanpistol.svg b/frontend/assets/images/hud/weapons/weapon_marksmanpistol.svg
similarity index 100%
rename from frontend/src/assets/images/hud/weapons/weapon_marksmanpistol.svg
rename to frontend/assets/images/hud/weapons/weapon_marksmanpistol.svg
diff --git a/frontend/src/assets/images/hud/weapons/weapon_marksmanrifle.svg b/frontend/assets/images/hud/weapons/weapon_marksmanrifle.svg
similarity index 100%
rename from frontend/src/assets/images/hud/weapons/weapon_marksmanrifle.svg
rename to frontend/assets/images/hud/weapons/weapon_marksmanrifle.svg
diff --git a/frontend/src/assets/images/hud/weapons/weapon_marksmanrifle_mk2.svg b/frontend/assets/images/hud/weapons/weapon_marksmanrifle_mk2.svg
similarity index 100%
rename from frontend/src/assets/images/hud/weapons/weapon_marksmanrifle_mk2.svg
rename to frontend/assets/images/hud/weapons/weapon_marksmanrifle_mk2.svg
diff --git a/frontend/src/assets/images/hud/weapons/weapon_mg.svg b/frontend/assets/images/hud/weapons/weapon_mg.svg
similarity index 100%
rename from frontend/src/assets/images/hud/weapons/weapon_mg.svg
rename to frontend/assets/images/hud/weapons/weapon_mg.svg
diff --git a/frontend/src/assets/images/hud/weapons/weapon_microsmg.svg b/frontend/assets/images/hud/weapons/weapon_microsmg.svg
similarity index 100%
rename from frontend/src/assets/images/hud/weapons/weapon_microsmg.svg
rename to frontend/assets/images/hud/weapons/weapon_microsmg.svg
diff --git a/frontend/src/assets/images/hud/weapons/weapon_militaryrifle.svg b/frontend/assets/images/hud/weapons/weapon_militaryrifle.svg
similarity index 100%
rename from frontend/src/assets/images/hud/weapons/weapon_militaryrifle.svg
rename to frontend/assets/images/hud/weapons/weapon_militaryrifle.svg
diff --git a/frontend/src/assets/images/hud/weapons/weapon_minigun.svg b/frontend/assets/images/hud/weapons/weapon_minigun.svg
similarity index 100%
rename from frontend/src/assets/images/hud/weapons/weapon_minigun.svg
rename to frontend/assets/images/hud/weapons/weapon_minigun.svg
diff --git a/frontend/src/assets/images/hud/weapons/weapon_minismg.svg b/frontend/assets/images/hud/weapons/weapon_minismg.svg
similarity index 100%
rename from frontend/src/assets/images/hud/weapons/weapon_minismg.svg
rename to frontend/assets/images/hud/weapons/weapon_minismg.svg
diff --git a/frontend/src/assets/images/hud/weapons/weapon_molotov.svg b/frontend/assets/images/hud/weapons/weapon_molotov.svg
similarity index 100%
rename from frontend/src/assets/images/hud/weapons/weapon_molotov.svg
rename to frontend/assets/images/hud/weapons/weapon_molotov.svg
diff --git a/frontend/src/assets/images/hud/weapons/weapon_musket.svg b/frontend/assets/images/hud/weapons/weapon_musket.svg
similarity index 100%
rename from frontend/src/assets/images/hud/weapons/weapon_musket.svg
rename to frontend/assets/images/hud/weapons/weapon_musket.svg
diff --git a/frontend/src/assets/images/hud/weapons/weapon_navyrevolver.svg b/frontend/assets/images/hud/weapons/weapon_navyrevolver.svg
similarity index 100%
rename from frontend/src/assets/images/hud/weapons/weapon_navyrevolver.svg
rename to frontend/assets/images/hud/weapons/weapon_navyrevolver.svg
diff --git a/frontend/src/assets/images/hud/weapons/weapon_nightstick.svg b/frontend/assets/images/hud/weapons/weapon_nightstick.svg
similarity index 100%
rename from frontend/src/assets/images/hud/weapons/weapon_nightstick.svg
rename to frontend/assets/images/hud/weapons/weapon_nightstick.svg
diff --git a/frontend/src/assets/images/hud/weapons/weapon_pipebomb.svg b/frontend/assets/images/hud/weapons/weapon_pipebomb.svg
similarity index 100%
rename from frontend/src/assets/images/hud/weapons/weapon_pipebomb.svg
rename to frontend/assets/images/hud/weapons/weapon_pipebomb.svg
diff --git a/frontend/src/assets/images/hud/weapons/weapon_pistol.svg b/frontend/assets/images/hud/weapons/weapon_pistol.svg
similarity index 100%
rename from frontend/src/assets/images/hud/weapons/weapon_pistol.svg
rename to frontend/assets/images/hud/weapons/weapon_pistol.svg
diff --git a/frontend/src/assets/images/hud/weapons/weapon_pistol50.svg b/frontend/assets/images/hud/weapons/weapon_pistol50.svg
similarity index 100%
rename from frontend/src/assets/images/hud/weapons/weapon_pistol50.svg
rename to frontend/assets/images/hud/weapons/weapon_pistol50.svg
diff --git a/frontend/src/assets/images/hud/weapons/weapon_pistol_mk2.svg b/frontend/assets/images/hud/weapons/weapon_pistol_mk2.svg
similarity index 100%
rename from frontend/src/assets/images/hud/weapons/weapon_pistol_mk2.svg
rename to frontend/assets/images/hud/weapons/weapon_pistol_mk2.svg
diff --git a/frontend/src/assets/images/hud/weapons/weapon_poolcue.svg b/frontend/assets/images/hud/weapons/weapon_poolcue.svg
similarity index 100%
rename from frontend/src/assets/images/hud/weapons/weapon_poolcue.svg
rename to frontend/assets/images/hud/weapons/weapon_poolcue.svg
diff --git a/frontend/src/assets/images/hud/weapons/weapon_proxmine.svg b/frontend/assets/images/hud/weapons/weapon_proxmine.svg
similarity index 100%
rename from frontend/src/assets/images/hud/weapons/weapon_proxmine.svg
rename to frontend/assets/images/hud/weapons/weapon_proxmine.svg
diff --git a/frontend/src/assets/images/hud/weapons/weapon_pumpshotgun.svg b/frontend/assets/images/hud/weapons/weapon_pumpshotgun.svg
similarity index 100%
rename from frontend/src/assets/images/hud/weapons/weapon_pumpshotgun.svg
rename to frontend/assets/images/hud/weapons/weapon_pumpshotgun.svg
diff --git a/frontend/src/assets/images/hud/weapons/weapon_pumpshotgun_mk2.svg b/frontend/assets/images/hud/weapons/weapon_pumpshotgun_mk2.svg
similarity index 100%
rename from frontend/src/assets/images/hud/weapons/weapon_pumpshotgun_mk2.svg
rename to frontend/assets/images/hud/weapons/weapon_pumpshotgun_mk2.svg
diff --git a/frontend/src/assets/images/hud/weapons/weapon_railgun.svg b/frontend/assets/images/hud/weapons/weapon_railgun.svg
similarity index 100%
rename from frontend/src/assets/images/hud/weapons/weapon_railgun.svg
rename to frontend/assets/images/hud/weapons/weapon_railgun.svg
diff --git a/frontend/src/assets/images/hud/weapons/weapon_raycarbine.svg b/frontend/assets/images/hud/weapons/weapon_raycarbine.svg
similarity index 100%
rename from frontend/src/assets/images/hud/weapons/weapon_raycarbine.svg
rename to frontend/assets/images/hud/weapons/weapon_raycarbine.svg
diff --git a/frontend/src/assets/images/hud/weapons/weapon_rayminigun.svg b/frontend/assets/images/hud/weapons/weapon_rayminigun.svg
similarity index 100%
rename from frontend/src/assets/images/hud/weapons/weapon_rayminigun.svg
rename to frontend/assets/images/hud/weapons/weapon_rayminigun.svg
diff --git a/frontend/src/assets/images/hud/weapons/weapon_raypistol.svg b/frontend/assets/images/hud/weapons/weapon_raypistol.svg
similarity index 100%
rename from frontend/src/assets/images/hud/weapons/weapon_raypistol.svg
rename to frontend/assets/images/hud/weapons/weapon_raypistol.svg
diff --git a/frontend/src/assets/images/hud/weapons/weapon_revolver.svg b/frontend/assets/images/hud/weapons/weapon_revolver.svg
similarity index 100%
rename from frontend/src/assets/images/hud/weapons/weapon_revolver.svg
rename to frontend/assets/images/hud/weapons/weapon_revolver.svg
diff --git a/frontend/src/assets/images/hud/weapons/weapon_revolver_mk2.svg b/frontend/assets/images/hud/weapons/weapon_revolver_mk2.svg
similarity index 100%
rename from frontend/src/assets/images/hud/weapons/weapon_revolver_mk2.svg
rename to frontend/assets/images/hud/weapons/weapon_revolver_mk2.svg
diff --git a/frontend/src/assets/images/hud/weapons/weapon_rpg.svg b/frontend/assets/images/hud/weapons/weapon_rpg.svg
similarity index 100%
rename from frontend/src/assets/images/hud/weapons/weapon_rpg.svg
rename to frontend/assets/images/hud/weapons/weapon_rpg.svg
diff --git a/frontend/src/assets/images/hud/weapons/weapon_sawnoffshotgun.svg b/frontend/assets/images/hud/weapons/weapon_sawnoffshotgun.svg
similarity index 100%
rename from frontend/src/assets/images/hud/weapons/weapon_sawnoffshotgun.svg
rename to frontend/assets/images/hud/weapons/weapon_sawnoffshotgun.svg
diff --git a/frontend/src/assets/images/hud/weapons/weapon_smg.svg b/frontend/assets/images/hud/weapons/weapon_smg.svg
similarity index 100%
rename from frontend/src/assets/images/hud/weapons/weapon_smg.svg
rename to frontend/assets/images/hud/weapons/weapon_smg.svg
diff --git a/frontend/src/assets/images/hud/weapons/weapon_smg_mk2.svg b/frontend/assets/images/hud/weapons/weapon_smg_mk2.svg
similarity index 100%
rename from frontend/src/assets/images/hud/weapons/weapon_smg_mk2.svg
rename to frontend/assets/images/hud/weapons/weapon_smg_mk2.svg
diff --git a/frontend/src/assets/images/hud/weapons/weapon_sniperrifle.svg b/frontend/assets/images/hud/weapons/weapon_sniperrifle.svg
similarity index 100%
rename from frontend/src/assets/images/hud/weapons/weapon_sniperrifle.svg
rename to frontend/assets/images/hud/weapons/weapon_sniperrifle.svg
diff --git a/frontend/src/assets/images/hud/weapons/weapon_snowball.svg b/frontend/assets/images/hud/weapons/weapon_snowball.svg
similarity index 100%
rename from frontend/src/assets/images/hud/weapons/weapon_snowball.svg
rename to frontend/assets/images/hud/weapons/weapon_snowball.svg
diff --git a/frontend/src/assets/images/hud/weapons/weapon_snspistol.svg b/frontend/assets/images/hud/weapons/weapon_snspistol.svg
similarity index 100%
rename from frontend/src/assets/images/hud/weapons/weapon_snspistol.svg
rename to frontend/assets/images/hud/weapons/weapon_snspistol.svg
diff --git a/frontend/src/assets/images/hud/weapons/weapon_snspistol_mk2.svg b/frontend/assets/images/hud/weapons/weapon_snspistol_mk2.svg
similarity index 100%
rename from frontend/src/assets/images/hud/weapons/weapon_snspistol_mk2.svg
rename to frontend/assets/images/hud/weapons/weapon_snspistol_mk2.svg
diff --git a/frontend/src/assets/images/hud/weapons/weapon_specialcarbine.svg b/frontend/assets/images/hud/weapons/weapon_specialcarbine.svg
similarity index 100%
rename from frontend/src/assets/images/hud/weapons/weapon_specialcarbine.svg
rename to frontend/assets/images/hud/weapons/weapon_specialcarbine.svg
diff --git a/frontend/src/assets/images/hud/weapons/weapon_specialcarbine_mk2.svg b/frontend/assets/images/hud/weapons/weapon_specialcarbine_mk2.svg
similarity index 100%
rename from frontend/src/assets/images/hud/weapons/weapon_specialcarbine_mk2.svg
rename to frontend/assets/images/hud/weapons/weapon_specialcarbine_mk2.svg
diff --git a/frontend/src/assets/images/hud/weapons/weapon_stickybomb.svg b/frontend/assets/images/hud/weapons/weapon_stickybomb.svg
similarity index 100%
rename from frontend/src/assets/images/hud/weapons/weapon_stickybomb.svg
rename to frontend/assets/images/hud/weapons/weapon_stickybomb.svg
diff --git a/frontend/src/assets/images/hud/weapons/weapon_stone_hatchet.svg b/frontend/assets/images/hud/weapons/weapon_stone_hatchet.svg
similarity index 100%
rename from frontend/src/assets/images/hud/weapons/weapon_stone_hatchet.svg
rename to frontend/assets/images/hud/weapons/weapon_stone_hatchet.svg
diff --git a/frontend/src/assets/images/hud/weapons/weapon_stungun.svg b/frontend/assets/images/hud/weapons/weapon_stungun.svg
similarity index 100%
rename from frontend/src/assets/images/hud/weapons/weapon_stungun.svg
rename to frontend/assets/images/hud/weapons/weapon_stungun.svg
diff --git a/frontend/src/assets/images/hud/weapons/weapon_switchblade.svg b/frontend/assets/images/hud/weapons/weapon_switchblade.svg
similarity index 100%
rename from frontend/src/assets/images/hud/weapons/weapon_switchblade.svg
rename to frontend/assets/images/hud/weapons/weapon_switchblade.svg
diff --git a/frontend/src/assets/images/hud/weapons/weapon_tacticalrifle.svg b/frontend/assets/images/hud/weapons/weapon_tacticalrifle.svg
similarity index 100%
rename from frontend/src/assets/images/hud/weapons/weapon_tacticalrifle.svg
rename to frontend/assets/images/hud/weapons/weapon_tacticalrifle.svg
diff --git a/frontend/src/assets/images/hud/weapons/weapon_unarmed.svg b/frontend/assets/images/hud/weapons/weapon_unarmed.svg
similarity index 100%
rename from frontend/src/assets/images/hud/weapons/weapon_unarmed.svg
rename to frontend/assets/images/hud/weapons/weapon_unarmed.svg
diff --git a/frontend/src/assets/images/hud/weapons/weapon_vintagepistol.svg b/frontend/assets/images/hud/weapons/weapon_vintagepistol.svg
similarity index 100%
rename from frontend/src/assets/images/hud/weapons/weapon_vintagepistol.svg
rename to frontend/assets/images/hud/weapons/weapon_vintagepistol.svg
diff --git a/frontend/src/assets/images/hud/weapons/weapon_wrench.svg b/frontend/assets/images/hud/weapons/weapon_wrench.svg
similarity index 100%
rename from frontend/src/assets/images/hud/weapons/weapon_wrench.svg
rename to frontend/assets/images/hud/weapons/weapon_wrench.svg
diff --git a/frontend/src/assets/images/selector/1.svg b/frontend/assets/images/selector/1.svg
similarity index 100%
rename from frontend/src/assets/images/selector/1.svg
rename to frontend/assets/images/selector/1.svg
diff --git a/frontend/src/assets/images/selector/2.svg b/frontend/assets/images/selector/2.svg
similarity index 100%
rename from frontend/src/assets/images/selector/2.svg
rename to frontend/assets/images/selector/2.svg
diff --git a/frontend/src/assets/images/selector/3.svg b/frontend/assets/images/selector/3.svg
similarity index 100%
rename from frontend/src/assets/images/selector/3.svg
rename to frontend/assets/images/selector/3.svg
diff --git a/frontend/src/assets/images/selector/bg.svg b/frontend/assets/images/selector/bg.svg
similarity index 100%
rename from frontend/src/assets/images/selector/bg.svg
rename to frontend/assets/images/selector/bg.svg
diff --git a/frontend/src/assets/images/selector/crazy.png b/frontend/assets/images/selector/crazy.png
similarity index 100%
rename from frontend/src/assets/images/selector/crazy.png
rename to frontend/assets/images/selector/crazy.png
diff --git a/frontend/src/assets/images/selector/create.svg b/frontend/assets/images/selector/create.svg
similarity index 100%
rename from frontend/src/assets/images/selector/create.svg
rename to frontend/assets/images/selector/create.svg
diff --git a/frontend/src/assets/images/selector/icons/bank.svg b/frontend/assets/images/selector/icons/bank.svg
similarity index 100%
rename from frontend/src/assets/images/selector/icons/bank.svg
rename to frontend/assets/images/selector/icons/bank.svg
diff --git a/frontend/src/assets/images/selector/icons/level.svg b/frontend/assets/images/selector/icons/level.svg
similarity index 100%
rename from frontend/src/assets/images/selector/icons/level.svg
rename to frontend/assets/images/selector/icons/level.svg
diff --git a/frontend/src/assets/images/selector/icons/money.svg b/frontend/assets/images/selector/icons/money.svg
similarity index 100%
rename from frontend/src/assets/images/selector/icons/money.svg
rename to frontend/assets/images/selector/icons/money.svg
diff --git a/frontend/src/assets/images/settings/hidden.svg b/frontend/assets/images/settings/hidden.svg
similarity index 100%
rename from frontend/src/assets/images/settings/hidden.svg
rename to frontend/assets/images/settings/hidden.svg
diff --git a/frontend/src/assets/images/settings/keyboard.svg b/frontend/assets/images/settings/keyboard.svg
similarity index 100%
rename from frontend/src/assets/images/settings/keyboard.svg
rename to frontend/assets/images/settings/keyboard.svg
diff --git a/frontend/src/assets/images/settings/recover.svg b/frontend/assets/images/settings/recover.svg
similarity index 100%
rename from frontend/src/assets/images/settings/recover.svg
rename to frontend/assets/images/settings/recover.svg
diff --git a/frontend/src/assets/images/settings/security.svg b/frontend/assets/images/settings/security.svg
similarity index 100%
rename from frontend/src/assets/images/settings/security.svg
rename to frontend/assets/images/settings/security.svg
diff --git a/frontend/src/assets/images/settings/shown.svg b/frontend/assets/images/settings/shown.svg
similarity index 100%
rename from frontend/src/assets/images/settings/shown.svg
rename to frontend/assets/images/settings/shown.svg
diff --git a/frontend/src/assets/images/settings/toggle.svg b/frontend/assets/images/settings/toggle.svg
similarity index 100%
rename from frontend/src/assets/images/settings/toggle.svg
rename to frontend/assets/images/settings/toggle.svg
diff --git a/frontend/assets/styles/fonts.scss b/frontend/assets/styles/fonts.scss
new file mode 100644
index 0000000000000000000000000000000000000000..de513d4ff234f8cac94973924d51e4566fa98227
--- /dev/null
+++ b/frontend/assets/styles/fonts.scss
@@ -0,0 +1,4 @@
+@font-face {
+    font-family: "Beast Duh";
+    src: url("~/assets/fonts/BebasNeue-Regular.ttf");
+}
\ No newline at end of file
diff --git a/frontend/src/styles/init.scss b/frontend/assets/styles/init.scss
similarity index 80%
rename from frontend/src/styles/init.scss
rename to frontend/assets/styles/init.scss
index 494089a3be461d28c3047bedaca756049fa45609..161b77a041ca451ee60c6e9bb9ebf7b905217da8 100644
--- a/frontend/src/styles/init.scss
+++ b/frontend/assets/styles/init.scss
@@ -2,28 +2,28 @@
 *::before,
 *::after {
     padding: 0;
     margin: 0;
     box-sizing: border-box;
     user-select: none;
     list-style: none;
     text-decoration: none;
     touch-action: manipulation;
 }
 
 ::-webkit-inner-spin-button,
 ::-webkit-outer-spin-button {
     display: none;
 }
 
 html {
     font-size: 1.2037037037037037vh;
     color: white;
     overflow: hidden;
 }
 
 body {
     width: 100vw;
     height: 100vh;
-       //background: url('../assets/images/bg.png') no-repeat;
-       //background-size: cover;
-}
\ No newline at end of file
+    // background: url('~/assets/images/bg.png') no-repeat;
+    // background-size: cover;
+}
diff --git a/frontend/src/styles/notification.scss b/frontend/assets/styles/notification.scss
similarity index 100%
rename from frontend/src/styles/notification.scss
rename to frontend/assets/styles/notification.scss
diff --git a/frontend/src/styles/vars.scss b/frontend/assets/styles/vars.scss
similarity index 100%
rename from frontend/src/styles/vars.scss
rename to frontend/assets/styles/vars.scss
diff --git a/frontend/components/pages/auth/Authentication.vue b/frontend/components/pages/auth/Authentication.vue
new file mode 100644
index 0000000000000000000000000000000000000000..0836cc765738f43e640c4cbd91b5c6b61086ea7d
--- /dev/null
+++ b/frontend/components/pages/auth/Authentication.vue
@@ -0,0 +1,23 @@
+<template>
+  <div class="auth-page">
+    <component :is="currentComponent" @switch="setForm" />
+  </div>
+</template>
+
+<script setup lang="ts">
+import { computed, ref } from "vue";
+import AuthForm from "./components/AuthForm.vue";
+import RegisterForm from "./components/RegisterForm.vue";
+
+const form = ref<"auth" | "reg">("auth");
+
+const currentComponent = computed(() => (form.value === "auth" ? AuthForm : RegisterForm));
+
+function setForm(next: "auth" | "reg") {
+  form.value = next;
+}
+</script>
+
+<style scoped lang="scss">
+@import "./auth.scss";
+</style>
diff --git a/frontend/components/pages/auth/auth.scss b/frontend/components/pages/auth/auth.scss
new file mode 100644
index 0000000000000000000000000000000000000000..2ab401aba800e95f7517553f656c2c45a1f40e4c
--- /dev/null
+++ b/frontend/components/pages/auth/auth.scss
@@ -0,0 +1,116 @@
+.auth-page {
+  position: absolute;
+  inset: 0;
+  width: 100vw;
+  height: 100vh;
+  background: url('~/assets/images/selector/bg.svg') no-repeat;
+  background-size: cover;
+  font-family: Arial, Helvetica, sans-serif;
+  transition: all 0.2s;
+  z-index: 1;
+
+  &::before {
+    position: absolute;
+    content: "";
+    width: 100%;
+    height: 100%;
+    background: url('~/assets/images/auth/chars.png') no-repeat;
+    background-size: cover;
+    opacity: 0.2;
+    margin-left: -25vh;
+    z-index: -1;
+    animation: slide-right 0.5s forwards;
+  }
+
+  @keyframes slide-right {
+    0% {
+      transform: translateX(-100vh);
+    }
+
+    100% {
+      transform: translateX(100px);
+    }
+  }
+
+  .authform {
+    position: absolute;
+    right: 10vh;
+    width: 50vh;
+    height: 100%;
+    display: flex;
+    flex-direction: column;
+    align-items: center;
+    justify-content: center;
+    border-radius: 0.6vh;
+
+    .content {
+      display: flex;
+      align-items: center;
+      justify-content: center;
+      flex-direction: column;
+      gap: 2vh;
+
+      input {
+        font-family: Arial, Helvetica, sans-serif;
+        outline: none;
+        border: none;
+        font-size: 17px;
+        border-bottom: 0.1vh solid red;
+        background: linear-gradient(to left, #1e1b20, transparent);
+        width: 30vh;
+        height: 5vh;
+        padding: 0.5vh;
+        color: white;
+      }
+
+      .submit {
+        display: flex;
+        align-items: center;
+        justify-content: center;
+        color: white;
+        gap: 0.5vh;
+        background: #28272b;
+        border-radius: 0.5vh;
+        border: none;
+        width: 25vh;
+        height: 4.5vh;
+        font-family: "Beast Duh";
+        font-size: 3vh;
+        text-shadow: 0 0 5vh black;
+        cursor: pointer;
+
+        img {
+          width: 2.4vh;
+          height: 2.4vh;
+        }
+      }
+
+      input.usernameInput {
+        position: relative;
+        padding-left: 4vh;
+
+        &::placeholder {
+          color: rgba(255, 255, 255, 0.6);
+        }
+      }
+    }
+
+    .footer {
+      display: flex;
+      flex-direction: column;
+      align-items: center;
+      justify-content: center;
+      gap: 0.2vh;
+      position: relative;
+      font-family: Arial, Helvetica, sans-serif;
+      text-transform: uppercase;
+      margin-top: 2vh;
+      font-size: 15px;
+
+      span {
+        color: #f97316;
+        cursor: pointer;
+      }
+    }
+  }
+}
diff --git a/frontend/components/pages/auth/components/AuthForm.vue b/frontend/components/pages/auth/components/AuthForm.vue
new file mode 100644
index 0000000000000000000000000000000000000000..483d2a798d5a0714ed2b6acdb3320440954987b6
--- /dev/null
+++ b/frontend/components/pages/auth/components/AuthForm.vue
@@ -0,0 +1,62 @@
+<template>
+  <div class="authform" ref="authForm">
+    <form autocomplete="off" @submit.prevent="onSubmit">
+      <div class="content">
+        <input
+          v-model="username"
+          class="usernameInput"
+          type="text"
+          name="auth_username"
+          maxlength="32"
+          placeholder="Username"
+          autocomplete="off"
+        />
+        <input
+          v-model="password"
+          type="password"
+          name="auth_password"
+          maxlength="74"
+          placeholder="Password"
+        />
+        <button class="submit" type="submit" name="auth_submit">
+          Login
+          <img src="~/assets/images/auth/icons/login.svg" alt="login" />
+        </button>
+      </div>
+    </form>
+    <div class="footer">
+      Don't have an account?
+      <span @click="emit('switch', 'reg')">Register now!</span>
+    </div>
+  </div>
+</template>
+
+<script setup lang="ts">
+import { ref } from "vue";
+import EventManager from "~/utils/EventManager.util";
+import Notification from "~/utils/NotifyManager.util";
+
+const emit = defineEmits<{
+  (event: "switch", value: "auth" | "reg"): void;
+}>();
+
+const username = ref("");
+const password = ref("");
+const authForm = ref<HTMLDivElement | null>(null);
+
+const onSubmit = () => {
+  if (!username.value || !password.value) {
+    Notification.error("Fill out the forms!");
+    return;
+  }
+
+  EventManager.emitServer("auth", "loginPlayer", {
+    username: username.value,
+    password: password.value
+  });
+
+  username.value = "";
+  password.value = "";
+};
+</script>
+
diff --git a/frontend/components/pages/auth/components/RegisterForm.vue b/frontend/components/pages/auth/components/RegisterForm.vue
new file mode 100644
index 0000000000000000000000000000000000000000..138c850120d9b1ba117b81b9dac165bc90dafe70
--- /dev/null
+++ b/frontend/components/pages/auth/components/RegisterForm.vue
@@ -0,0 +1,82 @@
+<template>
+  <div class="authform" ref="authForm">
+    <form autocomplete="off" @submit.prevent="onSubmit">
+      <div class="content">
+        <input
+          v-model="username"
+          class="usernameInput"
+          type="text"
+          name="auth_username"
+          maxlength="32"
+          placeholder="Username"
+          autocomplete="off"
+        />
+        <input
+          v-model="email"
+          type="email"
+          name="auth_email"
+          maxlength="32"
+          placeholder="Email"
+          autocomplete="off"
+        />
+        <input
+          v-model="password"
+          type="password"
+          name="auth_password"
+          maxlength="74"
+          placeholder="Password"
+        />
+        <input
+          v-model="confirmPassword"
+          type="password"
+          name="auth_confirm_password"
+          maxlength="74"
+          placeholder="Confirm Password"
+        />
+        <button class="submit" type="submit" name="auth_submit">
+          Register
+          <img src="~/assets/images/auth/icons/register.svg" alt="register" />
+        </button>
+      </div>
+    </form>
+    <div class="footer">
+      Already have an account?
+      <span @click="emit('switch', 'auth')">Login now!</span>
+    </div>
+  </div>
+</template>
+
+<script setup lang="ts">
+import { ref } from "vue";
+import EventManager from "~/utils/EventManager.util";
+import Notification from "~/utils/NotifyManager.util";
+
+const emit = defineEmits<{
+  (event: "switch", value: "auth" | "reg"): void;
+}>();
+
+const username = ref("");
+const email = ref("");
+const password = ref("");
+const confirmPassword = ref("");
+const authForm = ref<HTMLDivElement | null>(null);
+
+const onSubmit = () => {
+  if (!username.value || !password.value || !email.value || !confirmPassword.value) {
+    Notification.error("Fill out the forms!");
+    return;
+  }
+
+  EventManager.emitServer("auth", "register", {
+    username: username.value,
+    email: email.value,
+    password: password.value,
+    confirmPassword: confirmPassword.value
+  });
+
+  username.value = "";
+  email.value = "";
+  password.value = "";
+  confirmPassword.value = "";
+};
+</script>
diff --git a/frontend/components/pages/common/PagePlaceholder.vue b/frontend/components/pages/common/PagePlaceholder.vue
new file mode 100644
index 0000000000000000000000000000000000000000..8fbd88b5f80fc10cf1f23cad8e22dd8873572eb3
--- /dev/null
+++ b/frontend/components/pages/common/PagePlaceholder.vue
@@ -0,0 +1,50 @@
+<template>
+  <div class="placeholder">
+    <UCard class="placeholder-card">
+      <template #header>
+        <div class="title">{{ title }}</div>
+      </template>
+      <p class="description">
+        {{ description }}
+      </p>
+    </UCard>
+  </div>
+</template>
+
+<script setup lang="ts">
+defineProps<{
+  title: string;
+  description: string;
+}>();
+</script>
+
+<style scoped lang="scss">
+.placeholder {
+  display: flex;
+  align-items: center;
+  justify-content: center;
+  width: 100vw;
+  height: 100vh;
+  background: rgba(15, 23, 42, 0.9);
+  backdrop-filter: blur(10px);
+  padding: 2rem;
+}
+
+.placeholder-card {
+  width: min(720px, 100%);
+  background: rgba(30, 41, 59, 0.92);
+  color: white;
+  text-align: center;
+  box-shadow: 0 24px 64px rgba(0, 0, 0, 0.4);
+}
+
+.title {
+  font-size: 1.75rem;
+  font-weight: 600;
+}
+
+.description {
+  font-size: 1rem;
+  opacity: 0.85;
+}
+</style>
diff --git a/frontend/components/pages/common/createPlaceholder.ts b/frontend/components/pages/common/createPlaceholder.ts
new file mode 100644
index 0000000000000000000000000000000000000000..f482b689dccdf06470210da836c558c53149acab
--- /dev/null
+++ b/frontend/components/pages/common/createPlaceholder.ts
@@ -0,0 +1,11 @@
+import { defineComponent, h } from "vue";
+import PagePlaceholder from "~/components/pages/common/PagePlaceholder.vue";
+
+export function createPlaceholderComponent(title: string, description: string) {
+  return defineComponent({
+    name: `${title.replace(/\s+/g, "")}Placeholder`,
+    setup() {
+      return () => h(PagePlaceholder, { title, description });
+    }
+  });
+}
diff --git a/frontend/components/pages/hud/HudPlaceholder.vue b/frontend/components/pages/hud/HudPlaceholder.vue
new file mode 100644
index 0000000000000000000000000000000000000000..983b82d2d3651cc1a66850500c9f2a3104c8c0ba
--- /dev/null
+++ b/frontend/components/pages/hud/HudPlaceholder.vue
@@ -0,0 +1,10 @@
+<template>
+  <PagePlaceholder
+    title="HUD migration in progress"
+    description="Legacy HUD widgets are being rebuilt with Vue and Nuxt UI. Gameplay overlays will reappear here once the migration is finished."
+  />
+</template>
+
+<script setup lang="ts">
+import PagePlaceholder from "~/components/pages/common/PagePlaceholder.vue";
+</script>
diff --git a/frontend/composables/pageRegistry.ts b/frontend/composables/pageRegistry.ts
new file mode 100644
index 0000000000000000000000000000000000000000..4ab5d114e1ed1aaca63a52382aff70576e7cc3e4
--- /dev/null
+++ b/frontend/composables/pageRegistry.ts
@@ -0,0 +1,35 @@
+import type { Component } from "vue";
+
+type RegisteredPage = {
+  component: Component;
+  props?: Record<string, any>;
+};
+
+const registry = new Map<string, RegisteredPage>();
+
+export function registerPage<T extends RegisteredPage["props"] = Record<string, any>>(
+  name: string,
+  component: Component,
+  props?: T
+): void {
+  if (registry.has(name)) {
+    if (import.meta.dev) {
+      console.warn(`Page '${name}' is already registered, skipping duplicate registration.`);
+    }
+    return;
+  }
+
+  registry.set(name, { component, props });
+}
+
+export function getRegisteredPage(name: string | null): RegisteredPage | null {
+  if (!name) {
+    return null;
+  }
+
+  return registry.get(name) ?? null;
+}
+
+export function useCurrentPage() {
+  return useState<string | null>("ui-current-page", () => null);
+}
diff --git a/frontend/src/configs/colors.ts b/frontend/configs/colors.ts
similarity index 100%
rename from frontend/src/configs/colors.ts
rename to frontend/configs/colors.ts
diff --git a/frontend/eslint.config.mjs b/frontend/eslint.config.mjs
deleted file mode 100644
index 0b333cd1824868e347b800d7189181d8203b02bd..0000000000000000000000000000000000000000
--- a/frontend/eslint.config.mjs
+++ /dev/null
@@ -1,26 +0,0 @@
-import globals from "globals";
-import pluginJs from "@eslint/js";
-import tseslint from "@typescript-eslint/eslint-plugin";
-import pluginReactConfig from "eslint-plugin-react/configs/recommended.js";
-
-export default [
-  {
-    languageOptions: {
-      globals: globals.browser,
-      parser: "@typescript-eslint/parser",
-      parserOptions: {
-        ecmaFeatures: { jsx: true },
-        ecmaVersion: "latest",
-        sourceType: "module",
-      },
-    },
-    rules: {
-      "react/react-in-jsx-scope": "off",
-      "react/jsx-uses-react": "off",
-      "@typescript-eslint/no-explicit-any": "off",
-    },
-  },
-  pluginJs.configs.recommended,
-  tseslint.configs.recommended,
-  pluginReactConfig,
-];
diff --git a/frontend/index.html b/frontend/index.html
deleted file mode 100644
index 8d909a3edf02a7c787ead6e4a9c7358e33db36eb..0000000000000000000000000000000000000000
--- a/frontend/index.html
+++ /dev/null
@@ -1,15 +0,0 @@
-<!DOCTYPE html>
-<html lang="en">
-    <head>
-        <meta charset="utf-8"/>
-        <meta name="viewport" content="width=device-width, initial-scale=1"/>
-        <meta name="theme-color" content="#000000"/>
-        <title>Shr0x Framework</title>
-    </head>
-    <body>
-        <noscript>You need to enable JavaScript to run this app.</noscript>
-        <div id="root"></div>
-
-        <script type="module" src="/src/index.tsx"></script>
-    </body>
-</html>
diff --git a/frontend/layouts/default.vue b/frontend/layouts/default.vue
new file mode 100644
index 0000000000000000000000000000000000000000..406f2973de99ef61b580550529f67aefc6c349b6
--- /dev/null
+++ b/frontend/layouts/default.vue
@@ -0,0 +1,17 @@
+<template>
+  <div class="app-shell">
+    <slot />
+  </div>
+</template>
+
+<style scoped>
+.app-shell {
+  min-height: 100vh;
+  width: 100%;
+  overflow: hidden;
+  background: radial-gradient(circle at top left, rgba(56, 189, 248, 0.1), transparent 60%),
+    linear-gradient(180deg, rgba(15, 23, 42, 0.9), rgba(15, 23, 42, 0.95));
+  color: white;
+  font-family: "Montserrat", sans-serif;
+}
+</style>
diff --git a/frontend/nuxt.config.ts b/frontend/nuxt.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..0c3114e0a54f5f177ec638a0933748e07a95630d
--- /dev/null
+++ b/frontend/nuxt.config.ts
@@ -0,0 +1,17 @@
+import { defineNuxtConfig } from "nuxt/config";
+
+export default defineNuxtConfig({
+  devtools: { enabled: true },
+  modules: ["@nuxt/ui"],
+  css: ["~/assets/styles/init.scss"],
+  components: [{ path: "~/components", pathPrefix: false }],
+  vite: {
+    css: {
+      preprocessorOptions: {
+        scss: {
+          additionalData: '@use "~/assets/styles/vars.scss" as *;'
+        }
+      }
+    }
+  }
+});
diff --git a/frontend/package.json b/frontend/package.json
index 30d7de3147f0eccbe6a9265873fd4d60aa6e8fdb..ce67887359e7e96d53adb7b2bda2001e21aac362 100644
--- a/frontend/package.json
+++ b/frontend/package.json
@@ -1,48 +1,26 @@
 {
-  "name": "ragemp-rp-frontend",
-  "version": "0.0.8",
-  "description": "Frontend part of RAGEMP RP Gamemode",
-  "homepage": ".",
+  "name": "rp-gamemode-frontend",
+  "private": true,
+  "type": "module",
   "scripts": {
-    "start": "vite",
-    "build:watch": "tsc && vite build --watch",
-    "build": "tsc && vite build",
-    "preview": "vite preview"
+    "dev": "nuxt dev",
+    "build": "nuxt build",
+    "generate": "nuxt generate",
+    "preview": "nuxt preview",
+    "lint": "eslint --ext .ts,.vue ."
   },
-  "author": "rShr0x",
-  "license": "MIT",
   "dependencies": {
-    "@babel/plugin-proposal-private-property-in-object": "^7.21.11",
-    "@vitejs/plugin-react": "^4.3.0",
-    "classnames": "^2.5.1",
-    "react": "^18.2.0",
-    "react-dom": "^18.2.0",
-    "react-toastify": "^9.1.3",
-    "sass": "^1.56.1",
-    "vite": "^5.2.11",
-    "vite-tsconfig-paths": "^4.3.2"
+    "@nuxt/ui": "^2.11.0",
+    "nuxt": "^3.10.0"
   },
   "devDependencies": {
-    "@eslint/js": "^9.3.0",
-    "@types/react": "^18.0.25",
-    "@types/react-dom": "^18.0.8",
-    "eslint": "^8.57.0",
-    "eslint-plugin-react": "^7.34.1",
-    "globals": "^15.3.0",
-    "mobx": "^6.12.0",
-    "mobx-react-lite": "^3.4.0",
-    "typescript-eslint": "^7.10.0"
-  },
-  "browserslist": {
-    "production": [
-      ">0.2%",
-      "not dead",
-      "not op_mini all"
-    ],
-    "development": [
-      "last 1 chrome version",
-      "last 1 firefox version",
-      "last 1 safari version"
-    ]
+    "@typescript-eslint/eslint-plugin": "^6.21.0",
+    "@typescript-eslint/parser": "^6.21.0",
+    "@types/node": "^20.11.10",
+    "eslint": "^8.56.0",
+    "eslint-config-prettier": "^9.1.0",
+    "eslint-plugin-vue": "^9.20.0",
+    "sass": "^1.69.6",
+    "typescript": "^5.3.3"
   }
 }
diff --git a/frontend/page-modules/atm.ts b/frontend/page-modules/atm.ts
new file mode 100644
index 0000000000000000000000000000000000000000..3823e91795621ebe8e95af890614c60e45c481df
--- /dev/null
+++ b/frontend/page-modules/atm.ts
@@ -0,0 +1,9 @@
+import { registerPage } from "~/composables/pageRegistry";
+import { createPlaceholderComponent } from "~/components/pages/common/createPlaceholder";
+
+const AtmPlaceholder = createPlaceholderComponent(
+  "ATM",
+  "The ATM interface is currently undergoing the Vue migration. Deposits and withdrawals will be back shortly."
+);
+
+registerPage("atm", AtmPlaceholder);
diff --git a/frontend/page-modules/auth.ts b/frontend/page-modules/auth.ts
new file mode 100644
index 0000000000000000000000000000000000000000..7323e51ff9264b999881b7b8f041ae62bf9ddf22
--- /dev/null
+++ b/frontend/page-modules/auth.ts
@@ -0,0 +1,4 @@
+import { registerPage } from "~/composables/pageRegistry";
+import Authentication from "~/components/pages/auth/Authentication.vue";
+
+registerPage("auth", Authentication);
diff --git a/frontend/page-modules/creator.ts b/frontend/page-modules/creator.ts
new file mode 100644
index 0000000000000000000000000000000000000000..8996cc4df54b94948551dcefdc5ce40c87c0583c
--- /dev/null
+++ b/frontend/page-modules/creator.ts
@@ -0,0 +1,9 @@
+import { registerPage } from "~/composables/pageRegistry";
+import { createPlaceholderComponent } from "~/components/pages/common/createPlaceholder";
+
+const CreatorPlaceholder = createPlaceholderComponent(
+  "Character Creator",
+  "The character creator flow is being rebuilt in Vue. Use the legacy interface until this port is completed."
+);
+
+registerPage("creator", CreatorPlaceholder);
diff --git a/frontend/page-modules/hud.ts b/frontend/page-modules/hud.ts
new file mode 100644
index 0000000000000000000000000000000000000000..093bd76c2ec1795904a77b8f634fca47ac7de76f
--- /dev/null
+++ b/frontend/page-modules/hud.ts
@@ -0,0 +1,4 @@
+import { registerPage } from "~/composables/pageRegistry";
+import HudPlaceholder from "~/components/pages/hud/HudPlaceholder.vue";
+
+registerPage("hud", HudPlaceholder);
diff --git a/frontend/page-modules/selectcharacter.ts b/frontend/page-modules/selectcharacter.ts
new file mode 100644
index 0000000000000000000000000000000000000000..19aa08376374d786b7e6e0c744dc2aaaf1dc9306
--- /dev/null
+++ b/frontend/page-modules/selectcharacter.ts
@@ -0,0 +1,9 @@
+import { registerPage } from "~/composables/pageRegistry";
+import { createPlaceholderComponent } from "~/components/pages/common/createPlaceholder";
+
+const SelectPlaceholder = createPlaceholderComponent(
+  "Character Selection",
+  "The multi-character selection screen is being migrated to Vue. It will be available again shortly."
+);
+
+registerPage("selectcharacter", SelectPlaceholder);
diff --git a/frontend/page-modules/settings.ts b/frontend/page-modules/settings.ts
new file mode 100644
index 0000000000000000000000000000000000000000..1a4906e0c0989a920302a5a1f875e44cdcc38ee9
--- /dev/null
+++ b/frontend/page-modules/settings.ts
@@ -0,0 +1,9 @@
+import { registerPage } from "~/composables/pageRegistry";
+import { createPlaceholderComponent } from "~/components/pages/common/createPlaceholder";
+
+const SettingsPlaceholder = createPlaceholderComponent(
+  "Settings",
+  "The in-game settings menu is in the middle of a Vue makeover. Configuration options will be restored once porting concludes."
+);
+
+registerPage("settings", SettingsPlaceholder);
diff --git a/frontend/page-modules/tattooshop.ts b/frontend/page-modules/tattooshop.ts
new file mode 100644
index 0000000000000000000000000000000000000000..b8989c4d8b7ad292c0c85d9c93b505986f507cba
--- /dev/null
+++ b/frontend/page-modules/tattooshop.ts
@@ -0,0 +1,9 @@
+import { registerPage } from "~/composables/pageRegistry";
+import { createPlaceholderComponent } from "~/components/pages/common/createPlaceholder";
+
+const TattooPlaceholder = createPlaceholderComponent(
+  "Tattoo Shop",
+  "The tattoo customization UI is being rebuilt with Vue and Nuxt UI. Please hang tight while we finish the migration."
+);
+
+registerPage("tattooshop", TattooPlaceholder);
diff --git a/frontend/pages/index.vue b/frontend/pages/index.vue
new file mode 100644
index 0000000000000000000000000000000000000000..e9398e177ad0e0575149dd6bd2c18a7b7ad557dc
--- /dev/null
+++ b/frontend/pages/index.vue
@@ -0,0 +1,32 @@
+<template>
+  <div class="app">
+    <ClientOnly>
+      <component v-if="currentPage" :is="currentPage.component" v-bind="currentPage.props" />
+    </ClientOnly>
+  </div>
+</template>
+
+<script setup lang="ts">
+import { computed } from "vue";
+import { getRegisteredPage, useCurrentPage } from "~/composables/pageRegistry";
+
+const modules = import.meta.glob("~/page-modules/*.ts", { eager: true });
+void modules;
+
+const page = useCurrentPage();
+
+if (!page.value) {
+  page.value = "auth";
+}
+
+const currentPage = computed(() => getRegisteredPage(page.value));
+</script>
+
+<style scoped>
+.app {
+  position: relative;
+  width: 100vw;
+  height: 100vh;
+  overflow: hidden;
+}
+</style>
diff --git a/frontend/plugins/notifications.client.ts b/frontend/plugins/notifications.client.ts
new file mode 100644
index 0000000000000000000000000000000000000000..cb807e1c3280620aac9fb9c0b5d1a44398af27b2
--- /dev/null
+++ b/frontend/plugins/notifications.client.ts
@@ -0,0 +1,39 @@
+import { defineNuxtPlugin } from "#app";
+import Notification from "~/utils/NotifyManager.util";
+
+const typeColorMap: Record<string, string> = {
+  success: "green",
+  info: "blue",
+  error: "red",
+  warning: "amber",
+  warn: "amber",
+  dark: "slate",
+  loading: "blue",
+  promise: "blue"
+};
+
+export default defineNuxtPlugin(() => {
+  if (!process.client) {
+    return;
+  }
+
+  const toast = useToast();
+
+  Notification.subscribe(({ type, message, skin }) => {
+    if (type === "loading") {
+      toast.add({
+        title: message,
+        icon: "i-ph-spinner",
+        color: skin === "light" ? "gray" : typeColorMap[type] ?? "slate",
+        timeout: 0
+      });
+      return;
+    }
+
+    toast.add({
+      title: message,
+      color: skin === "light" ? "gray" : typeColorMap[type] ?? "slate",
+      timeout: 4000
+    });
+  });
+});
diff --git a/frontend/plugins/page-events.client.ts b/frontend/plugins/page-events.client.ts
new file mode 100644
index 0000000000000000000000000000000000000000..f168b38e833741be8bfe9aee60430329850b3df4
--- /dev/null
+++ b/frontend/plugins/page-events.client.ts
@@ -0,0 +1,23 @@
+import { defineNuxtPlugin } from "#app";
+import EventManager from "~/utils/EventManager.util";
+import Notification from "~/utils/NotifyManager.util";
+import { useCurrentPage } from "~/composables/pageRegistry";
+
+export default defineNuxtPlugin(() => {
+  if (!process.client) {
+    return;
+  }
+
+  const page = useCurrentPage();
+
+  const setPage = (newPage: string | null) => {
+    page.value = newPage;
+  };
+
+  EventManager.addHandler("system", "setPage", setPage);
+  EventManager.addHandler("notify", "show", (data: { type: any; message: string; skin: any }) =>
+    Notification.show(data.type, data.message, data.skin)
+  );
+  EventManager.stopAddingHandler("notify");
+  EventManager.stopAddingHandler("system");
+});
diff --git a/frontend/src/App.tsx b/frontend/src/App.tsx
deleted file mode 100644
index e41de76ded4397165fee8985765fb8e19bc77f0c..0000000000000000000000000000000000000000
--- a/frontend/src/App.tsx
+++ /dev/null
@@ -1,61 +0,0 @@
-import { FC, Suspense, lazy, useEffect } from "react";
-import { ToastContainer } from "react-toastify";
-import { PageProvider, usePage } from "./PageContext";
-
-import Notification from "utils/NotifyManager.util";
-import EventManager from "utils/EventManager.util";
-
-import { chatStore } from "store/Chat.store";
-import { getRegisteredComponent } from "./hoc/registerComponent";
-
-import "./pages";
-
-const Chat = lazy(() => import("pages/hud/Chat/Chat"));
-
-const AppContent: FC = () => {
-    const { page, setPage } = usePage();
-    const pageComponent = getRegisteredComponent(page);
-
-    useEffect(() => {
-        const handleSetPage = (newPage: string | null) => setPage(newPage);
-
-        EventManager.addHandler("system", "setPage", handleSetPage);
-        EventManager.addHandler("notify", "show", (data: { type: any; message: string; skin: any }) => Notification.show(data.type, data.message, data.skin));
-
-        return () => {
-            EventManager.stopAddingHandler("notify");
-            EventManager.stopAddingHandler("system");
-        };
-    }, []);
-
-    return (
-        <div className="app">
-            <Suspense fallback={<div>Loading...</div>}>
-                <Chat store={chatStore} isVisible={page === "hud"} />
-                <ToastContainer
-                    position="bottom-left"
-                    autoClose={5000}
-                    hideProgressBar={false}
-                    newestOnTop={false}
-                    closeOnClick
-                    rtl={false}
-                    pauseOnFocusLoss
-                    draggable={false}
-                    pauseOnHover
-                    theme="dark"
-                />
-                {pageComponent && <pageComponent.component {...pageComponent.props} />}
-            </Suspense>
-        </div>
-    );
-};
-
-const App: FC = () => {
-    return (
-        <PageProvider>
-            <AppContent />
-        </PageProvider>
-    );
-};
-
-export default App;
diff --git a/frontend/src/PageContext.tsx b/frontend/src/PageContext.tsx
deleted file mode 100644
index 29f67f6bf3210b190a93bb293757a21dba838ba8..0000000000000000000000000000000000000000
--- a/frontend/src/PageContext.tsx
+++ /dev/null
@@ -1,16 +0,0 @@
-import { createContext, useContext, useState, useCallback, FC, ReactNode } from "react";
-
-const PageContext = createContext({
-    page: null as string | null,
-    setPage: (page: string | null) => {}
-});
-
-export const PageProvider: FC<{ children: ReactNode }> = ({ children }) => {
-    const [page, setPage] = useState<string | null>(null);
-
-    const handleSetPage = useCallback((newPage: string | null) => setPage(newPage), []);
-
-    return <PageContext.Provider value={{ page, setPage: handleSetPage }}>{children}</PageContext.Provider>;
-};
-
-export const usePage = () => useContext(PageContext);
diff --git a/frontend/src/hoc/registerComponent.ts b/frontend/src/hoc/registerComponent.ts
deleted file mode 100644
index 0134d69522cadda936adeb48b284fefce43edabd..0000000000000000000000000000000000000000
--- a/frontend/src/hoc/registerComponent.ts
+++ /dev/null
@@ -1,25 +0,0 @@
-import { FC } from "react";
-
-interface ComponentProps {
-    [key: string]: any;
-}
-
-interface RegisteredComponent<T> {
-    component: FC<T>;
-    props: T;
-}
-
-const componentRegistry: Record<string, RegisteredComponent<any>> = {};
-
-export const createComponent = <T extends ComponentProps>(data: { pageName: string; component: FC<T>; props: T }) => {
-    if (componentRegistry[data.pageName]) {
-        return console.log(`Page '${data.pageName}' is already registered`);
-    }
-    componentRegistry[data.pageName] = { component: data.component, props: data.props };
-    return data.component;
-};
-
-export const getRegisteredComponent = (pageName: string | null) => {
-    if (!pageName) return null;
-    return componentRegistry[pageName];
-};
diff --git a/frontend/src/index.tsx b/frontend/src/index.tsx
deleted file mode 100644
index e6036b1e74d89c7e017eb40f6bc3b75c53108ad9..0000000000000000000000000000000000000000
--- a/frontend/src/index.tsx
+++ /dev/null
@@ -1,58 +0,0 @@
-import React from "react";
-import ReactDOM from "react-dom/client";
-import EventManager from "utils/EventManager.util";
-
-import App from "./App";
-import { configure } from "mobx";
-
-import "./styles/notification.scss";
-import "./styles/init.scss";
-import "./styles/fonts.scss";
-
-const isDev = process.env.NODE_ENV === "development";
-
-configure({
-    useProxies: "ifavailable",
-    computedRequiresReaction: true,
-    reactionRequiresObservable: true,
-    observableRequiresReaction: false,
-    enforceActions: "always"
-});
-
-const parseObject = (obj: any) => {
-    try {
-        return JSON.parse(obj);
-    } catch (e) {
-        return obj;
-    }
-};
-
-// @ts-ignore
-if (isDev && !window.mp) {
-    //@ts-ignore
-    window.mp = {
-        trigger: (...args: any) => {},
-        events: {
-            add: (...args: any) => {},
-            addProc: async (...args: any) => {}
-        }
-    };
-}
-
-function processHandlerCall(event: string, ...args: any) {
-    for (let i = 0; i < args.length; i++) {
-        args[i] = parseObject(args[i]);
-    }
-    EventManager.callHandler(event, ...args);
-}
-
-//@ts-ignore
-window.callHandler = processHandlerCall;
-//@ts-ignore
-mp.events.add("cef::eventManager", processHandlerCall);
-
-ReactDOM.createRoot(document.getElementById("root") as HTMLElement).render(
-    <React.StrictMode>
-        <App />
-    </React.StrictMode>
-);
diff --git a/frontend/src/pages/SettingsMenu/SettingsMenu.tsx b/frontend/src/pages/SettingsMenu/SettingsMenu.tsx
deleted file mode 100644
index 509f2c61e30d409422eace8e4d8ef77fed34f4f4..0000000000000000000000000000000000000000
--- a/frontend/src/pages/SettingsMenu/SettingsMenu.tsx
+++ /dev/null
@@ -1,68 +0,0 @@
-import { useState, useMemo, FC } from "react";
-import cn from "classnames";
-
-import { observer } from "mobx-react-lite";
-
-import Main from "pages/settingsmenu/components/Security/Security";
-import Keys from "pages/settingsmenu/components/Keybinds/Keybinds";
-import Display from "./components/Display/Display";
-
-import style from "./settings.module.scss";
-
-import security from "assets/images/settings/security.svg";
-import toggle from "assets/images/settings/toggle.svg";
-import keyboard from "assets/images/settings/keyboard.svg";
-
-import EventManager from "utils/EventManager.util";
-import { playerStore } from "store/Player.store";
-import { createComponent } from "../../hoc/registerComponent";
-
-const SettingsMenu: FC<{ store: typeof playerStore }> = observer(({ store }) => {
-    const [category, setCategorry] = useState("main");
-
-    const categoryNav = useMemo(
-        () => [
-            { link: "main", text: "Security", icon: security },
-            { link: "display", text: "Display", icon: toggle },
-            { link: "keys", text: "Keybinding", icon: keyboard }
-        ],
-        []
-    );
-
-    return (
-        <div className={style.settingsmenu}>
-            {category !== "main" ? (
-                <div className={style.recover} onClick={() => EventManager.emitClient("settingsMenu", "recover", { page: category })}>
-                    <span>Reset Default</span>
-                    <div className={style.img}></div>
-                </div>
-            ) : null}
-            <div className={style.button}>
-                <div className={style.text}>Settings</div>
-            </div>
-            <div className={style.nav}>
-                {categoryNav.map((e, i) => {
-                    return (
-                        <div key={i} className={cn(style.box, category === e.link && style.active)} onClick={() => setCategorry(e.link)}>
-                            <img src={e.icon} alt="" />
-                            <span>{e.text}</span>
-                        </div>
-                    );
-                })}
-            </div>
-            <div className={style.content}>
-                <div className={style.info}>
-                    {category === "main" && <Main store={store} />}
-                    {category === "keys" && <Keys store={store} />}
-                    {category === "display" && <Display store={store} />}
-                </div>
-            </div>
-        </div>
-    );
-});
-
-export default createComponent({
-    component: SettingsMenu,
-    pageName: "settings",
-    props: { store: playerStore }
-});
diff --git a/frontend/src/pages/SettingsMenu/components/Display/Display.tsx b/frontend/src/pages/SettingsMenu/components/Display/Display.tsx
deleted file mode 100644
index 28f6d60a518fc31cc35b83ff78518a72ba11d6ac..0000000000000000000000000000000000000000
--- a/frontend/src/pages/SettingsMenu/components/Display/Display.tsx
+++ /dev/null
@@ -1,55 +0,0 @@
-import { FC, useMemo, useCallback } from "react";
-import cn from "classnames";
-import { observer } from "mobx-react-lite";
-
-import style from "./display.module.scss";
-import EventManager from "utils/EventManager.util";
-import { playerStore } from "store/Player.store";
-
-const Display: FC<{ store: typeof playerStore }> = ({ store }) => {
-    const displayCategories = useMemo(
-        () => ({
-            player: store.settings.display.filter((e) => e.type === "player"),
-            hud: store.settings.display.filter((e) => e.type === "hud")
-        }),
-        [store.settings.display]
-    );
-
-    const changeSettingState = useCallback(
-        (id: number, state: boolean) => {
-            store.settings.display[id].action = state;
-            EventManager.emitClient("settingsMenu", "changeDisplay", { id, action: state });
-        },
-        [store.settings.display]
-    );
-
-    const renderDisplayOptions = (title: string, options: any[]) => (
-        <div className={style.box}>
-            <div className={style.title}>{title}</div>
-            <div className={style.container}>
-                {options.map((e, i) => (
-                    <div key={i} className={style.option}>
-                        <div className={style.title}>{e.name}</div>
-                        <div className={style.buttons}>
-                            <div className={cn(style.button, !e.action && style.active_white)} onClick={() => changeSettingState(e.id, false)}>
-                                OFF
-                            </div>
-                            <div className={cn(style.button, e.action && style.active_green)} onClick={() => changeSettingState(e.id, true)}>
-                                ON
-                            </div>
-                        </div>
-                    </div>
-                ))}
-            </div>
-        </div>
-    );
-
-    return (
-        <div className={style.displaysettings}>
-            {renderDisplayOptions("Character", displayCategories.player)}
-            {renderDisplayOptions("HUD Settings", displayCategories.hud)}
-        </div>
-    );
-};
-
-export default observer(Display);
diff --git a/frontend/src/pages/SettingsMenu/components/Display/display.module.scss b/frontend/src/pages/SettingsMenu/components/Display/display.module.scss
deleted file mode 100644
index 49e1c904e79497de74020c012e01ccb5f27d0154..0000000000000000000000000000000000000000
--- a/frontend/src/pages/SettingsMenu/components/Display/display.module.scss
+++ /dev/null
@@ -1,106 +0,0 @@
-.displaysettings {
-    display: flex;
-    gap: 10vh;
-    height: 71.1111111111111vh;
-
-    .box {
-        display: flex;
-        flex-direction: column;
-
-        &:last-of-type {
-            margin-right: 0;
-        }
-
-        .right {
-            margin-left: 9.166666666666666vh;
-        }
-
-        .title {
-            font-family: 'Beast Duh', sans-serif;
-            font-size: 2.1296296296296293vh;
-            color: #EAEAEA;
-        }
-
-        .container {
-            margin-top: 3.148148148148148vh;
-
-            display: flex;
-            flex-direction: column;
-
-            .option {
-                margin-bottom: 1.8518518518518516vh;
-                width: 35.925925925925924vh;
-                display: flex;
-                align-items: center;
-                justify-content: space-between;
-
-                .title {
-                    width: 27.59259259259259vh;
-                    font-family: Arial, Helvetica, sans-serif;
-                    font-size: 1.3888888888888888vh;
-                    color: #EAEAEA;
-                    text-transform: uppercase;
-                }
-
-                .buttons {
-                    display: flex;
-                    align-items: center;
-                    justify-content: center;
-
-                    gap: 1vh;
-
-                    .button {
-                        width: 7vh;
-                        height: 4vh;
-                        display: flex;
-                        align-items: center;
-                        justify-content: center;
-                        border: .2vh solid rgba(255, 255, 255, 0.1);
-                        background: rgba(255, 255, 255, 0.05);
-                        font-family: Arial, Helvetica, sans-serif;
-
-
-                        .box {
-                            margin-right: 3.7037037037037033vh;
-
-                            width: 3.7037037037037033vh;
-                            height: 100%;
-
-                            background: #AEAEAE;
-                            text-shadow: 0 0 0.09259259259259259vh rgba(0, 0, 0, 0.16);
-
-                            transition: all 0.3s;
-
-
-                            &:hover {
-                                background: #EAEAEA;
-                            }
-                        }
-                    }
-
-                }
-
-
-                &:last-of-type {
-                    margin-bottom: 0;
-                }
-            }
-
-            // height: 65.74074074074073vh;
-
-        }
-    }
-
-}
-
-.active_green {
-    background: #B6D300 !important;
-
-    transition: background ease-in .2s;
-}
-
-.active_white {
-    background: red !important;
-    color: black;
-    transition: background ease-in .2s;
-}
\ No newline at end of file
diff --git a/frontend/src/pages/SettingsMenu/components/Keybinds/Keybinds.tsx b/frontend/src/pages/SettingsMenu/components/Keybinds/Keybinds.tsx
deleted file mode 100644
index 9c5952010dd8fe17e5924f3c634ea87e26d92859..0000000000000000000000000000000000000000
--- a/frontend/src/pages/SettingsMenu/components/Keybinds/Keybinds.tsx
+++ /dev/null
@@ -1,107 +0,0 @@
-import { useState, FC, useMemo, useCallback, useEffect } from "react";
-import cn from "classnames";
-import { observer } from "mobx-react-lite";
-
-import EventManager from "utils/EventManager.util";
-import { playerStore } from "store/Player.store";
-import style from "./keybind.module.scss";
-
-const keyMap: Record<number, string> = {
-    9: "Tab",
-    13: "ENT",
-    18: "ALT",
-    20: "Сaps",
-    189: "-",
-    187: "=",
-    186: ";",
-    222: `'`,
-    188: ",",
-    219: "[",
-    221: "]",
-    190: ".",
-    191: "/",
-    40: "↓",
-    38: "↑",
-    37: "←",
-    39: "→",
-    119: "F8",
-    116: "F5"
-};
-
-const Keybinds: FC<{ store: typeof playerStore }> = ({ store }) => {
-    const [currentButton, setCurrentButton] = useState<{ category: string; id: number } | null>(null);
-
-    const buttonsByCategory = useMemo(
-        () => ({
-            general: store.settings.buttons.general.filter((e) => e.type === "default"),
-            vehicle: store.settings.buttons.vehicle.filter((e) => e.type === "default"),
-            fastslots: store.settings.buttons.fastslots.filter((e) => e.type === "fast")
-        }),
-        [store.settings.buttons]
-    );
-
-    const handleKeyPress = useCallback(
-        (event: any, cat: string, id: number) => {
-            if (!currentButton || event.location === 3) return;
-
-            const validKeys = new Set([
-                49, 50, 51, 52, 53, 54, 55, 56, 57, 48, 189, 187, 69, 70, 82, 84, 89, 85, 73, 79, 80, 219, 221, 70, 71, 72, 74, 75, 76, 186, 222, 90, 88, 67, 86, 66, 78, 77, 188, 190, 191, 20, 9, 119,
-                116, 40, 38, 39, 37
-            ]);
-            if (!validKeys.has(event.keyCode)) {
-                setCurrentButton(null);
-                return;
-            }
-
-            const existingButton = store.settings.buttons[cat].find((e) => e.keyCode === event.keyCode && e.type !== "default");
-            if (existingButton) {
-                setCurrentButton(null);
-            } else {
-                EventManager.emitClient("settings", "changeButton", { category: cat, id: id, keyCode: event.keyCode });
-                setCurrentButton(null);
-            }
-        },
-        [currentButton, store.settings.buttons]
-    );
-
-    const getButtonName = (keyCode: number) => keyMap[keyCode] || String.fromCharCode(keyCode);
-
-    useEffect(() => {
-        const preventTabDefault = (event: KeyboardEvent) => {
-            if (event.keyCode === 9) event.preventDefault();
-        };
-        document.addEventListener("keydown", preventTabDefault);
-        return () => document.removeEventListener("keydown", preventTabDefault);
-    }, []);
-
-    const renderButtonGroup = (category: string, buttons: any[]) => (
-        <div className={style.box}>
-            <div className={style.title}>{category}</div>
-            <div className={style.container}>
-                {buttons.map((e, i) => (
-                    <div key={i} className={style.block}>
-                        <div
-                            className={cn(style.button, currentButton?.category === category && currentButton?.id === e.id && style.error)}
-                            onClick={() => setCurrentButton({ category, id: e.id })}
-                            onKeyUp={(event) => handleKeyPress(event, category, e.id)}
-                            tabIndex={0}
-                        >
-                            {getButtonName(e.keyCode)}
-                        </div>
-                        <div className={style.text}>{e.name}</div>
-                    </div>
-                ))}
-            </div>
-        </div>
-    );
-
-    return (
-        <div className={style.keybindmanager}>
-            {renderButtonGroup("Control keys", buttonsByCategory.general)}
-            {renderButtonGroup("Vehicle", buttonsByCategory.vehicle)}
-            {renderButtonGroup("Inventory Quick Use", buttonsByCategory.fastslots)}
-        </div>
-    );
-};
-
-export default observer(Keybinds);
diff --git a/frontend/src/pages/SettingsMenu/components/Keybinds/keybind.module.scss b/frontend/src/pages/SettingsMenu/components/Keybinds/keybind.module.scss
deleted file mode 100644
index ab446e9cbed9a3d3e97d755d1033fe103b0effc1..0000000000000000000000000000000000000000
--- a/frontend/src/pages/SettingsMenu/components/Keybinds/keybind.module.scss
+++ /dev/null
@@ -1,118 +0,0 @@
-@import "../../../../styles/vars";
-
-.keybindmanager {
-    height: 71.1111111111111vh;
-    display: flex;
-
-    .box {
-        display: flex;
-        flex-direction: column;
-        width: 36vh;
-
-        .center {
-            margin-left: 5.166666666666666vh;
-        }
-
-        .right {
-            margin-left: 9.166666666666666vh;
-        }
-
-        .title {
-            font-family: 'Beast Duh', sans-serif;
-            font-size: 2.1296296296296293vh;
-            color: #EAEAEA;
-            text-transform: lowercase;
-        }
-
-        .container {
-            margin-top: 3.148148148148148vh;
-            display: flex;
-            flex-direction: column;
-            row-gap: 0.4629629629629629vh;
-            column-gap: 9.166666666666666vh;
-            height: 66vh;
-            overflow-y: auto;
-
-
-            .block {
-                display: flex;
-                align-items: center;
-
-                .button {
-                    outline: none;
-
-                    width: 4.63962962962963vh;
-                    height: 4.62962962962963vh;
-
-                    border: 0.09259259259259259vh solid #EAEAEA;
-
-                    border-radius: .5vh;
-
-                    background: $global-color;
-
-                    display: flex;
-                    align-items: center;
-                    justify-content: center;
-
-                    font-family: Arial, Helvetica, sans-serif;
-                    font-size: 1.6666666666666665vh;
-                    color: #EAEAEA;
-                    text-transform: uppercase;
-
-                }
-
-                & input {
-                    outline: none;
-                    background: none;
-
-                    width: 4.62962962962963vh;
-                    height: 4.62962962962963vh;
-                    border: 0.09259259259259259vh solid #EAEAEA;
-
-                    display: flex;
-                    align-items: center;
-                    justify-content: center;
-
-                    font-family: Arial, Helvetica, sans-serif;
-                    font-size: 1.6666666666666665vh;
-                    color: #EAEAEA;
-                    text-transform: uppercase;
-
-
-                }
-                .text {
-                    margin-left: 4.62962962962963vh;
-                    font-family: Arial, Helvetica, sans-serif;
-                    font-size: 1.3888888888888888vh;
-                    color: #EAEAEA;
-                    text-transform: uppercase;
-                }
-            }
-            &::-webkit-scrollbar {
-                width: 0.46296296296296297vh;
-                background: rgba(0, 0, 0, 0.1);
-            }
-
-            &::-webkit-scrollbar-thumb {
-                background: rgba(255, 255, 255, 0.4);
-            }
-        }
-    }
-}
-
-
-
-.blue {
-    border: 0.09259259259259259vh solid #AAB6EF !important;
-    color: #AAB6EF !important;
-}
-
-.error {
-    border: 0.09259259259259259vh solid #FF4E4E !important;
-    color: rgba(255, 78, 78, 0.9) !important;
-}
-
-.active {
-    border: 0.09259259259259259vh solid rgb(196, 21, 108) !important;
-    color: rgb(207, 20, 135) !important;
-}
\ No newline at end of file
diff --git a/frontend/src/pages/SettingsMenu/components/Security/Security.tsx b/frontend/src/pages/SettingsMenu/components/Security/Security.tsx
deleted file mode 100644
index 47694f0ef0e40a66b061c33da59fb541602ddbbb..0000000000000000000000000000000000000000
--- a/frontend/src/pages/SettingsMenu/components/Security/Security.tsx
+++ /dev/null
@@ -1,84 +0,0 @@
-import { useRef, FC, useCallback, useState } from "react";
-import cn from "classnames";
-import { observer } from "mobx-react-lite";
-import EventManager from "utils/EventManager.util";
-import Notification from "utils/NotifyManager.util";
-
-import { playerStore } from "store/Player.store";
-
-import style from "./security.module.scss";
-const Security: FC<{ store: typeof playerStore }> = ({ store }) => {
-    const [show, setShow] = useState({
-        old: false,
-        new: false,
-        repeat: false,
-        mail: false
-    });
-
-    const oldPassword = useRef<HTMLInputElement>(null),
-        newPassword = useRef<HTMLInputElement>(null),
-        repeatNewPassword = useRef<HTMLInputElement>(null);
-
-    const changePassword = useCallback(() => {
-        if (oldPassword.current && oldPassword.current.value === "") {
-            return Notification.error("Insert the current password.");
-        }
-        if (newPassword.current && newPassword.current.value === "") {
-            return Notification.error("Insert the new password.");
-        }
-        if (newPassword.current && repeatNewPassword.current && newPassword.current.value !== repeatNewPassword.current.value) {
-            return Notification.error("New password mismatch");
-        }
-
-        if (newPassword.current && newPassword.current.value.length <= 5) {
-            return Notification.error("Password must be at least 5 characters long.");
-        }
-
-        if (oldPassword.current && newPassword.current) {
-            EventManager.emitServer("settingsMenu", "changePassword", {
-                old: oldPassword.current.value,
-                new: newPassword.current.value
-            });
-        }
-    }, []); // eslint-disable-line
-
-    return (
-        <div className={style.security}>
-            <div className={style.row}>
-                <div className={style.header}>Account Security</div>
-
-                <div className={style.box}>
-                    <div className={style.title}>E-mail</div>
-                    <div className={style.password}>
-                        <input type={show.mail ? "text" : "password"} readOnly value={store.settings.email} />
-                        <div className={cn(style.img, show.mail && style.active)} onClick={() => setShow({ ...show, mail: !show.mail })}></div>
-                    </div>
-                </div>
-                <div className={style.box}>
-                    <div className={style.title}>Change Password</div>
-                    <div className={style.input}>
-                        <input type={show.old ? "text" : "password"} ref={oldPassword} placeholder="Current Password" />
-                        <div className={cn(style.img, show.old && style.active)} onClick={() => setShow({ ...show, old: !show.old })}></div>
-                    </div>
-                </div>
-                <div className={style.box}>
-                    <div className={style.input}>
-                        <input type={show.new ? "text" : "password"} ref={newPassword} placeholder="New password" />
-                        <div className={cn(style.img, show.new && style.active)} onClick={() => setShow({ ...show, new: !show.new })}></div>
-                    </div>
-                </div>
-                <div className={style.box}>
-                    <div className={style.input}>
-                        <input type={show.repeat ? "text" : "password"} ref={repeatNewPassword} placeholder="Confirm Password" />
-                        <div className={cn(style.img, show.repeat && style.active)} onClick={() => setShow({ ...show, repeat: !show.repeat })}></div>
-                    </div>
-                </div>
-                <div className={style.saveButton} onClick={() => changePassword()}>
-                    Change
-                </div>
-            </div>
-        </div>
-    );
-};
-
-export default observer(Security);
diff --git a/frontend/src/pages/SettingsMenu/components/Security/security.module.scss b/frontend/src/pages/SettingsMenu/components/Security/security.module.scss
deleted file mode 100644
index 8c67e73e046556e8aafff286bb907723f12c420f..0000000000000000000000000000000000000000
--- a/frontend/src/pages/SettingsMenu/components/Security/security.module.scss
+++ /dev/null
@@ -1,171 +0,0 @@
-@import '../../../../styles/vars';
-
-.security {
-    display: flex;
-
-    .row {
-        display: flex;
-        flex-direction: column;
-
-        .header {
-            margin-bottom: 3.148148148148148vh;
-            font-family: 'Beast Duh', sans-serif;
-            font-size: 2.1296296296296293vh;
-            color: #EAEAEA;
-        }
-
-        .box {
-            display: flex;
-            flex-direction: column;
-
-            .title {
-                font-family: Arial, Helvetica, sans-serif;
-                font-size: 1.3888888888888888vh;
-                color: #EAEAEA;
-            }
-
-            .password {
-                margin-top: 1.2962962962962963vh;
-                margin-bottom: 0.37037037037037035vh;
-
-                display: flex;
-                align-items: center;
-
-                & input {
-                    outline: none;
-                    border: none;
-                    background: none;
-                    margin-top: -0.7407407407407407vh;
-
-                    width: 26.11111111111111vh;
-
-                    font-family: Arial, Helvetica, sans-serif;
-                    font-size: 1.3888888888888888vh;
-                    color: #EAEAEA;
-                }
-
-                .img {
-                    margin-left: 0.7407407407407407vh;
-                    width: 2.7777777777777777vh;
-                    height: 2.222222222222222vh;
-
-                    background: url(../../../../assets/images/settings/hidden.svg) no-repeat;
-                    background-size: cover;
-
-                    transition: all 0.3s;
-
-
-                }
-            }
-
-            .input {
-                margin-top: 1.759259259259259vh;
-                padding-left: 0.9259259259259258vh;
-                padding-right: 0.9259259259259258vh;
-
-                width: 29.074074074074073vh;
-                height: 4.259259259259259vh;
-
-                border: 0.18518518518518517vh solid rgba(174, 186, 248, 0.2);
-                background: rgba(0, 0, 0, 0.2);
-
-                display: flex;
-                align-items: center;
-
-                & input {
-                    outline: none;
-                    border: none;
-                    background: none;
-                    margin-top: -0.27777777777777773vh;
-
-                    width: 26.11111111111111vh;
-
-                    font-family: Arial, Helvetica, sans-serif;
-                    font-size: 1.3888888888888888vh;
-                    color: #EAEAEA;
-                }
-
-                .img {
-                    margin-left: 0.7407407407407407vh;
-                    width: 2.1296296296296293vh;
-                    height: 1.3888888888888888vh;
-
-                    background: url(../../../../assets/images/settings/hidden.svg) no-repeat;
-                    background-size: cover;
-                    opacity: 0.2;
-
-                    transition: all 0.3s;
-                }
-            }
-
-        }
-
-        .saveButton {
-            position: relative;
-            margin-top: 0.9259259259259258vh;
-
-            width: 29.074074074074073vh;
-            height: 4.259259259259259vh;
-
-            display: flex;
-            align-items: center;
-            justify-content: center;
-
-            font-family: 'Beast Duh', sans-serif;
-
-            font-size: 2vh;
-            text-shadow: .1vh .1vh .1vh black;
-
-            color: #B4F191;
-            text-transform: uppercase;
-
-            transition: all 0.3s;
-
-
-            &:hover {
-                color: #EAEAEA;
-            }
-
-            &:hover::before {
-                opacity: 0;
-            }
-
-            &:hover::after {
-                opacity: 1;
-            }
-
-            &::before {
-                content: '';
-                position: absolute;
-
-                width: 100%;
-                height: 100%;
-
-                background: linear-gradient(270deg, rgba(255, 255, 255, 0.5) 0%, rgba(128, 128, 128, 0.2) 100%);
-
-                transition: all 0.3s;
-                z-index: -1;
-            }
-
-            &::after {
-                content: '';
-                position: absolute;
-
-                width: 100%;
-                height: 100%;
-
-                background: linear-gradient(270deg, rgba(255, 255, 255, 0.2) 0%, rgba(128, 128, 128, 0) 100%);
-
-                transition: all 0.3s;
-                z-index: -1;
-
-                opacity: 0;
-            }
-        }
-    }
-}
-
-.active {
-    background: url(../../../../assets/images/settings/shown.svg) no-repeat !important;
-    background-size: contain !important;
-}
\ No newline at end of file
diff --git a/frontend/src/pages/SettingsMenu/settings.module.scss b/frontend/src/pages/SettingsMenu/settings.module.scss
deleted file mode 100644
index e6588f9a7520c4b571caeac711f04cdd1ea70155..0000000000000000000000000000000000000000
--- a/frontend/src/pages/SettingsMenu/settings.module.scss
+++ /dev/null
@@ -1,236 +0,0 @@
-@import "../../styles/vars.scss";
-
-
-.settingsmenu {
-    width: 100vw;
-    height: 100vh;
-    display: flex;
-    flex-direction: column;
-
-    background: rgba(40, 39, 43, 0.6);
-    filter: drop-shadow(0.18518518518518517vh 0.37037037037037035vh 0.5555555555555556vh #28272b);
-
-    .nav {
-        display: flex;
-        justify-content: center;
-        align-items: center;
-
-        border-bottom: .2vh solid red;
-
-        .box {
-            position: relative;
-            margin-left: 2vh;
-            width: 10.29629629629629vh;
-            height: 7.814814814814815vh;
-
-            display: flex;
-            flex-direction: column;
-            align-items: center;
-            justify-content: center;
-
-
-            font-family: 'Beast Duh', sans-serif;
-            font-size: 1.8518518518518516vh;
-            color: rgba(255, 255, 255, 0.75);
-
-
-
-            img {
-                width: 3.611111111111111vh;
-                height: 2.8703703703703702vh;
-            }
-
-            &::before {
-                content: '';
-                position: absolute;
-                left: 0;
-                top: 0;
-
-                width: 100%;
-                height: 100%;
-
-                border-radius: 0.5vh;
-
-                background: linear-gradient(270deg, rgba(255, 255, 255, 0.2) 0%, rgba(128, 128, 128, 0) 100%);
-
-                transition: all 0.3s;
-            }
-
-            &::after {
-                content: '';
-                position: absolute;
-                left: 0;
-                top: 0;
-
-                width: 100%;
-                height: 100%;
-                border-radius: 0.5vh;
-
-                background: linear-gradient(90deg, rgba(255, 255, 255, 0.2) 0%, rgba(128, 128, 128, 0) 100%);
-                transition: all 0.3s;
-                opacity: 0;
-            }
-
-            &:last-of-type {
-                margin-bottom: 0;
-            }
-
-            &:hover,
-            .active {
-                color: #fff;
-                text-shadow: 0 0 1.574074074074074vh rgba(255, 255, 255, 0.75);
-            }
-
-            &:hover::before,
-            .active::before {
-                opacity: 0;
-            }
-
-            &:hover::after,
-            .active::after {
-                opacity: 1;
-            }
-
-            .active {
-                color: #fff;
-                text-shadow: 0 0 1.574074074074074vh rgba(255, 255, 255, 0.75);
-            }
-
-        }
-
-
-    }
-
-    .button {
-        margin-top: 7.87037037037037vh;
-        margin-left: 2vh;
-        display: flex;
-        align-items: center;
-
-        .img {
-            margin-top: 0.37037037037037035vh;
-
-            position: relative;
-            width: 8.518518518518517vh;
-            height: 2.222222222222222vh;
-            display: flex;
-            align-items: center;
-
-        }
-
-        .text {
-            font-family: 'Beast Duh', sans-serif;
-            font-size: 4.166666666666666vh;
-            color: #fff;
-            text-shadow: 0 0.09259259259259259vh 0.27777777777777773vh rgba(0, 0, 0, 0.75);
-            text-transform: uppercase;
-        }
-
-    }
-
-    .recover {
-        position: absolute;
-        bottom: 6.018518518518518vh;
-        right: 8.055555555555555vh;
-
-        display: flex;
-        align-items: center;
-
-
-        &:hover span {
-            opacity: 1;
-        }
-
-        &:hover .img {
-            opacity: 1;
-            transform: rotate(-360deg);
-        }
-
-        & span {
-            font-family: 'Beast Duh', sans-serif;
-            font-size: 1.6666666666666665vh;
-            color: #EAEAEA;
-            opacity: 0.5;
-            text-transform: lowercase;
-
-            transition: all 0.3s;
-        }
-
-        .img {
-            margin-left: 1.2037037037037037vh;
-            width: 3.148148148148148vh;
-            height: 2.7777777777777777vh;
-            background: url(../../assets/images/settings/recover.svg) no-repeat;
-            background-size: cover;
-            opacity: 0.5;
-            transition: all 0.3s;
-        }
-    }
-
-
-    .content {
-        margin-top: 5vh;
-        display: flex;
-        align-items: center;
-        justify-content: center;
-    }
-}
-
-@media (aspect-ratio: 577/540) {
-    .settingsmenu {
-        .button {
-            zoom: 0.7;
-        }
-
-        .content {
-            zoom: 0.65;
-
-            .info {
-                zoom: 0.9;
-            }
-        }
-
-       .exit {
-            zoom: 0.7;
-        }
-    }
-}
-
-@media (aspect-ratio: 4/3) {
-    .settingsmenu {
-        .button {
-            zoom: 0.8;
-        }
-
-        .content {
-            zoom: 0.8;
-
-            .info {
-                zoom: 0.9;
-            }
-        }
-
-        .exit {
-            zoom: 0.8;
-        }
-    }
-}
-
-@media (aspect-ratio: 5/4) {
-    .settingsmenu {
-        .button {
-            zoom: 0.8;
-        }
-
-        .content {
-            zoom: 0.75;
-
-            .info {
-                zoom: 0.9;
-            }
-        }
-        .exit {
-            zoom: 0.8;
-        }
-    }
-}
\ No newline at end of file
diff --git a/frontend/src/pages/atm/Atm.tsx b/frontend/src/pages/atm/Atm.tsx
deleted file mode 100644
index e69de29bb2d1d6434b8b29ae775ad8c2e48c5391..0000000000000000000000000000000000000000
diff --git a/frontend/src/pages/atm/atm.module.scss b/frontend/src/pages/atm/atm.module.scss
deleted file mode 100644
index e69de29bb2d1d6434b8b29ae775ad8c2e48c5391..0000000000000000000000000000000000000000
diff --git a/frontend/src/pages/auth/Authentication.tsx b/frontend/src/pages/auth/Authentication.tsx
deleted file mode 100644
index b0b70b9523937bac0f5890513558f6c4fd0b3e26..0000000000000000000000000000000000000000
--- a/frontend/src/pages/auth/Authentication.tsx
+++ /dev/null
@@ -1,16 +0,0 @@
-import { FC, useState } from "react";
-import style from "./auth.module.scss";
-import { AuthForm } from "./components/AuthForm";
-import { RegisterForm } from "./components/RegisterForm";
-import { createComponent } from "src/hoc/registerComponent";
-
-const Authentication: FC = () => {
-    const [form, setForm] = useState("auth");
-    return <div className={style.main}>{form === "auth" ? <AuthForm setForm={setForm} /> : <RegisterForm setForm={setForm} />}</div>;
-};
-
-export default createComponent({
-    props: {},
-    component: Authentication,
-    pageName: "auth"
-});
diff --git a/frontend/src/pages/auth/auth.module.scss b/frontend/src/pages/auth/auth.module.scss
deleted file mode 100644
index 49abf0db735c015eee335596fd9ebe4ade42f9c5..0000000000000000000000000000000000000000
--- a/frontend/src/pages/auth/auth.module.scss
+++ /dev/null
@@ -1,132 +0,0 @@
-.main {
-    position: absolute;
-    width: 100vw;
-    height: 100vh;
-
-    background: url('../../assets/images/selector/bg.svg') no-repeat;
-    background-size: cover;
-    font-family: Arial, Helvetica, sans-serif;
-
-    transition: all .2s;
-
-    z-index: 1;
-
-    &::before {
-        position: absolute;
-        content: "";
-        width: 100%;
-        height: 100%;
-        background: url('../../assets/images/auth/chars.png') no-repeat;
-        background-size: cover;
-        opacity: .2;
-        margin-left: -25vh;
-        z-index: -1;
-        animation: slide-right 0.5s forwards;
-
-        @keyframes slide-right {
-            0% {
-                transform: translateX(-100vh);
-            }
-
-            100% {
-                transform: translateX(100px);
-            }
-        }
-    }
-
-    .authform {
-        position: absolute;
-
-        right: 10vh;
-        width: 50vh;
-        height: 100%;
-
-        display: flex;
-        flex-direction: column;
-        align-items: center;
-        justify-content: center;
-        // background-color: #3a3a3a;
-        border-radius: .6vh;
-        // box-shadow: 0px 0px 20px 0px black;
-
-
-        .content {
-            display: flex;
-            align-items: center;
-            justify-content: center;
-            flex-direction: column;
-            gap: 2vh;
-
-
-
-
-            input {
-                font-family: Arial, Helvetica, sans-serif;
-                outline: none;
-                border: none;
-                font-size: 17px;
-
-                border-bottom: .1vh solid red;
-                background: linear-gradient(to left, #1e1b20, transparent);
-                width: 30vh;
-                height: 5vh;
-                padding: .5vh;
-                color: white;
-            }
-
-
-
-            .submit {
-                display: flex;
-                align-items: center;
-                justify-content: center;
-                color: white;
-                gap: .5vh;
-
-                background: #28272b;
-                border-radius: .5vh;
-
-                border: none;
-
-                width: 25vh;
-                height: 4.5vh;
-
-                font-family: 'Beast Duh';
-                font-size: 3vh;
-
-                text-shadow: 0vh 0vh 5vh black;
-            }
-
-            input.usernameInput {
-
-                &::before {
-                    content: "";
-                    position: absolute;
-                    background: url("../../assets/images/auth/username.svg");
-                    width: 1em;
-                    height: 1em;
-
-                }
-            }
-
-        }
-
-        .footer {
-            display: flex;
-            flex-direction: column;
-
-            align-items: center;
-            justify-content: center;
-            gap: .2vh;
-
-            position: relative;
-            font-family: Arial, Helvetica, sans-serif;
-            text-transform: uppercase;
-            margin-top: 2vh;
-
-
-            font-size: 15px;
-
-        }
-    }
-}
\ No newline at end of file
diff --git a/frontend/src/pages/auth/components/AuthForm.tsx b/frontend/src/pages/auth/components/AuthForm.tsx
deleted file mode 100644
index d7995066c256ec33c616a5d1c2f659a4324acad9..0000000000000000000000000000000000000000
--- a/frontend/src/pages/auth/components/AuthForm.tsx
+++ /dev/null
@@ -1,49 +0,0 @@
-import { FC, useCallback, useRef } from "react";
-import style from "../auth.module.scss";
-import EventManager from "utils/EventManager.util";
-import Notification from "utils/NotifyManager.util";
-
-import loginIcon from "assets/images/auth/icons/login.svg";
-
-export const AuthForm: FC<{ setForm: (page: string) => void }> = ({ setForm }) => {
-    const authForm = useRef<HTMLDivElement>(null);
-
-    const authUsername = useRef<HTMLInputElement>(null),
-        authPassword = useRef<HTMLInputElement>(null);
-
-    const onSubmit = useCallback((e: React.FormEvent) => {
-        e.preventDefault();
-
-        const username = authUsername.current?.value;
-        const password = authPassword.current?.value;
-
-        if (!username || !password || !username.length || !password.length) {
-            return Notification.error("Fill out the forms!");
-        }
-
-        EventManager.emitServer("auth", "loginPlayer", { username, password });
-
-        authUsername.current.value = "";
-        authPassword.current.value = "";
-        console.log("test");
-    }, []);
-
-    return (
-        <div className={style.authform} ref={authForm} onSubmit={(e) => onSubmit(e)}>
-            <form autoComplete="off">
-                <div className={style.content}>
-                    <input className={style.usernameInput} ref={authUsername} type="text" name="auth_username" maxLength={32} placeholder="Username" autoComplete="off" />
-                    <input ref={authPassword} type="password" name="auth_password" maxLength={74} placeholder="Password" />
-
-                    <button className={style.submit} type="submit" name="auth_submit">
-                        Login <img src={loginIcon} alt="login" />
-                    </button>
-                </div>
-            </form>
-            <div className={style.footer}>
-                Don't have an account?
-                <span onClick={() => setForm("reg")}>Register now!</span>
-            </div>
-        </div>
-    );
-};
diff --git a/frontend/src/pages/auth/components/RegisterForm.tsx b/frontend/src/pages/auth/components/RegisterForm.tsx
deleted file mode 100644
index d53493b5e92e3363defcb4bdb30ce7915e563da2..0000000000000000000000000000000000000000
--- a/frontend/src/pages/auth/components/RegisterForm.tsx
+++ /dev/null
@@ -1,58 +0,0 @@
-import { FC, useCallback, useRef } from "react";
-import style from "../auth.module.scss";
-import EventManager from "utils/EventManager.util";
-import Notification from "utils/NotifyManager.util";
-import registerIcon from "assets/images/auth/icons/register.svg";
-export const RegisterForm: FC<{ setForm: (page: string) => void }> = ({ setForm }) => {
-    const authForm = useRef<HTMLDivElement>(null);
-
-    const registerUsername = useRef<HTMLInputElement>(null),
-        registerEmail = useRef<HTMLInputElement>(null),
-        registerPassword = useRef<HTMLInputElement>(null),
-        confirmRegisterPassword = useRef<HTMLInputElement>(null);
-
-    const onSubmit = useCallback((e: React.FormEvent) => {
-        e.preventDefault();
-        const [name, email, password, confirmPass] = [registerUsername.current, registerEmail.current, registerPassword.current, confirmRegisterPassword.current];
-
-        if (!name || !password || !email || !confirmPass || !name.value.length || !password.value.length) {
-            Notification.error("Fill out the forms!");
-            return;
-        }
-
-        EventManager.emitServer("auth", "register", {
-            username: name.value,
-            email: email.value,
-            password: password.value,
-            confirmPassword: confirmPass.value
-        });
-
-        name.value = "";
-        email.value = "";
-        password.value = "";
-        confirmPass.value = "";
-        console.log("test");
-    }, []);
-
-    return (
-        <div className={style.authform} ref={authForm} onSubmit={(e) => onSubmit(e)}>
-            <form autoComplete="off">
-                <div className={style.content}>
-                    <input className={style.usernameInput} ref={registerUsername} type="text" name="auth_username" maxLength={32} placeholder="Username" autoComplete="off" />
-                    <input ref={registerEmail} type="email" name="auth_email" maxLength={32} placeholder="Email" autoComplete="off" />
-
-                    <input ref={registerPassword} type="password" name="auth_password" maxLength={74} placeholder="Password" />
-                    <input ref={confirmRegisterPassword} type="password" name="auth_confirm_password" maxLength={74} placeholder="Confirm Password" />
-
-                    <button className={style.submit} type="submit" name="auth_submit">
-                        Register <img src={registerIcon} alt="register" />
-                    </button>
-                </div>
-            </form>
-            <div className={style.footer}>
-                Already have an account?
-                <span onClick={() => setForm("auth")}>Login now!</span>
-            </div>
-        </div>
-    );
-};
diff --git a/frontend/src/pages/creator/Creator.tsx b/frontend/src/pages/creator/Creator.tsx
deleted file mode 100644
index d0fd907e10efd1bd78af0d580018b05e97fc988b..0000000000000000000000000000000000000000
--- a/frontend/src/pages/creator/Creator.tsx
+++ /dev/null
@@ -1,122 +0,0 @@
-import * as React from "react";
-import cn from "classnames";
-import { observer } from "mobx-react-lite";
-
-import CreatorPlayerName from "./components/GeneralData/GeneralData";
-import CreatorPlayerAppearance from "./components/Appearance/Appearance";
-import CreatorPlayerFace from "./components/FaceFeatures/FaceFeatures";
-import CreatorPlayerClothes from "./components/Clothing/Clothing";
-
-import { setRandomOptions } from "./utils/Randomizer.module";
-
-import { regExp } from "utils/Helpers.util";
-
-import EventManager from "utils/EventManager.util";
-import Notification from "utils/NotifyManager.util";
-
-import infoicon from "assets/images/creator/icons/info.svg";
-import hairstyleicon from "assets/images/creator/icons/hairstyle.svg";
-import faceicon from "assets/images/creator/icons/face.svg";
-import clothesicon from "assets/images/creator/icons/clothes.svg";
-import mouseicon from "assets/images/creator/icons/rmb.svg";
-
-import randomicon from "assets/images/creator/icons/random.svg";
-import createicon from "assets/images/creator/icons/create.svg";
-
-import style from "./creator.module.scss";
-import { creatorStore } from "store/CharCreator.store";
-import { createComponent } from "src/hoc/registerComponent";
-
-const Creator: React.FC<{ store: typeof creatorStore }> = observer(({ store }) => {
-    const [optionsPage, setOptionsPage] = React.useState("name"),
-        [isNicknameValid, setNicknameValid] = React.useState(false);
-
-    const navName = React.useRef<HTMLDivElement>(null),
-        navAppearance = React.useRef<HTMLDivElement>(null),
-        navFace = React.useRef<HTMLDivElement>(null),
-        screen = React.useRef<HTMLDivElement>(null);
-
-    React.useEffect(() => {
-        EventManager.emitServer("creator", "navigation", optionsPage);
-    }, [optionsPage]);
-
-    React.useEffect(() => {
-        const timeout = setTimeout(() => {
-            if (screen.current) screen.current.classList.add("creator_active");
-        }, 100);
-
-        return () => clearTimeout(timeout);
-    }, []);
-
-    const handleSwitch = React.useCallback((page: string) => {
-        setOptionsPage(page);
-    }, []);
-
-    const handleCreate = React.useCallback(() => {
-        if (store.data.name.firstname && store.data.name.lastname) {
-            const { firstname, lastname } = store.data.name;
-            if (regExp.nickname.test(firstname) || regExp.nickname.test(lastname)) return Notification.error("Character name must contain only latin letters.");
-            if (firstname.length < 3 || firstname.length > 12 || lastname.length < 3 || lastname.length > 12) return Notification.error("Character name must be between 4 and 24 characters");
-
-            EventManager.emitServer("creator", "create", {
-                sex: store.data.sex,
-                name: store.data.name,
-                parents: store.data.parents,
-                hair: store.data.hair,
-                face: store.data.face,
-                color: store.data.color
-            });
-        }
-    }, [store.data]); // eslint-disable-line
-
-    return (
-        <div ref={screen} className={style.creator}>
-            <div className={style.navigation}>
-                <div className={cn(style.element, optionsPage === "name" ? style.active : undefined)} ref={navName} onClick={() => handleSwitch("name")}>
-                    <img src={infoicon} alt="" />
-                </div>
-                <div className={cn(style.element, optionsPage === "appearance" ? style.active : undefined)} ref={navAppearance} onClick={() => handleSwitch("appearance")}>
-                    <img src={hairstyleicon} alt="" />
-                </div>
-                <div className={cn(style.element, optionsPage === "face" ? style.active : undefined)} ref={navFace} onClick={() => handleSwitch("face")}>
-                    <img src={faceicon} alt="" />
-                </div>{" "}
-                <div className={cn(style.element, optionsPage === "clothes" ? style.active : undefined)} ref={navFace} onClick={() => handleSwitch("clothes")}>
-                    <img src={clothesicon} alt="" />
-                </div>
-            </div>
-            <div className={style.content}>
-                <div className={style.title}>
-                    <span>
-                        {store.data.name.firstname} {store.data.name.lastname}
-                    </span>
-                </div>
-                <div className={style.data}>
-                    {optionsPage === "name" && <CreatorPlayerName store={store} {...{ isNicknameValid, setNicknameValid }} />}
-                    {optionsPage === "appearance" && <CreatorPlayerAppearance store={store} />}
-                    {optionsPage === "face" && <CreatorPlayerFace store={store} />}
-                    {optionsPage === "clothes" && <CreatorPlayerClothes store={store} />}
-                </div>
-                <div className={style.player_name}>
-                    <div className={style.create} onClick={handleCreate}>
-                        <img src={createicon} alt="randomizer" /> <span>CREATE</span>
-                    </div>
-                    <div className={style.create} onClick={() => setRandomOptions(store)}>
-                        <img src={randomicon} alt="randomizer" /> <span>RANDOMIZE</span>
-                    </div>
-                </div>
-
-                <div className={style.rotate}>
-                    <div className={style.desc}>RMB rotate -</div>
-                    <img className={style.icon} src={mouseicon} alt="#" />
-                </div>
-            </div>
-        </div>
-    );
-});
-
-export default createComponent({
-    props: { store: creatorStore },
-    component: Creator,
-    pageName: "creator"
-});
diff --git a/frontend/src/pages/creator/components/Appearance/Appearance.tsx b/frontend/src/pages/creator/components/Appearance/Appearance.tsx
deleted file mode 100644
index 4646828dd08c021b4bdd3f8c2d20573fec6e3b7a..0000000000000000000000000000000000000000
--- a/frontend/src/pages/creator/components/Appearance/Appearance.tsx
+++ /dev/null
@@ -1,158 +0,0 @@
-import * as React from "react";
-import cn from "classnames";
-
-import colors from "configs/colors";
-import EventManager from "utils/EventManager.util";
-import { observer } from "mobx-react-lite";
-
-import style from "./appearance.module.scss";
-import { creatorStore } from "store/CharCreator.store";
-// const headHairList = ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23"];
-
-const chestHairList = ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17"];
-const beardHairList = ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29"];
-
-const CreatorPlayerAppearance: React.FC<{ store: typeof creatorStore }> = ({ store }) => {
-    const [hairList, setHairList] = React.useState<number>(0);
-
-    React.useEffect(() => {
-        EventManager.emitClient("creator", "preview", "hair", 0, store.data.hair.head);
-    }, [store.data.hair.head]);
-    React.useEffect(() => {
-        EventManager.emitClient("creator", "preview", "hair", 2, store.data.hair.chest);
-    }, [store.data.hair.chest]);
-    React.useEffect(() => {
-        EventManager.emitClient("creator", "preview", "hair", 3, store.data.hair.beard);
-    }, [store.data.hair.beard]);
-
-    React.useEffect(() => {
-        EventManager.emitClient("creator", "preview", "color", 0, store.data.color.head);
-    }, [store.data.color.head]);
-    React.useEffect(() => {
-        EventManager.emitClient("creator", "preview", "color", 3, store.data.color.chest);
-    }, [store.data.color.chest]);
-    React.useEffect(() => {
-        EventManager.emitClient("creator", "preview", "color", 4, store.data.color.beard);
-    }, [store.data.color.beard]);
-
-    React.useEffect(() => {
-        setHairList(store.data.sex === 0 ? 82 : 86);
-    }, [store.data.sex]);
-
-    return (
-        <div className={style.appearance}>
-            <div className={style.options}>
-                <div className={style.title}>
-                    <span>Select your hairstyle</span>
-                </div>
-                <div className={style.list}>
-                    <div className={style.range_element}>
-                        <div key="k_hairType" className={style.element}>
-                            <span>Hair Type</span>
-                            <div className={style.slider}>
-                                <input
-                                    type="range"
-                                    max={hairList}
-                                    min={0}
-                                    step={1}
-                                    value={store.data.hair.head}
-                                    onChange={(value) => {
-                                        store.data.hair.head = Number(value.target.value);
-                                    }}
-                                />
-                            </div>
-                            <div className={style.colorList}>
-                                <div className={style.input}>
-                                    {colors.hair.map((el, key) => {
-                                        if (key < 19)
-                                            return (
-                                                <div
-                                                    key={key}
-                                                    className={cn(style.box, store.data.color.head === key && style.active)}
-                                                    style={{ backgroundColor: `${el.color}` }}
-                                                    onClick={() => {
-                                                        store.data.color.head = key;
-                                                    }}
-                                                />
-                                            );
-                                        else return null;
-                                    })}
-                                </div>
-                            </div>
-                            {store.data.sex === 0 && (
-                                <>
-                                    <div className={style.element}>
-                                        <span>chest hair</span>
-                                        <div className={style.slider}>
-                                            <input
-                                                type="range"
-                                                max={chestHairList.length - 1}
-                                                min={0}
-                                                step={1}
-                                                value={store.data.hair.chest}
-                                                onChange={(value) => {
-                                                    store.data.hair.chest = Number(value.target.value);
-                                                }}
-                                            />
-                                        </div>
-                                        <div className={style.colorList}>
-                                            <div className={style.input}>
-                                                {colors.hair.map((el, key) => {
-                                                    if (key < 19)
-                                                        return (
-                                                            <div
-                                                                key={key}
-                                                                className={cn(style.box, store.data.color.chest === key && style.active)}
-                                                                style={{ backgroundColor: `${el.color}` }}
-                                                                onClick={() => {
-                                                                    store.data.color.chest = key;
-                                                                }}
-                                                            />
-                                                        );
-                                                    else return null;
-                                                })}
-                                            </div>
-                                        </div>
-                                        <span>Beard Type</span>
-                                        <div className={style.slider}>
-                                            <input
-                                                type="range"
-                                                max={beardHairList.length - 1}
-                                                min={0}
-                                                step={1}
-                                                value={store.data.hair.beard}
-                                                onChange={(value) => {
-                                                    store.data.hair.beard = Number(value.target.value);
-                                                }}
-                                            />
-                                        </div>
-                                        <div className={style.colorList}>
-                                            <div className={style.input}>
-                                                {colors.hair.map((el, key) => {
-                                                    if (key < 19)
-                                                        return (
-                                                            <div
-                                                                key={key}
-                                                                className={cn(style.box, store.data.color.beard === key && style.active)}
-                                                                style={{ backgroundColor: `${el.color}` }}
-                                                                onClick={() => {
-                                                                    store.data.color.beard = key;
-                                                                }}
-                                                            />
-                                                        );
-                                                    else return null;
-                                                })}
-                                            </div>
-                                        </div>
-                                    </div>
-                                </>
-                            )}
-                        </div>
-                    </div>
-                </div>
-            </div>
-        </div>
-    );
-};
-
-export default observer(CreatorPlayerAppearance);
diff --git a/frontend/src/pages/creator/components/Appearance/appearance.module.scss b/frontend/src/pages/creator/components/Appearance/appearance.module.scss
deleted file mode 100644
index 57f62ccc0140f6eadeb4a3d24f08e49723dc786a..0000000000000000000000000000000000000000
--- a/frontend/src/pages/creator/components/Appearance/appearance.module.scss
+++ /dev/null
@@ -1,145 +0,0 @@
-.appearance {
-    display: flex;
-    flex-direction: row;
-    margin-left: 2.5vh;
-
-    .range_element {
-        & span {
-            opacity: 0.9;
-            width: 100%;
-
-            text-align: center;
-
-            font-family: Arial, Helvetica, sans-serif;
-            font-size: 1.3888888888888888vh;
-            color: white;
-            text-shadow: 0vh 0vh 1vh black;
-            text-transform: uppercase;
-        }
-
-        .slider {
-            width: 100%;
-            margin-top: 0.9259259259259258vh;
-            display: flex;
-            align-items: center;
-            margin-bottom: 2.037037037vh;
-
-            & span {
-                font-size: 0.9629629629629629vh;
-            }
-
-            & input[type='range'] {
-                width: 100%;
-                margin-top: 1vh;
-
-                height: 0.37037037037037035vh;
-                background-color: #fff;
-                box-shadow: 0 0 0.5vh 0 #fff;
-                border-radius: 0.27777777777777773vh;
-                outline: none;
-                appearance: none;
-                -webkit-appearance: none;
-                border: none;
-                opacity: 0.7;
-
-                &::-webkit-slider-thumb {
-                    appearance: none;
-                    -webkit-appearance: none;
-
-                    width: 1.8518518518518516vh;
-                    height: 1.8518518518518516vh;
-                    background-color: red;
-
-                    filter: drop-shadow(0 0 0.27777777777777773vh black);
-
-                    border-radius: 2vh;
-
-                    outline: none;
-                }
-            }
-        }
-    }
-
-    .options {
-        display: flex;
-        flex-direction: column;
-
-        .title {
-            span {
-                color: white;
-                display: flex;
-                align-items: center;
-
-                &::before {
-                    content: "";
-                    position: absolute;
-                    margin-left: -.5vh;
-                    width: 0.2rem;
-                    height: 1.8rem;
-                    background-color: #fff;
-                    box-shadow: 0 0 0.5rem 0 #fff;
-                }
-            }
-
-            letter-spacing: 0.09259259259259259vh;
-            margin-bottom: 2.962962962962963vh;
-
-            font-family: Arial,
-            Helvetica,
-            sans-serif;
-            font-size: 1.9vh;
-            text-transform: uppercase;
-            color: rgba(0, 0, 0, 0.5);
-        }
-
-        .list {
-            display: flex;
-            flex-direction: column;
-
-            .element {
-                width: 33.148148148148145vh;
-                margin-bottom: 2.0370370370370368vh;
-
-                .creator-player-desc-span {
-                    color: rgba(0, 0, 0, 0.52) !important;
-                    font-family: 'TT Norms Bold' !important;
-                    font-size: 1.2962962962962963vh !important;
-                    text-transform: capitalize;
-                }
-            }
-        }
-    }
-
-    .colorList {
-        display: flex;
-        flex-direction: column;
-        align-items: flex-start;
-
-        .input {
-            display: grid;
-            margin-bottom: 0.9259259259259258vh;
-            grid-template-columns: repeat(13, 1fr);
-
-
-            .box {
-                width: 2.3888888888888888vh;
-                margin-right: 0.27777777777777773vh;
-                margin-bottom: 0.27777777777777773vh;
-                height: 2.3888888888888888vh;
-                transition: height 0.2s ease;
-
-                &.active,
-                &:hover {
-                    outline: 1px solid black;
-                }
-            }
-        }
-
-        & span {
-            opacity: 0.9;
-            font-size: 1.4444444444444444vh;
-            margin-bottom: 0.9259259259259258vh;
-        }
-    }
-
-}
\ No newline at end of file
diff --git a/frontend/src/pages/creator/components/Clothing/Clothing.tsx b/frontend/src/pages/creator/components/Clothing/Clothing.tsx
deleted file mode 100644
index d4aa05043fdc93b71f7fc45ad8196a49c9ff455b..0000000000000000000000000000000000000000
--- a/frontend/src/pages/creator/components/Clothing/Clothing.tsx
+++ /dev/null
@@ -1,84 +0,0 @@
-import { FC, useCallback, useState, useMemo } from "react";
-import cn from "classnames";
-import EventManager from "utils/EventManager.util";
-import { observer } from "mobx-react-lite";
-import style from "./clothing.module.scss";
-import { creatorStore } from "store/CharCreator.store";
-
-const CreatorPlayerClothes: FC<{ store: typeof creatorStore }> = ({ store }) => {
-    const [clothingType, setClothingType] = useState("hats");
-
-    const clothingCategories = useMemo(() => ["hats", "tops", "pants", "shoes"], []);
-
-    const clothingOptions: any = {
-        hats: { drawable: store.data.clothes.hats.drawable, texture: store.data.clothes.hats.texture, maxDrawable: 20, maxTexture: 10 },
-        tops: { drawable: store.data.clothes.tops.drawable, texture: store.data.clothes.tops.texture, maxDrawable: 50, maxTexture: 15 },
-        pants: { drawable: store.data.clothes.pants.drawable, texture: store.data.clothes.pants.texture, maxDrawable: 20, maxTexture: 10 },
-        shoes: { drawable: store.data.clothes.shoes.drawable, texture: store.data.clothes.shoes.texture, maxDrawable: 15, maxTexture: 8 }
-    };
-
-    const sendClothingData = useCallback((type: string, drawable: number, texture: number) => {
-        EventManager.emitClient("creator", "preview", "clothing", type, drawable, texture);
-    }, []);
-
-    return (
-        <div className={style.appearance}>
-            <div className={style.navigation}>
-                {clothingCategories.map((category, index) => (
-                    <div key={index}>
-                        <div className={cn(style.element, clothingType === category ? style.active : undefined)} onClick={() => setClothingType(category)}>
-                            <img className={style.img} src={`${new URL(`../../../../assets/images/creator/icons/${category}.svg`, import.meta.url).href}`} alt={category} />
-                        </div>
-                    </div>
-                ))}
-            </div>
-            <div className={style.options}>
-                <div className={style.title}>
-                    <span>select {clothingType}</span>
-                </div>
-                <div className={style.list}>
-                    <div className={style.element}>
-                        <div className={style.range_element}>
-                            <span>drawable</span>
-                            <div className={style.slider}>
-                                <input
-                                    type="range"
-                                    max={clothingOptions[clothingType].maxDrawable}
-                                    min={0}
-                                    value={clothingOptions[clothingType].drawable}
-                                    onChange={(e) => {
-                                        const value = Number(e.target.value);
-                                        //@ts-ignore
-                                        store.data.clothes[clothingType].drawable = value;
-                                        sendClothingData(clothingType, value, clothingOptions[clothingType].texture);
-                                    }}
-                                />
-                            </div>
-                        </div>
-                    </div>
-                    <div className={style.element}>
-                        <div className={style.range_element}>
-                            <span>texture</span>
-                            <div className={style.slider}>
-                                <input
-                                    type="range"
-                                    max={clothingOptions[clothingType].maxTexture}
-                                    min={0}
-                                    value={clothingOptions[clothingType].texture}
-                                    onChange={(e) => {
-                                        const value = Number(e.target.value);
-                                        //@ts-ignore
-                                        store.data.clothes[clothingType].texture = value;
-                                        sendClothingData(clothingType, clothingOptions[clothingType].drawable, value);
-                                    }}
-                                />
-                            </div>
-                        </div>
-                    </div>
-                </div>
-            </div>
-        </div>
-    );
-};
-
-export default observer(CreatorPlayerClothes);
diff --git a/frontend/src/pages/creator/components/Clothing/clothing.module.scss b/frontend/src/pages/creator/components/Clothing/clothing.module.scss
deleted file mode 100644
index 0663abe8d6777f839d8eb4f65e0767640269254b..0000000000000000000000000000000000000000
--- a/frontend/src/pages/creator/components/Clothing/clothing.module.scss
+++ /dev/null
@@ -1,160 +0,0 @@
-.appearance {
-    display: flex;
-
-    .range_element {
-        & span {
-            opacity: 0.9;
-            width: 100%;
-
-            text-align: center;
-
-            font-family: Arial, Helvetica, sans-serif;
-            font-size: 1.3888888888888888vh;
-            color: white;
-            text-shadow: 0vh 0vh 1vh black;
-            text-transform: uppercase;
-        }
-
-        .slider {
-            width: 100%;
-            margin-top: 0.9259259259259258vh;
-            display: flex;
-            align-items: center;
-            margin-bottom: 2.037037037vh;
-
-            & span {
-                font-size: 0.9629629629629629vh;
-            }
-
-            & input[type='range'] {
-                width: 100%;
-                margin-top: 1vh;
-
-                height: 0.37037037037037035vh;
-                background-color: #fff;
-                box-shadow: 0 0 0.5vh 0 #fff;
-                border-radius: 0.27777777777777773vh;
-                outline: none;
-                appearance: none;
-                -webkit-appearance: none;
-                border: none;
-                opacity: 0.7;
-
-                &::-webkit-slider-thumb {
-                    appearance: none;
-                    -webkit-appearance: none;
-
-                    width: 1.8518518518518516vh;
-                    height: 1.8518518518518516vh;
-                    background-color: red;
-
-                    filter: drop-shadow(0 0 0.27777777777777773vh black);
-
-                    border-radius: 2vh;
-
-                    outline: none;
-                }
-            }
-        }
-    }
-
-    .navigation {
-        margin-right: 3.6111111111111107vh;
-        display: flex;
-        flex-direction: column;
-        align-items: flex-start;
-
-        .element {
-            position: relative;
-
-            background: linear-gradient(to right, black, transparent);
-            margin-bottom: 1.574074074074074vh;
-            padding-left: 1.37037037037037vh;
-
-            width: 5.87037037037037vh;
-            height: 3.7037037037037033vh;
-
-            border-top: .1vh solid red;
-
-            display: flex;
-            align-items: center;
-
-            font-family: Arial, Helvetica, sans-serif;
-            font-size: 1.574074074074074vh;
-            color: rgba(0, 0, 0, 0.5);
-            text-align: right;
-
-            transition: opacity 0.2s linear, margin-left 0.2s ease, width .2s ease;
-
-            .img {
-
-                width: 3.0555555555555554vh;
-
-                background-size: cover;
-                background-repeat: no-repeat;
-            }
-
-            &.active {
-                width: 6.87037037037037vh;
-            }
-
-            &.active,
-            &:hover {
-                &::before {
-                    background: #000;
-                    opacity: 0.3;
-                }
-            }
-        }
-    }
-
-    .options {
-        display: flex;
-        flex-direction: column;
-
-        .title {
-            span {
-                color: white;
-                display: flex;
-                align-items: center;
-
-                &::before {
-                    content: "";
-                    position: absolute;
-                    margin-left: -.5vh;
-                    width: 0.2rem;
-                    height: 1.8rem;
-                    background-color: #fff;
-                    box-shadow: 0 0 0.5rem 0 #fff;
-                }
-            }
-
-            letter-spacing: 0.09259259259259259vh;
-            margin-bottom: 2.962962962962963vh;
-
-            font-family: Arial,
-            Helvetica,
-            sans-serif;
-            font-size: 1.9vh;
-            text-transform: uppercase;
-            color: rgba(0, 0, 0, 0.5);
-        }
-
-        .list {
-            display: flex;
-            flex-direction: column;
-
-            .element {
-                width: 33.148148148148145vh;
-                margin-bottom: 2.0370370370370368vh;
-
-                .creator-player-desc-span {
-                    color: rgba(0, 0, 0, 0.52) !important;
-                    font-family: 'TT Norms Bold' !important;
-                    font-size: 1.2962962962962963vh !important;
-                    text-transform: capitalize;
-                }
-            }
-        }
-    }
-}
\ No newline at end of file
diff --git a/frontend/src/pages/creator/components/FaceFeatures/FaceFeatures.tsx b/frontend/src/pages/creator/components/FaceFeatures/FaceFeatures.tsx
deleted file mode 100644
index 74c09244db924966cdc51f3be783d9531f95ba4a..0000000000000000000000000000000000000000
--- a/frontend/src/pages/creator/components/FaceFeatures/FaceFeatures.tsx
+++ /dev/null
@@ -1,560 +0,0 @@
-import { FC, useCallback, useEffect, useMemo, useState } from "react";
-import cn from "classnames";
-
-import EventManager from "utils/EventManager.util";
-
-import colors from "configs/colors";
-import { observer } from "mobx-react-lite";
-import style from "./facefeatures.module.scss";
-import { creatorStore } from "store/CharCreator.store";
-
-const eyebrowsList = [
-    "1",
-    "2",
-    "3",
-    "4",
-    "5",
-    "6",
-    "7",
-    "8",
-    "9",
-    "10",
-    "11",
-    "12",
-    "13",
-    "14",
-    "15",
-    "16",
-    "17",
-    "18",
-    "19",
-    "20",
-    "21",
-    "22",
-    "23",
-    "24",
-    "25",
-    "26",
-    "27",
-    "28",
-    "29",
-    "30",
-    "31",
-    "32",
-    "33",
-    "34"
-];
-const CreatorPlayerFace: FC<{ store: typeof creatorStore }> = ({ store }) => {
-    const [faceFeature, setFaceFeature] = useState("nose");
-
-    const pages = useMemo(() => {
-        return ["nose", "eyebrows", "cheekbones", "cheeks", "chin", "eyes"];
-    }, []);
-
-    const sendChangedData = useCallback((whichData: string) => {
-        switch (whichData) {
-            case "noseWidth":
-                return EventManager.emitClient("creator", "preview", "face", 0, store.data.face[0]);
-            case "nosePeakHeight":
-                return EventManager.emitClient("creator", "preview", "face", 1, store.data.face[1]);
-            case "nosePeakLength":
-                return EventManager.emitClient("creator", "preview", "face", 2, store.data.face[2]);
-            case "noseBoneHeight":
-                return EventManager.emitClient("creator", "preview", "face", 3, store.data.face[3]);
-            case "nosePeakLowering":
-                return EventManager.emitClient("creator", "preview", "face", 4, store.data.face[4]);
-            case "noseBoneTwist":
-                return EventManager.emitClient("creator", "preview", "face", 5, store.data.face[5]);
-            case "eyebrowHeight":
-                return EventManager.emitClient("creator", "preview", "face", 6, store.data.face[6]);
-            case "eyebrowForward":
-                return EventManager.emitClient("creator", "preview", "face", 7, store.data.face[7]);
-            case "cheekboneHeight":
-                return EventManager.emitClient("creator", "preview", "face", 8, store.data.face[8]);
-            case "cheekboneWidth":
-                return EventManager.emitClient("creator", "preview", "face", 9, store.data.face[9]);
-            case "cheekWidth":
-                return EventManager.emitClient("creator", "preview", "face", 10, store.data.face[10]);
-            case "ChimpBoneLowering":
-                return EventManager.emitClient("creator", "preview", "face", 15, store.data.face[15]);
-            case "ChimpBoneLength":
-                return EventManager.emitClient("creator", "preview", "face", 16, store.data.face[16]);
-            case "ChimpBoneWidth":
-                return EventManager.emitClient("creator", "preview", "face", 17, store.data.face[17]);
-            case "ChimpHole":
-                return EventManager.emitClient("creator", "preview", "face", 18, store.data.face[18]);
-            case "eyesWidth":
-                return EventManager.emitClient("creator", "preview", "face", 11, store.data.face[11]);
-            case "lips":
-                return EventManager.emitClient("creator", "preview", "face", 12, store.data.face[12]);
-            case "jawBoneWidth":
-                return EventManager.emitClient("creator", "preview", "face", 13, store.data.face[13]);
-            case "jawBoneBackLength":
-                return EventManager.emitClient("creator", "preview", "face", 14, store.data.face[14]);
-            case "neckWidth":
-                return EventManager.emitClient("creator", "preview", "face", 19, store.data.face[19]);
-            case "eyebrows":
-                return EventManager.emitClient("creator", "preview", "hair", 1, store.data.hair.eyebrows);
-            default:
-                return;
-        }
-    }, []);
-
-    const sendColorChangedData = useCallback((eyebrows: boolean) => {
-        if (eyebrows) EventManager.emitClient("creator", "preview", "color", 1, store.data.color.eyebrows);
-        else EventManager.emitClient("creator", "preview", "color", 2, colors.eyes[store.data.color.eyes].id);
-    }, []);
-
-    return (
-        <div className={style.appearance}>
-            <div className={style.navigation}>
-                {pages.map((x, i) => {
-                    return (
-                        <div key={i}>
-                            <div key={i} className={cn(style.element, faceFeature === x ? style.active : undefined)} onClick={() => setFaceFeature(x)}>
-                                <img key={i} className={style.img} src={`${new URL(`../../../../assets/images/creator/icons/${x}.svg`, import.meta.url).href}`} alt="#"></img>
-                            </div>
-                        </div>
-                    );
-                })}
-            </div>
-            <div className={style.options}>
-                <div className={style.title}>
-                    <span>select {faceFeature} options</span>
-                </div>
-                <div className={style.list}>
-                    {faceFeature === "nose" ? (
-                        <div className="test">
-                            <div key="k_noseWidth" className={style.element}>
-                                <div className={style.range_element}>
-                                    <span>width</span>
-                                    <div className={style.slider}>
-                                        <input
-                                            type="range"
-                                            max={100}
-                                            min={-100}
-                                            value={store.data.face[0]}
-                                            onChange={(value) => {
-                                                store.data.face[0] = Number(value.target.value);
-                                                sendChangedData("noseWidth");
-                                            }}
-                                        />
-                                    </div>
-                                </div>
-                            </div>
-                            <div key="k_noseLength" className={style.element}>
-                                <div className={style.range_element}>
-                                    <span>height</span>
-                                    <div className={style.slider}>
-                                        <input
-                                            type="range"
-                                            max={100}
-                                            min={-100}
-                                            value={store.data.face[1]}
-                                            onChange={(value) => {
-                                                store.data.face[1] = Number(value.target.value);
-                                                sendChangedData("nosePeakHeight");
-                                            }}
-                                        />
-                                    </div>
-                                </div>
-                            </div>
-                            <div key="k_noseHeight" className={style.element}>
-                                <div className={style.range_element}>
-                                    <span>length</span>
-                                    <div className={style.slider}>
-                                        <input
-                                            type="range"
-                                            max={100}
-                                            min={-100}
-                                            value={store.data.face[2]}
-                                            onChange={(value) => {
-                                                store.data.face[2] = Number(value.target.value);
-                                                sendChangedData("nosePeakLength");
-                                            }}
-                                        />
-                                    </div>
-                                </div>
-                            </div>
-                            <div key="k_noseTip" className={style.element}>
-                                <div className={style.range_element}>
-                                    <span>nose tip</span>
-                                    <div className={style.slider}>
-                                        <input
-                                            type="range"
-                                            max={100}
-                                            min={-100}
-                                            value={store.data.face[3]}
-                                            onChange={(value) => {
-                                                store.data.face[3] = Number(value.target.value);
-                                                sendChangedData("noseBoneHeight");
-                                            }}
-                                        />
-                                    </div>
-                                </div>
-                            </div>
-                            <div key="k_noseBridge" className={style.element}>
-                                <div className={style.range_element}>
-                                    <span>tip length</span>
-                                    <div className={style.slider}>
-                                        <input
-                                            type="range"
-                                            max={100}
-                                            min={-100}
-                                            value={store.data.face[4]}
-                                            onChange={(value) => {
-                                                store.data.face[4] = Number(value.target.value);
-                                                sendChangedData("nosePeakLowering");
-                                            }}
-                                        />
-                                    </div>
-                                </div>
-                            </div>
-                            <div key="k_noseBridgeShaft" className={style.element}>
-                                <div className={style.range_element}>
-                                    <span>nose shaft</span>
-                                    <div className={style.slider}>
-                                        <input
-                                            type="range"
-                                            max={100}
-                                            min={-100}
-                                            value={store.data.face[5]}
-                                            onChange={(value) => {
-                                                store.data.face[5] = Number(value.target.value);
-                                                sendChangedData("noseBoneTwist");
-                                            }}
-                                        />
-                                    </div>
-                                </div>
-                            </div>
-                        </div>
-                    ) : faceFeature === "eyebrows" ? (
-                        <div className="test">
-                            <div key="k_eyebrowsType" className={style.element}>
-                                <div className={style.range_element}>
-                                    <span>type</span>
-                                    <div className={style.slider}>
-                                        <input
-                                            type="range"
-                                            max={eyebrowsList.length - 1}
-                                            min={0}
-                                            step={1}
-                                            value={store.data.hair.eyebrows}
-                                            onChange={(value) => {
-                                                store.data.hair.eyebrows = Number(value.target.value);
-                                                sendChangedData("eyebrows");
-                                            }}
-                                        />
-                                    </div>
-                                </div>
-                            </div>
-                            <div key="k_eyebrowsHeight" className={style.element}>
-                                <div className={style.range_element}>
-                                    <span>height</span>
-                                    <div className={style.slider}>
-                                        <input
-                                            type="range"
-                                            max={100}
-                                            min={-100}
-                                            value={store.data.face[6]}
-                                            onChange={(value) => {
-                                                store.data.face[6] = Number(value.target.value);
-                                                sendChangedData("eyebrowHeight");
-                                            }}
-                                        />
-                                    </div>
-                                </div>
-                            </div>
-                            <div key="k_eyebrowsDeep" className={style.element}>
-                                <div className={style.range_element}>
-                                    <span>depth</span>
-                                    <div className={style.slider}>
-                                        <input
-                                            type="range"
-                                            max={100}
-                                            min={-100}
-                                            value={store.data.face[7]}
-                                            onChange={(value) => {
-                                                store.data.face[7] = Number(value.target.value);
-                                                sendChangedData("eyebrowForward");
-                                            }}
-                                        />
-                                    </div>
-                                </div>
-                            </div>
-                            <div key="k_eyebrowsColor" className={style.element}>
-                                <div className={style.colorList}>
-                                    <div className={style.element}>
-                                        <span>eyebrow color</span>
-                                        <div className={style.input}>
-                                            {colors.hair.map((el, key) => {
-                                                if (key < 19)
-                                                    return (
-                                                        <div
-                                                            key={key}
-                                                            className={cn(style.box, store.data.color.eyebrows === key && style.active)}
-                                                            style={{ backgroundColor: `${el.color}` }}
-                                                            onClick={() => {
-                                                                store.data.color.eyebrows = key;
-                                                                sendColorChangedData(true);
-                                                            }}
-                                                        />
-                                                    );
-                                                else return null;
-                                            })}
-                                        </div>
-                                    </div>
-                                </div>
-                            </div>
-                        </div>
-                    ) : faceFeature === "cheekbones" ? (
-                        <div className="test">
-                            <div key="k_cheekbonesHeight" className={style.element}>
-                                <div className={style.range_element}>
-                                    <span>height</span>
-                                    <div className={style.slider}>
-                                        <input
-                                            type="range"
-                                            max={100}
-                                            min={-100}
-                                            value={store.data.face[8]}
-                                            onChange={(value) => {
-                                                store.data.face[8] = Number(value.target.value);
-                                                sendChangedData("cheekboneHeight");
-                                            }}
-                                        />
-                                    </div>
-                                </div>
-                            </div>
-                            <div key="k_cheekbonesWidth" className={style.element}>
-                                <div className={style.range_element}>
-                                    <span>width</span>
-                                    <div className={style.slider}>
-                                        <input
-                                            type="range"
-                                            max={100}
-                                            min={-100}
-                                            value={store.data.face[9]}
-                                            onChange={(value) => {
-                                                store.data.face[9] = Number(value.target.value);
-                                                sendChangedData("cheekboneWidth");
-                                            }}
-                                        />
-                                    </div>
-                                </div>
-                            </div>
-                        </div>
-                    ) : faceFeature === "cheeks" ? (
-                        <div className="test">
-                            <div key="k_cheeksDeep" className={style.element}>
-                                <div className={style.range_element}>
-                                    <span>depth</span>
-                                    <div className={style.slider}>
-                                        <input
-                                            type="range"
-                                            max={100}
-                                            min={-100}
-                                            value={store.data.face[10]}
-                                            onChange={(value) => {
-                                                store.data.face[10] = Number(value.target.value);
-                                                sendChangedData("cheekWidth");
-                                            }}
-                                        />
-                                    </div>
-                                </div>
-                            </div>
-                        </div>
-                    ) : faceFeature === "chin" ? (
-                        <div className="test">
-                            <div key="k_chinHeight" className={style.element}>
-                                <div className={style.range_element}>
-                                    <span>height</span>
-                                    <div className={style.slider}>
-                                        <input
-                                            type="range"
-                                            max={100}
-                                            min={-100}
-                                            value={store.data.face[15]}
-                                            onChange={(value) => {
-                                                store.data.face[15] = Number(value.target.value);
-                                                sendChangedData("ChimpBoneLowering");
-                                            }}
-                                        />
-                                    </div>
-                                </div>
-                            </div>
-                            <div key="k_chinDeep" className={style.element}>
-                                <div className={style.range_element}>
-                                    <span>depth</span>
-                                    <div className={style.slider}>
-                                        <input
-                                            type="range"
-                                            max={100}
-                                            min={-100}
-                                            value={store.data.face[16]}
-                                            onChange={(value) => {
-                                                store.data.face[16] = Number(value.target.value);
-                                                sendChangedData("ChimpBoneLength");
-                                            }}
-                                        />
-                                    </div>
-                                </div>
-                            </div>
-                            <div key="k_chinWidth" className={style.element}>
-                                <div className={style.range_element}>
-                                    <span>width</span>
-                                    <div className={style.slider}>
-                                        <input
-                                            type="range"
-                                            max={100}
-                                            min={-100}
-                                            value={store.data.face[17]}
-                                            onChange={(value) => {
-                                                store.data.face[17] = Number(value.target.value);
-                                                sendChangedData("ChimpBoneWidth");
-                                            }}
-                                        />
-                                    </div>
-                                </div>
-                            </div>
-                            <div key="k_chinIndent" className={style.element}>
-                                <div className={style.range_element}>
-                                    <span>indentation</span>
-                                    <div className={style.slider}>
-                                        <input
-                                            type="range"
-                                            max={100}
-                                            min={-100}
-                                            value={store.data.face[18]}
-                                            onChange={(value) => {
-                                                store.data.face[18] = Number(value.target.value);
-                                                sendChangedData("ChimpHole");
-                                            }}
-                                        />
-                                    </div>
-                                </div>
-                            </div>
-                        </div>
-                    ) : faceFeature === "eyes" ? (
-                        <div className="test">
-                            <div key="k_eyesWidth" className={style.element}>
-                                <div className={style.range_element}>
-                                    <span>width</span>
-                                    <div className={style.slider}>
-                                        <input
-                                            type="range"
-                                            max={100}
-                                            min={-100}
-                                            value={store.data.face[11]}
-                                            onChange={(value) => {
-                                                store.data.face[11] = Number(value.target.value);
-                                                sendChangedData("eyesWidth");
-                                            }}
-                                        />
-                                    </div>
-                                </div>
-                            </div>
-                            <div key="k_eyesColor" className={style.element}>
-                                <div className={style.colorList}>
-                                    <div className={style.element}>
-                                        <span>eye color</span>
-                                        <div className={style.input}>
-                                            {colors.eyes.map((el, key) => {
-                                                if (![9, 10, 11].includes(el.id))
-                                                    return (
-                                                        <div
-                                                            key={key}
-                                                            className={cn(style.box, store.data.color.eyes === key && style.active)}
-                                                            style={{ backgroundColor: `${el.color}` }}
-                                                            onClick={() => {
-                                                                store.data.color.eyes = key;
-                                                                sendColorChangedData(false);
-                                                            }}
-                                                        />
-                                                    );
-                                                else return null;
-                                            })}
-                                        </div>
-                                    </div>
-                                </div>
-                            </div>
-                        </div>
-                    ) : (
-                        <div className="test">
-                            <div key="k_lips" className={style.element}>
-                                <div className={style.range_element}>
-                                    <span>lip thickness</span>
-                                    <div className={style.slider}>
-                                        <input
-                                            type="range"
-                                            max={100}
-                                            min={-100}
-                                            value={store.data.face[12]}
-                                            onChange={(value) => {
-                                                store.data.face[12] = Number(value.target.value);
-                                                sendChangedData("lips");
-                                            }}
-                                        />
-                                    </div>
-                                </div>
-                            </div>
-                            <div key="k_chinWidth" className={style.element}>
-                                <div className={style.range_element}>
-                                    <span>jaw width</span>
-                                    <div className={style.slider}>
-                                        <input
-                                            type="range"
-                                            max={100}
-                                            min={-100}
-                                            value={store.data.face[13]}
-                                            onChange={(value) => {
-                                                store.data.face[13] = Number(value.target.value);
-                                                sendChangedData("jawBoneWidth");
-                                            }}
-                                        />
-                                    </div>
-                                </div>
-                            </div>
-                            <div key="k_chinHeight" className={style.element}>
-                                <div className={style.range_element}>
-                                    <span>jaw size</span>
-                                    <div className={style.slider}>
-                                        <input
-                                            type="range"
-                                            max={100}
-                                            min={-100}
-                                            value={store.data.face[14]}
-                                            onChange={(value) => {
-                                                store.data.face[14] = Number(value.target.value);
-                                                sendChangedData("jawBoneBackLength");
-                                            }}
-                                        />
-                                    </div>
-                                </div>
-                            </div>
-                            <div key="k_neckWidth" className={style.element}>
-                                <div className={style.range_element}>
-                                    <span>neck girth</span>
-                                    <div className={style.slider}>
-                                        <input
-                                            type="range"
-                                            max={100}
-                                            min={-100}
-                                            value={store.data.face[19]}
-                                            onChange={(value) => {
-                                                store.data.face[19] = Number(value.target.value);
-                                                sendChangedData("neckWidth");
-                                            }}
-                                        />
-                                    </div>
-                                </div>
-                            </div>
-                        </div>
-                    )}
-                </div>
-            </div>
-        </div>
-    );
-};
-
-export default observer(CreatorPlayerFace);
diff --git a/frontend/src/pages/creator/components/FaceFeatures/facefeatures.module.scss b/frontend/src/pages/creator/components/FaceFeatures/facefeatures.module.scss
deleted file mode 100644
index a0ec6baf091aa611aba3f8f6cf5ed714e7a8a0bd..0000000000000000000000000000000000000000
--- a/frontend/src/pages/creator/components/FaceFeatures/facefeatures.module.scss
+++ /dev/null
@@ -1,191 +0,0 @@
-.appearance {
-    display: flex;
-
-    .range_element {
-        & span {
-            opacity: 0.9;
-            width: 100%;
-
-            text-align: center;
-
-            font-family: Arial, Helvetica, sans-serif;
-            font-size: 1.3888888888888888vh;
-            color: white;
-            text-shadow: 0vh 0vh 1vh black;
-            text-transform: uppercase;
-        }
-
-        .slider {
-            width: 100%;
-            margin-top: 0.9259259259259258vh;
-            display: flex;
-            align-items: center;
-            margin-bottom: 2.037037037vh;
-
-            & span {
-                font-size: 0.9629629629629629vh;
-            }
-
-            & input[type='range'] {
-                width: 100%;
-                margin-top: 1vh;
-
-                height: 0.37037037037037035vh;
-                background-color: #fff;
-                box-shadow: 0 0 0.5vh 0 #fff;
-                border-radius: 0.27777777777777773vh;
-                outline: none;
-                appearance: none;
-                -webkit-appearance: none;
-                border: none;
-                opacity: 0.7;
-
-                &::-webkit-slider-thumb {
-                    appearance: none;
-                    -webkit-appearance: none;
-
-                    width: 1.8518518518518516vh;
-                    height: 1.8518518518518516vh;
-                    background-color: red;
-
-                    filter: drop-shadow(0 0 0.27777777777777773vh black);
-
-                    border-radius: 2vh;
-
-                    outline: none;
-                }
-            }
-        }
-    }
-
-    .navigation {
-        margin-right: 3.6111111111111107vh;
-        display: flex;
-        flex-direction: column;
-        align-items: flex-start;
-
-        .element {
-            position: relative;
-
-            background: linear-gradient(to right, black, transparent);
-            margin-bottom: 1.574074074074074vh;
-            padding-left: 1.37037037037037vh;
-
-            width: 5.87037037037037vh;
-            height: 3.7037037037037033vh;
-
-            border-top: .1vh solid red;
-
-            display: flex;
-            align-items: center;
-
-            font-family: Arial, Helvetica, sans-serif;
-            font-size: 1.574074074074074vh;
-            color: rgba(0, 0, 0, 0.5);
-            text-align: right;
-
-            transition: opacity 0.2s linear, margin-left 0.2s ease, width .2s ease;
-
-            .img {
-                margin-right: 3.796296296296296vh;
-
-                width: 3.0555555555555554vh;
-
-                background-size: cover;
-                background-repeat: no-repeat;
-            }
-
-            &.active {
-                width: 6.87037037037037vh;
-            }
-
-            &.active,
-            &:hover {
-                &::before {
-                    background: #000;
-                    opacity: 0.3;
-                }
-            }
-        }
-    }
-
-    .options {
-        display: flex;
-        flex-direction: column;
-
-        .title {
-            span {
-                color: white;
-                display: flex;
-                align-items: center;
-
-                &::before {
-                    content: "";
-                    position: absolute;
-                    margin-left: -.5vh;
-                    width: 0.2rem;
-                    height: 1.8rem;
-                    background-color: #fff;
-                    box-shadow: 0 0 0.5rem 0 #fff;
-                }
-            }
-
-            letter-spacing: 0.09259259259259259vh;
-            margin-bottom: 2.962962962962963vh;
-
-            font-family: Arial,
-            Helvetica,
-            sans-serif;
-            font-size: 1.9vh;
-            text-transform: uppercase;
-            color: rgba(0, 0, 0, 0.5);
-        }
-
-        .list {
-            display: flex;
-            flex-direction: column;
-
-            .element {
-                width: 33.148148148148145vh;
-                margin-bottom: 2.0370370370370368vh;
-            }
-        }
-    }
-
-    .colorList {
-        display: flex;
-        flex-direction: column;
-        align-items: flex-start;
-
-        .input {
-            display: grid;
-            margin-bottom: 0.9259259259259258vh;
-            grid-template-columns: repeat(13, 1fr);
-            margin-top: 1vh;
-
-            .box {
-                width: 2.3888888888888888vh;
-                margin-right: 0.27777777777777773vh;
-                margin-bottom: 0.27777777777777773vh;
-                height: 2.3888888888888888vh;
-                transition: height 0.2s ease;
-
-                &.active,
-                &:hover {
-                    outline: 1px solid black;
-                }
-            }
-        }
-
-        & span {
-            opacity: 0.9;
-            width: 100%;
-            text-align: center;
-            font-family: Arial, Helvetica, sans-serif;
-            font-size: 1.3888888888888888vh;
-            color: white;
-            text-shadow: 0vh 0vh 1vh black;
-            text-transform: uppercase;
-        }
-    }
-}
\ No newline at end of file
diff --git a/frontend/src/pages/creator/components/GeneralData/GeneralData.tsx b/frontend/src/pages/creator/components/GeneralData/GeneralData.tsx
deleted file mode 100644
index 294e8bf0731a1a475cfa26f7f1af2e0ff2e01297..0000000000000000000000000000000000000000
--- a/frontend/src/pages/creator/components/GeneralData/GeneralData.tsx
+++ /dev/null
@@ -1,283 +0,0 @@
-import { FC, useCallback, useEffect, useMemo, useState } from "react";
-
-import cn from "classnames";
-import { observer } from "mobx-react-lite";
-
-import successIcon from "assets/images/creator/icons/success.svg";
-import wrongIcon from "assets/images/creator/icons/error.svg";
-
-import { badWords, badNames } from "../../utils/Textchecker";
-
-import { regExp } from "utils/Helpers.util";
-import EventManager from "utils/EventManager.util";
-
-import style from "./generaldata.module.scss";
-
-import maleicon from "assets/images/creator/icons/male.svg";
-import femaleicon from "assets/images/creator/icons/female.svg";
-import { creatorStore } from "store/CharCreator.store";
-
-const CreatorPlayerName: FC<{ store: typeof creatorStore; isNicknameValid: boolean; setNicknameValid: (value: boolean) => void }> = ({ store, isNicknameValid, setNicknameValid }) => {
-    const [parents, setParents] = useState({ mother: 0, father: 0 });
-
-    const fathersList = useMemo(
-            () => [
-                { id: 0, image: new URL("../../../../assets/images/creator/male/0.png", import.meta.url).href, name: "Benjamin" },
-                { id: 1, image: new URL("../../../../assets/images/creator/male/1.png", import.meta.url).href, name: "Daniel" },
-                { id: 2, image: new URL("../../../../assets/images/creator/male/2.png", import.meta.url).href, name: "Joshua" },
-                { id: 3, image: new URL("../../../../assets/images/creator/male/3.png", import.meta.url).href, name: "Noah" },
-                { id: 4, image: new URL("../../../../assets/images/creator/male/4.png", import.meta.url).href, name: "Andrew" },
-                { id: 5, image: new URL("../../../../assets/images/creator/male/5.png", import.meta.url).href, name: "Joan" },
-                { id: 6, image: new URL("../../../../assets/images/creator/male/6.png", import.meta.url).href, name: "Alex" },
-                { id: 7, image: new URL("../../../../assets/images/creator/male/7.png", import.meta.url).href, name: "Isaac" },
-                { id: 8, image: new URL("../../../../assets/images/creator/male/8.png", import.meta.url).href, name: "Evan" },
-                { id: 9, image: new URL("../../../../assets/images/creator/male/9.png", import.meta.url).href, name: "Ethan" },
-                { id: 10, image: new URL("../../../../assets/images/creator/male/10.png", import.meta.url).href, name: "Vincent" },
-                { id: 11, image: new URL("../../../../assets/images/creator/male/11.png", import.meta.url).href, name: "Angel" },
-                { id: 12, image: new URL("../../../../assets/images/creator/male/12.png", import.meta.url).href, name: "Diego" },
-                { id: 13, image: new URL("../../../../assets/images/creator/male/13.png", import.meta.url).href, name: "Adrian" },
-                { id: 14, image: new URL("../../../../assets/images/creator/male/14.png", import.meta.url).href, name: "Gabriel" },
-                { id: 15, image: new URL("../../../../assets/images/creator/male/15.png", import.meta.url).href, name: "Michael" },
-                { id: 16, image: new URL("../../../../assets/images/creator/male/16.png", import.meta.url).href, name: "Santiago" },
-                { id: 17, image: new URL("../../../../assets/images/creator/male/17.png", import.meta.url).href, name: "Kevin" },
-                { id: 18, image: new URL("../../../../assets/images/creator/male/18.png", import.meta.url).href, name: "Louis" },
-                { id: 19, image: new URL("../../../../assets/images/creator/male/19.png", import.meta.url).href, name: "Samuel" },
-                { id: 20, image: new URL("../../../../assets/images/creator/male/20.png", import.meta.url).href, name: "Anthony" },
-                { id: 42, image: new URL("../../../../assets/images/creator/male/42.png", import.meta.url).href, name: "Claude" },
-                { id: 43, image: new URL("../../../../assets/images/creator/male/43.png", import.meta.url).href, name: "Niko" },
-                { id: 44, image: new URL("../../../../assets/images/creator/male/44.png", import.meta.url).href, name: "John" }
-            ],
-            []
-        ),
-        mothersList = useMemo(
-            () => [
-                { id: 21, image: new URL("../../../../assets/images/creator/female/21.png", import.meta.url).href, name: "Hannah" },
-                { id: 22, image: new URL("../../../../assets/images/creator/female/22.png", import.meta.url).href, name: "Audrey" },
-                { id: 23, image: new URL("../../../../assets/images/creator/female/23.png", import.meta.url).href, name: "Jasmine" },
-                { id: 24, image: new URL("../../../../assets/images/creator/female/24.png", import.meta.url).href, name: "Giselle" },
-                { id: 25, image: new URL("../../../../assets/images/creator/female/25.png", import.meta.url).href, name: "Amelia" },
-                { id: 26, image: new URL("../../../../assets/images/creator/female/26.png", import.meta.url).href, name: "Isabella" },
-                { id: 27, image: new URL("../../../../assets/images/creator/female/27.png", import.meta.url).href, name: "Zoe" },
-                { id: 28, image: new URL("../../../../assets/images/creator/female/28.png", import.meta.url).href, name: "Ava" },
-                { id: 29, image: new URL("../../../../assets/images/creator/female/29.png", import.meta.url).href, name: "Camilla" },
-                { id: 30, image: new URL("../../../../assets/images/creator/female/30.png", import.meta.url).href, name: "Violet" },
-                { id: 31, image: new URL("../../../../assets/images/creator/female/31.png", import.meta.url).href, name: "Sophia" },
-                { id: 32, image: new URL("../../../../assets/images/creator/female/32.png", import.meta.url).href, name: "Eveline" },
-                { id: 33, image: new URL("../../../../assets/images/creator/female/33.png", import.meta.url).href, name: "Nicole" },
-                { id: 34, image: new URL("../../../../assets/images/creator/female/34.png", import.meta.url).href, name: "Ashley" },
-                { id: 35, image: new URL("../../../../assets/images/creator/female/35.png", import.meta.url).href, name: "Grace" },
-                { id: 36, image: new URL("../../../../assets/images/creator/female/36.png", import.meta.url).href, name: "Brianna" },
-                { id: 37, image: new URL("../../../../assets/images/creator/female/37.png", import.meta.url).href, name: "Natalie" },
-                { id: 38, image: new URL("../../../../assets/images/creator/female/38.png", import.meta.url).href, name: "Olivia" },
-                { id: 39, image: new URL("../../../../assets/images/creator/female/39.png", import.meta.url).href, name: "Elizabeth" },
-                { id: 40, image: new URL("../../../../assets/images/creator/female/40.png", import.meta.url).href, name: "Charlotte" },
-                { id: 41, image: new URL("../../../../assets/images/creator/female/41.png", import.meta.url).href, name: "Emma" },
-                { id: 45, image: new URL("../../../../assets/images/creator/female/45.png", import.meta.url).href, name: "Misty" }
-            ],
-            []
-        );
-
-    const changeFather = useCallback(
-        (e: number) => {
-            store.data.parents.father = e;
-            sendParentsData(0);
-            setParents({ ...parents, father: e });
-        },
-        [fathersList, store.data.parents, parents]
-    );
-
-    const changeMother = useCallback(
-        (e: number) => {
-            store.data.parents.mother = e;
-            sendParentsData(1);
-            setParents({ ...parents, mother: e });
-        },
-        [mothersList, store.data.parents, parents]
-    );
-
-    useEffect(() => {
-        let fatherOld = fathersList.findIndex((el) => el.id === store.data.parents.father);
-        let motherOld = mothersList.findIndex((el) => el.id === store.data.parents.mother);
-        setParents({ mother: motherOld, father: fatherOld });
-    }, []);
-
-    const sendParentsData = useCallback((idx: number) => {
-        switch (idx) {
-            case 0:
-                return EventManager.emitClient("creator", "preview", "parents", 0, store.data.parents.father);
-            case 1:
-                return EventManager.emitClient("creator", "preview", "parents", 1, store.data.parents.mother);
-            case 2:
-                return EventManager.emitClient("creator", "preview", "parents", 2, store.data.parents.leatherMix);
-            case 3:
-                return EventManager.emitClient("creator", "preview", "parents", 3, store.data.parents.similarity);
-            default:
-                return;
-        }
-    }, []);
-
-    const checkNickname = useCallback(() => {
-        setNicknameValid(false);
-
-        const firstname = store.data.name.firstname.toLowerCase(),
-            lastname = store.data.name.lastname.toLowerCase();
-        if (firstname === "" || lastname === "") return;
-
-        for (let i = 0; i < badNames.length; i++) {
-            if (firstname.includes(badNames[i][0]) && lastname.includes(badNames[i][1])) return;
-        }
-
-        if (regExp.nickname.test(firstname)) return setNicknameValid(false);
-        else if (regExp.nickname.test(lastname)) return setNicknameValid(false);
-        else if (badWords.indexOf(firstname) >= 0 || badWords.indexOf(lastname) >= 0) return setNicknameValid(false);
-        else if (firstname.length < 3) return setNicknameValid(false);
-        else if (lastname.length < 3) return setNicknameValid(false);
-        else if (firstname.length > 12) return setNicknameValid(false);
-        else if (lastname.length > 12) return setNicknameValid(false);
-        else {
-            return setNicknameValid(true);
-        }
-    }, [store.data.name]); // eslint-disable-line
-
-    useEffect(() => {
-        checkNickname();
-    }, [store.data.name.firstname, store.data.name.lastname]);
-
-    return (
-        <div className={style.generaldata}>
-            <div className={style.title}>
-                <span>SELECT GENDER AND NAME</span>
-                <img src={isNicknameValid ? successIcon : wrongIcon} alt="#" />
-            </div>
-            <div className={style.form}>
-                <div className={style.namedata}>
-                    <div className={style.nameinput}>
-                        <input
-                            key="k_firstname"
-                            type="text"
-                            placeholder="Firstname"
-                            maxLength={13}
-                            onChange={(e) => (store.data.name.firstname = e.target.value.charAt(0).toUpperCase() + e.target.value.slice(1).toLowerCase())}
-                            value={store.data.name.firstname}
-                        />
-                    </div>
-                    <div className={style.nameinput}>
-                        <input
-                            key="k_lastname"
-                            type="text"
-                            placeholder="Lastname"
-                            maxLength={13}
-                            onChange={(e) => (store.data.name.lastname = e.target.value.charAt(0).toUpperCase() + e.target.value.slice(1).toLowerCase())}
-                            value={store.data.name.lastname}
-                        />
-                    </div>
-                </div>
-
-                <div className={style.gender}>
-                    <div
-                        className={cn(style.female, store.data.sex === 1 ? style.active : undefined)}
-                        onClick={() => {
-                            store.data.sex = 0;
-                            EventManager.emitClient("creator", "preview", "sex", 0);
-                        }}
-                    >
-                        <img src={maleicon} alt="" /> male
-                    </div>
-                    <div
-                        className={cn(style.male, store.data.sex === 0 ? style.active : undefined)}
-                        onClick={() => {
-                            store.data.sex = 1;
-                            EventManager.emitClient("creator", "preview", "sex", 1);
-                        }}
-                    >
-                        <img src={femaleicon} alt="" /> female
-                    </div>
-                </div>
-            </div>
-
-            <div className={style.title}>
-                <span>SELECT PARENTS</span>
-            </div>
-            <div className={style.parentsImages}>
-                <div className={style.box}>
-                    <div className={style.list}>
-                        <div key={store.data.parents.mother} className={style.element}>
-                            <img className={style.image} src={mothersList[store.data.parents.mother]?.image} alt="#" />
-                        </div>
-                    </div>
-                    <div className={style.name}>{mothersList[store.data.parents.mother].name}</div>
-                </div>
-
-                <div className={style.box}>
-                    <div className={style.list}>
-                        <div key={store.data.parents.father} className={style.element}>
-                            <img className={style.image} src={fathersList[store.data.parents.father]?.image} alt="#" />
-                        </div>
-                    </div>
-                    <div className={style.name}>{fathersList[store.data.parents.father].name}</div>
-                </div>
-            </div>
-            <div className={style.options}>
-                <div className={style.list}>
-                    <div className={style.element}>
-                        <div className={style.range_element}>
-                            <div className={style.parentsRange}>
-                                <div className={style.slider}>
-                                    <input
-                                        type="range"
-                                        max={mothersList.length - 1}
-                                        min={0}
-                                        step={1}
-                                        value={store.data.parents.mother}
-                                        onChange={(value) => {
-                                            changeMother(parseInt(value.target.value));
-                                        }}
-                                    />
-                                </div>
-                                <div className={style.slider}>
-                                    <input
-                                        type="range"
-                                        max={fathersList.length - 1}
-                                        min={0}
-                                        value={store.data.parents.father}
-                                        onChange={(value) => {
-                                            changeFather(parseInt(value.target.value));
-                                        }}
-                                    />
-                                </div>
-                            </div>
-                            <span>similarity</span>
-                            <div className={style.slider}>
-                                <input
-                                    type="range"
-                                    max={100}
-                                    min={-100}
-                                    value={store.data.parents.similarity}
-                                    onChange={(value) => {
-                                        store.data.parents.similarity = Number(value.target.value);
-                                        sendParentsData(3);
-                                    }}
-                                />
-                            </div>
-                            <span>skin color</span>
-                            <div className={style.slider}>
-                                <input
-                                    type="range"
-                                    max={100}
-                                    min={-100}
-                                    value={store.data.parents.leatherMix}
-                                    onChange={(value) => {
-                                        store.data.parents.leatherMix = Number(value.target.value);
-                                        sendParentsData(2);
-                                    }}
-                                />
-                            </div>
-                        </div>
-                    </div>
-                </div>
-            </div>
-        </div>
-    );
-};
-
-export default observer(CreatorPlayerName);
diff --git a/frontend/src/pages/creator/components/GeneralData/generaldata.module.scss b/frontend/src/pages/creator/components/GeneralData/generaldata.module.scss
deleted file mode 100644
index 7cd780768b6fb9faec132f92d95c4854010acdb6..0000000000000000000000000000000000000000
--- a/frontend/src/pages/creator/components/GeneralData/generaldata.module.scss
+++ /dev/null
@@ -1,269 +0,0 @@
-.generaldata {
-    position: relative;
-    display: flex;
-    flex-direction: column;
-    align-items: flex-start;
-    margin-left: 2.5vh;
-
-    .parentsImages {
-        position: relative;
-        display: flex;
-        align-items: center;
-        justify-content: center;
-        margin-bottom: 3.7037037037037033vh;
-        background-color: rgba(0, 0, 0, .5);
-        border-radius: 1vh;
-        width: 33.1481481481vh;
-        margin-bottom: 2.037037037vh;
-
-        .box {
-            position: relative;
-            width: 11.574074074074073vh;
-            height: 11.574074074074073vh;
-
-            display: flex;
-            flex-direction: column;
-            align-items: center;
-
-            .list {
-                position: relative;
-                width: 100%;
-                height: 100%;
-
-
-                .element {
-                    width: 100%;
-                    height: 100%;
-                    margin-bottom: 0.46296296296296297vh;
-
-                    &:last-of-type {
-                        margin-bottom: 0;
-                    }
-
-                    .image {
-                        height: 100%;
-                    }
-                }
-            }
-
-            .name {
-                position: absolute;
-                bottom: 0.27777777777777773vh;
-
-                font-size: 1.574074074074074vh;
-                color: #fff;
-                text-shadow: 0vh 0.09259259259259259vh 0.27777777777777773vh rgba(0, 0, 0, 0.75);
-                text-transform: uppercase;
-            }
-        }
-    }
-
-    .parentsRange {
-        display: flex;
-        gap: 1vh;
-    }
-
-    .range_element {
-        & span {
-            opacity: 0.9;
-            width: 100%;
-
-            text-align: center;
-
-            font-family: Arial, Helvetica, sans-serif;
-            font-size: 1.3888888888888888vh;
-            color: white;
-            text-shadow: 0vh 0vh 1vh black;
-            text-transform: uppercase;
-        }
-
-        .slider {
-            width: 100%;
-            margin-top: 0.9259259259259258vh;
-            display: flex;
-            align-items: center;
-            margin-bottom: 2.037037037vh;
-
-            & span {
-                font-size: 0.9629629629629629vh;
-            }
-
-            & input[type='range'] {
-                width: 100%;
-                margin-top: 1vh;
-
-                height: 0.37037037037037035vh;
-                background-color: #fff;
-                box-shadow: 0 0 0.5vh 0 #fff;
-                border-radius: 0.27777777777777773vh;
-                outline: none;
-                appearance: none;
-                -webkit-appearance: none;
-                border: none;
-                opacity: 0.7;
-
-                &::-webkit-slider-thumb {
-                    appearance: none;
-                    -webkit-appearance: none;
-
-                    width: 1.8518518518518516vh;
-                    height: 1.8518518518518516vh;
-                    background-color: red;
-
-                    filter: drop-shadow(0 0 0.27777777777777773vh black);
-
-                    border-radius: 2vh;
-
-                    outline: none;
-                }
-            }
-        }
-    }
-
-    .options {
-        display: flex;
-        flex-direction: column;
-
-        .title {
-            span {
-                color: white;
-                display: flex;
-                align-items: center;
-
-                &::before {
-                    content: "";
-                    position: absolute;
-                    margin-left: -.5vh;
-                    width: 0.2rem;
-                    height: 1.8rem;
-                    background-color: #fff;
-                    box-shadow: 0 0 0.5rem 0 #fff;
-                }
-            }
-
-            letter-spacing: 0.09259259259259259vh;
-            margin-bottom: 2.962962962962963vh;
-
-            font-family: Arial,
-            Helvetica,
-            sans-serif;
-            font-size: 1.9vh;
-            text-transform: uppercase;
-            color: rgba(0, 0, 0, 0.5);
-        }
-
-        .list {
-
-            .element {
-                width: 33.148148148148145vh;
-                margin-bottom: 2.0370370370370368vh;
-            }
-        }
-    }
-
-    .title {
-        position: relative;
-        color: white;
-
-        & span {
-            opacity: 0.9;
-            letter-spacing: 0.09259259259259259vh;
-            font-size: 1.5rem;
-            font-weight: 700;
-        }
-
-        & img {
-            margin-left: 2.314814814814815vh;
-            height: 1.3888888888888888vh;
-        }
-    }
-
-    .form {
-        align-items: center;
-        display: flex;
-        flex-direction: column;
-        justify-content: center;
-        margin-top: 1.3888888889vh;
-        position: relative;
-
-        .namedata {
-            align-items: center;
-            display: flex;
-            gap: 2vh;
-            justify-content: center
-        }
-
-        .gender {
-            position: relative;
-
-            align-items: center;
-            color: #fff;
-            display: flex;
-            flex-direction: row;
-            gap: 2vh;
-            height: 2.9194444444vh;
-            margin-bottom: 3vh;
-
-            .female,
-            .male {
-                align-items: center;
-                background-color: #ffffff1a;
-                border-radius: .5vh;
-                display: flex;
-                gap: .5vh;
-                height: 100%;
-                justify-content: center;
-                overflow: hidden;
-                transition: filter .1s linear;
-                width: 18.5185185185vh;
-
-                &:hover svg path,
-                &.active svg path {
-                    fill: #ffffff;
-                }
-
-            }
-
-            .female,
-            .male {
-
-                .active,
-                &:hover {
-                    filter: drop-shadow(0 -0.09259259259259259vh 0.09259259259259259vh #d731ff90);
-                }
-            }
-
-        }
-
-    }
-
-    .nameinput {
-        position: relative;
-
-
-        & input {
-            width: 18.51851851851852vh;
-            padding: 0.9259259259259258vh 3.2407407407407405vh 0.9259259259259258vh 0.9259259259259258vh;
-            margin-bottom: 0.9259259259259258vh;
-            font-family: Arial, Helvetica, sans-serif;
-            font-size: 1.2rem;
-            border: none;
-            outline: none;
-            background-color: rgba(255, 255, 255, 0.1);
-            border-radius: .5vh;
-            color: white;
-
-            &::placeholder {
-                color: white;
-            }
-        }
-
-        & img {
-            width: 1.3888888888888888vh;
-            height: 1.3888888888888888vh;
-            position: absolute;
-            top: 50%;
-            transform: translate(-150%, -50%);
-        }
-    }
-}
\ No newline at end of file
diff --git a/frontend/src/pages/creator/creator.module.scss b/frontend/src/pages/creator/creator.module.scss
deleted file mode 100644
index 26057ae4998ebc860cde4125d2bad78dfd9783e5..0000000000000000000000000000000000000000
--- a/frontend/src/pages/creator/creator.module.scss
+++ /dev/null
@@ -1,224 +0,0 @@
-.creator {
-	* {
-		outline: none;
-	}
-
-	width: 100vw;
-	height: 100vh;
-	font-family: Arial,
-	Helvetica,
-	sans-serif;
-	text-transform: uppercase;
-	color: black;
-	opacity: 1;
-	transition: opacity 0.2s;
-
-	.content {
-		width: 70%;
-		height: 100%;
-		background: linear-gradient(to right, #000000b5, transparent, rgba(125, 122, 130, 0) 90%);
-
-		.data {
-			padding: 3.5vh 0vh 0vh 8.351852vh
-		}
-	}
-
-	.title {
-		position: absolute;
-		display: flex;
-		flex-direction: row;
-		align-items: center;
-		color: white;
-		text-shadow: 0 0 1vh white;
-
-		font-size: 7.009259259259259vh;
-		opacity: 0.05;
-		top: 65%;
-		width: 4vh;
-		left: 5%;
-
-	}
-
-	.navigation {
-		position: absolute;
-		top: 3.5vh;
-		display: flex;
-		flex-direction: column;
-		align-items: center;
-
-		height: 100vh;
-		gap: 2vh;
-
-		width: 9vh;
-
-		&::after {
-			content: "";
-			position: absolute;
-			left: 8vh;
-			width: 0.2vh;
-			height: 100%;
-			background: radial-gradient(#00000085, transparent);
-		}
-
-		.element {
-			display: flex;
-			align-items: center;
-			justify-content: center;
-			width: 6rem;
-			height: 6rem;
-			padding: 1.5vh;
-			background: url("../../assets/images/creator/icons/hexagon.svg") no-repeat;
-			background-size: cover;
-
-			opacity: 0.5;
-			font-size: 1.4444444444444444vh;
-			transition: opacity 0.2s linear;
-
-			img {
-				width: 2.5vh;
-				height: 2vh;
-			}
-			&.active,
-			&:hover {
-				opacity: 0.9;
-			}
-		}
-
-		.slider {
-			position: absolute;
-			bottom: 0.6481481481481481vh;
-			left: 2.685185185185185vh;
-			height: 0.18518518518518517vh;
-			border-radius: 50%;
-			width: 8.333333333333332vh;
-			background: linear-gradient(to right, #aab4ee70, #c373f395, #aab4ee70);
-			transition: left 0.7s ease, width 0.7s ease;
-		}
-
-
-	}
-
-	.player_name {
-		position: absolute;
-		left: 11.11111111111111vh;
-		bottom: 15%;
-		font-size: 3.6111111111111107vh;
-		color: black;
-		display: flex;
-		align-items: center;
-		justify-content: center;
-		gap: 1vh;
-
-		flex-direction: row;
-		opacity: 0.5;
-
-
-
-
-		.create {
-			width: 15.148148148148145vh;
-			height: 3.7037037037037033vh;
-
-			display: flex;
-			align-items: center;
-			justify-content: center;
-
-			background: red;
-
-			overflow: hidden;
-			gap: .5vh;
-			font-size: 1.5648148148148149vh;
-			color: #fff;
-			letter-spacing: 0.18518518518518517vh;
-
-			transition: color 0.2s linear;
-
-			img {
-				width: 2vh;
-				height: 2vh;
-			}
-
-
-			&:hover {
-				color: #fff;
-
-				&::before {
-					left: 115%;
-				}
-			}
-
-
-			.random {
-				padding-top: 0.9259259259259259vh;
-				height: 3.0555555555555554vh;
-				display: flex;
-				flex-direction: row;
-				align-items: center;
-
-				& span {
-					display: flex;
-					align-items: center;
-					justify-content: center;
-					font-size: 1.2037037037037037vh;
-					height: 100%;
-					color: #fff;
-					opacity: 1;
-					margin-left: -3.2407407407407405vh;
-					transition: margin-left 0.2s ease, opacity 0.2s ease;
-				}
-
-				& svg {
-					margin-left: 3.7037037037037033vh;
-					pointer-events: auto;
-					width: 2.1666666666666665vh;
-					transition: filter 0.2s ease;
-
-					& path {
-						transition: fill 0.2s ease, opacity 0.2s ease;
-					}
-				}
-
-				&:hover,
-				&.active {
-					& span {
-						opacity: 1;
-						margin-left: 0.9259259259259258vh;
-						background: radial-gradient(closest-side at 50% 50%, #c373f325, #00000000);
-					}
-
-					& svg {
-						filter: drop-shadow(0 0 0.09259259259259259vh #c373f3);
-						opacity: 1;
-
-						& path {
-							opacity: 1;
-							fill: #fff;
-						}
-					}
-				}
-			}
-
-		}
-	}
-
-	.rotate {
-		position: absolute;
-		bottom: 4.62962962962963vh;
-		right: 2.7777777777777777vh;
-		display: flex;
-		align-items: center;
-
-		font-family: Arial, Helvetica, sans-serif;
-		color: #fff;
-		text-shadow: 0 0.18518518518518517vh 0.18518518518518517vh black;
-
-		.desc {
-			font-size: 1.5648148148148149vh;
-			margin-right: 0.9259259259259258vh;
-		}
-
-		.icon {
-			height: 3.009259259259259vh;
-		}
-	}
-}
\ No newline at end of file
diff --git a/frontend/src/pages/creator/utils/Randomizer.module.ts b/frontend/src/pages/creator/utils/Randomizer.module.ts
deleted file mode 100644
index 8aeda53e0ce7adce981224c106c17568bf057f58..0000000000000000000000000000000000000000
--- a/frontend/src/pages/creator/utils/Randomizer.module.ts
+++ /dev/null
@@ -1,41 +0,0 @@
-import { creatorStore } from "store/CharCreator.store";
-import EventManager from "utils/EventManager.util";
-
-export const setRandomOptions = (store: typeof creatorStore) => {
-    const getRandom = (min: number, max: number) => {
-        return Math.floor(Math.random() * (max - min)) + min;
-    };
-
-    const eyesRandom = () => {
-        let i = getRandom(0, 11);
-        if (i <= 7) return i;
-        else return 11;
-    };
-
-    store.data.parents.mother = getRandom(0, 21);
-    store.data.parents.father = getRandom(0, 23);
-
-    store.data.hair.head = getRandom(0, 22);
-    store.data.hair.eyebrows = getRandom(0, 33);
-
-    if (store.data.sex === 0) {
-        store.data.hair.chest = getRandom(0, 16);
-        store.data.hair.beard = getRandom(0, 28);
-        store.data.color.chest = getRandom(0, 18);
-        store.data.color.beard = getRandom(0, 18);
-    }
-
-    store.data.parents.leatherMix = getRandom(-100, 100);
-    store.data.parents.similarity = getRandom(-100, 100);
-
-    for (let i = 0; i < 20; i++) {
-        //@ts-ignore
-        store.data.face[i] = getRandom(-100, 100);
-    }
-
-    store.data.color.head = getRandom(0, store.data.sex === 0 ? 82 : 86);
-    store.data.color.eyebrows = getRandom(0, 18);
-    store.data.color.eyes = eyesRandom();
-
-    EventManager.emitClient("creator", "random", store.data);
-};
diff --git a/frontend/src/pages/creator/utils/Textchecker.ts b/frontend/src/pages/creator/utils/Textchecker.ts
deleted file mode 100644
index 1c84442a135c1b3ac17254711bcbc572aa6fc5e3..0000000000000000000000000000000000000000
--- a/frontend/src/pages/creator/utils/Textchecker.ts
+++ /dev/null
@@ -1,6 +0,0 @@
-export const badWords: string[] = ["gay", "gey", "nigger", "nigga", "niger", "negr", "niga", "naga", "negr", "nager"];
-
-export const badNames: string[][] = [
-    ["vladimir", "putin"],
-    ["donald", "trump"]
-];
diff --git a/frontend/src/pages/hud/Chat/Chat.tsx b/frontend/src/pages/hud/Chat/Chat.tsx
deleted file mode 100644
index b51dbf23d765774cfd3b8ee603b7967f0dac4295..0000000000000000000000000000000000000000
--- a/frontend/src/pages/hud/Chat/Chat.tsx
+++ /dev/null
@@ -1,93 +0,0 @@
-import { FC, useCallback, useEffect, useRef, useState } from "react";
-import { observer } from "mobx-react-lite";
-
-import EventManager from "utils/EventManager.util";
-import ChatInput from "./components/ChatInput";
-import { chatStore } from "store/Chat.store";
-
-import style from "./chat.module.scss";
-
-let chatHideTimeout: NodeJS.Timeout | null = null;
-let chatFadeInterval: NodeJS.Timeout | null = null;
-
-const Chat: FC<{ store: typeof chatStore; isVisible: boolean }> = ({ store, isVisible }) => {
-    const [chatOpacity, setChatOpacity] = useState(1.0);
-    const [chatVisibility, setchatVisibility] = useState(10000);
-    const chat = useRef<HTMLDivElement | null>(null);
-
-    useEffect(() => {
-        const newMessageHandler = (obj: string) => {
-            store.fetchNewMessage(obj);
-            setChatOpacity(1.0);
-            setTimeout(() => {
-                if (chat.current) chat.current.scrollTop = 1000000;
-            }, 50);
-        };
-
-        const keydownHandler = (e: KeyboardEvent) => {
-            if (e.keyCode === 32 && e.target === document.body) {
-                e.preventDefault();
-            }
-        };
-
-        EventManager.addHandler("chat", "newMessage", newMessageHandler);
-        window.addEventListener("keydown", keydownHandler);
-
-        return () => {
-            window.removeEventListener("keydown", keydownHandler);
-        };
-    }, [store]);
-
-    const chatFocusFunc = useCallback(() => {
-        setChatOpacity(1);
-        if (chatHideTimeout) {
-            clearTimeout(chatHideTimeout);
-            chatHideTimeout = null;
-            if (chatFadeInterval) clearInterval(chatFadeInterval);
-        }
-    }, []);
-
-    const chatBlur = useCallback(() => {
-        if (chatHideTimeout) {
-            clearTimeout(chatHideTimeout);
-            chatHideTimeout = null;
-            if (chatFadeInterval) clearInterval(chatFadeInterval);
-        }
-        chatHideTimeout = setTimeout(() => {
-            chatFadeInterval = setInterval(() => {
-                setChatOpacity((prevOpacity) => {
-                    const newOpacity = prevOpacity - 0.1;
-                    if (newOpacity > 0.6) {
-                        return newOpacity;
-                    } else {
-                        clearInterval(chatFadeInterval!);
-                        return 0.6;
-                    }
-                });
-            }, 20);
-        }, chatVisibility);
-    }, [chatVisibility]);
-
-    useEffect(() => {
-        return () => {
-            if (chatHideTimeout) clearTimeout(chatHideTimeout);
-            if (chatFadeInterval) clearInterval(chatFadeInterval);
-        };
-    }, []);
-    if (!store.isActive) return null;
-
-    return (
-        <div className={style.main} style={{ visibility: isVisible ? "visible" : "hidden" }}>
-            <div ref={chat} className={style.content} style={{ opacity: chatOpacity, backgroundColor: store.settings.background ? "#000000aa" : "transparent" }}>
-                {store.messages.map((el, key) => (
-                    <div className={style.text} key={key}>
-                        <span className={style.message} style={{ fontSize: `${store.settings.fontsize}vh` }} dangerouslySetInnerHTML={{ __html: el }} />
-                    </div>
-                ))}
-            </div>
-            <ChatInput store={store} chatFocusFunc={chatFocusFunc} chatBlur={chatBlur} chatRef={chat} setChatOpacity={setChatOpacity} />
-        </div>
-    );
-};
-
-export default observer(Chat);
diff --git a/frontend/src/pages/hud/Chat/chat.module.scss b/frontend/src/pages/hud/Chat/chat.module.scss
deleted file mode 100644
index 0dbef38cbb540423059a4e823566e455ac3701b6..0000000000000000000000000000000000000000
--- a/frontend/src/pages/hud/Chat/chat.module.scss
+++ /dev/null
@@ -1,65 +0,0 @@
-.main {
-    position: absolute;
-    top: 0;
-    left: 0;
-    z-index: 0;
-    width: 60vh;
-
-    .content {
-        height: 27.777777777777775vh;
-        padding-top: 1.18518518518516vh;
-        overflow: auto;
-
-        outline: none;
-
-        transition: all 0.6s;
-
-        &::-webkit-scrollbar {
-            display: none;
-        }
-    }
-
-    .text {
-        position: relative;
-        margin: 0 0 0vh 0.666667vh;
-
-        .timestamp {
-            margin: 0 .3vh 0 0;
-            width: 100%;
-            font-family: Arial, Helvetica, sans-serif;
-            color: #28272b;
-            font-size: 1.2vh;
-            line-height: 2.222222222222222vh;
-            word-wrap: break-word;
-            font-weight: bold;
-            border-radius: .5vh;
-            padding: .2vh;
-        }
-
-        .message {
-            width: 90%;
-            font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;
-            color: #fff;
-            font-size: 1.48888889vh;
-            line-height: 2.222222222222222vh;
-            word-wrap: break-word;
-            text-shadow: 0 0 0.1em black, 0 0 0.1em black, 0 0 0.1em black, 0 0 0.1em black;
-        }
-
-    }
-}
-
-@media (aspect-ratio: 577/540) {
-    .main {
-        transform: scale(0.7);
-        transform-origin: top left;
-    }
-}
-
-@media (aspect-ratio: 4/3),
-(aspect-ratio: 5/4) {
-    .main {
-        transform: scale(0.8);
-        transform-origin: top left;
-    }
-}
\ No newline at end of file
diff --git a/frontend/src/pages/hud/Chat/components/ChatInput.tsx b/frontend/src/pages/hud/Chat/components/ChatInput.tsx
deleted file mode 100644
index 8c7f3f8ba5d6568f8a69594aa8a13df7e09f946c..0000000000000000000000000000000000000000
--- a/frontend/src/pages/hud/Chat/components/ChatInput.tsx
+++ /dev/null
@@ -1,216 +0,0 @@
-import { FC, useRef, useEffect, useCallback, useState, MutableRefObject } from "react";
-import { observer } from "mobx-react-lite";
-import cn from "classnames";
-import EventManager from "utils/EventManager.util";
-import { chatStore } from "store/Chat.store";
-
-import enterIcon from "assets/images/hud/icons/enter.svg";
-import style from "./input.module.scss";
-
-interface ChatInputProps {
-    store: typeof chatStore;
-    chatFocusFunc: () => void;
-    chatBlur: () => void;
-    readonly chatRef: MutableRefObject<HTMLDivElement | null>;
-    setChatOpacity: (opacity: number) => void;
-}
-
-const ChatInput: FC<ChatInputProps> = ({ store, chatFocusFunc, chatBlur, chatRef, setChatOpacity }) => {
-    const [isFocused, setFocused] = useState(false);
-
-    const [selection, setSelection] = useState<{ start: number; end: number }>({ start: 0, end: 0 });
-
-    const [inputText, setInputText] = useState("");
-
-    const [suggestedCommand, setSuggestedCommand] = useState("");
-
-    const input = useRef<HTMLInputElement>(null);
-
-    useEffect(() => {
-        //@ts-ignore
-        window.chatAPI = {
-            clear: () => {
-                store.messages = [];
-            },
-
-            push: (text: string) => {
-                store.fetchNewMessage(text);
-                setChatOpacity(1.0);
-                setTimeout(() => {
-                    if (chatRef.current) chatRef.current.scrollTop = 1000000;
-                }, 50);
-            },
-
-            activate: (toggle: boolean) => {
-                store.setActive(toggle);
-            },
-
-            show: (toggle: boolean) => {
-                store.setActive(toggle);
-            }
-        };
-
-        //@ts-ignore
-        if (typeof mp !== "undefined") {
-            const api: Record<string, Function> = {
-                //@ts-ignore
-                "chat:push": window.chatAPI.push,
-                //@ts-ignore
-                "chat:clear": window.chatAPI.clear,
-                //@ts-ignore
-                "chat:activate": window.chatAPI.activate,
-                //@ts-ignore
-                "chat:show": window.chatAPI.show
-            };
-
-            for (const fn in api) {
-                //@ts-ignore
-                mp.events.add(fn, api[fn]);
-            }
-        }
-    }, [store]);
-
-    useEffect(() => {
-        //@ts-ignore
-        mp.invoke("setTypingInChatState", isFocused);
-    }, [isFocused]);
-
-    useEffect(() => {
-        EventManager.addHandler("chat", "setTextInput", (text: string) => setInputText(text));
-
-        EventManager.addHandler("chat", "toggle", (bool: true) => {
-            setFocused(bool);
-            bool ? input.current?.focus() : input.current?.blur();
-        });
-
-        EventManager.addHandler("chat", "sendMessage", () => {
-            EventManager.emitServer("chat", "sendMessage", String(inputText));
-            store.updateLastMessages(String(inputText));
-            setInputText("");
-        });
-    }, [inputText, store]);
-
-    useEffect(() => {
-        if (isFocused) {
-            input.current?.focus();
-        }
-    }, [isFocused]);
-
-    const sendMessage = useCallback(
-        (text: string) => {
-            input.current?.blur();
-
-            if (text.length === 0) {
-                setInputText("");
-                if (isFocused) EventManager.emitClient("chat", "close");
-                setFocused(false);
-                return;
-            }
-            EventManager.emitServer("chat", "sendMessage", text);
-            store.updateLastMessages(text);
-            setInputText("");
-            store.historyCounter = -1;
-            setFocused(false);
-        },
-        [isFocused, store]
-    );
-
-    useEffect(() => {
-        if (!selection || !input.current) return;
-        const { start, end } = selection;
-        input.current?.focus();
-        input.current.setSelectionRange(start, end);
-    }, [selection]);
-
-    const handleKeyPress = useCallback(
-        (event: KeyboardEvent) => {
-            if (!input.current || !isFocused) return;
-            const start = input.current.selectionStart ?? 0;
-            const end = input.current.selectionEnd ?? 0;
-
-            switch (event.key) {
-                case "Enter": {
-                    sendMessage(inputText);
-                    return;
-                }
-                case "ArrowUp": {
-                    let counter = store.historyCounter;
-                    counter++;
-                    if (counter === store.lastMessages.length) return;
-                    store.historyCounter = counter;
-                    setInputText(store.lastMessages[counter]);
-                    setTimeout(() => setSelection({ start: start + store.lastMessages[counter].length, end: end + store.lastMessages[counter].length }), 2);
-                    return;
-                }
-                case "ArrowDown": {
-                    let counter = store.historyCounter;
-                    counter--;
-                    if (counter < 0) return;
-                    store.historyCounter = counter;
-                    setInputText(store.lastMessages[counter]);
-                    setTimeout(() => setSelection({ start: start + store.lastMessages[counter].length, end: end + store.lastMessages[counter].length }), 2);
-                    return;
-                }
-                case "Tab": {
-                    if (suggestedCommand) {
-                        setInputText(suggestedCommand);
-                        setSelection({ start: suggestedCommand.length, end: suggestedCommand.length });
-                        event.preventDefault();
-                    }
-                    return;
-                }
-                default:
-                    return;
-            }
-        },
-        [store.lastMessages, store.historyCounter, inputText, isFocused, suggestedCommand]
-    );
-
-    const handleInputChange = useCallback((e: { target: { value: any } }) => {
-        const value = e.target.value;
-        setInputText(value);
-
-        if (value.startsWith("/") && value.length > 3) {
-            const match = store.commandList.find((cmd) => cmd.startsWith(value));
-            setSuggestedCommand(match || "");
-        } else {
-            setSuggestedCommand("");
-        }
-    }, []);
-
-    useEffect(() => {
-        document.addEventListener("keydown", handleKeyPress);
-        return () => document.removeEventListener("keydown", handleKeyPress);
-    }, [handleKeyPress]);
-
-    return (
-        <div className={cn(style.chatinput, !isFocused && style.chatinputDisabled)}>
-            <div className={style.box}>
-                <input
-                    className={style.input}
-                    type="text"
-                    placeholder={isFocused ? "Insert Message..." : ""}
-                    ref={input}
-                    value={inputText}
-                    onFocus={() => {
-                        setFocused(true);
-                        chatFocusFunc();
-                    }}
-                    onBlur={() => chatBlur()}
-                    onChange={handleInputChange}
-                    maxLength={200}
-                    tabIndex={-1}
-                />
-                {suggestedCommand && (
-                    <div className={style.suggestion}>
-                        <span className={style.suggestionHighlight}>{inputText}</span>
-                        <span className={style.suggestionRest}>{suggestedCommand.slice(inputText.length)}</span>
-                    </div>
-                )}
-                <img src={enterIcon} alt="enter" />
-            </div>
-        </div>
-    );
-};
-
-export default observer(ChatInput);
diff --git a/frontend/src/pages/hud/Chat/components/input.module.scss b/frontend/src/pages/hud/Chat/components/input.module.scss
deleted file mode 100644
index 11dbd8c438c9bfdca43153a84c2e60b1d7db7d53..0000000000000000000000000000000000000000
--- a/frontend/src/pages/hud/Chat/components/input.module.scss
+++ /dev/null
@@ -1,68 +0,0 @@
-.chatinput {
-    width: 90%;
-    margin: 0.462963vh 0 0 0.2vh;
-
-    font-family: Arial, Helvetica, sans-serif;
-
-    .box {
-        width: 100%;
-        padding: 0.6481481481481481vh 1.3888888888888888vh;
-
-        display: flex;
-        align-items: center;
-        justify-content: space-between;
-
-        background-color: rgba(0, 0, 0, .5);
-        opacity: 1;
-
-        transition: width .4s ease, opacity .2s;
-        border-radius: 0.46296296296296297vh;
-        filter: drop-shadow(0 0 1vh black);
-
-        img {
-            width: 2.5vh;
-            height: 2.5vh;
-            transition: opacity ease-in .5s;
-        }
-
-        .input {
-            width: 100%;
-            border: none;
-            outline: none;
-            background: none;
-
-
-            color: #fff;
-            font-family: Arial,
-                Helvetica,
-                sans-serif;
-            font-size: 1.574074074074074vh;
-
-            &::placeholder {
-                color: #FFFFFF90;
-            }
-        }
-    }
-}
-
-.chatinputDisabled {
-    .type {
-        visibility: hidden;
-        opacity: 0;
-        transition: transform .2s ease, opacity .2s ease, visibility 0s ease .2s;
-    }
-    .type {
-        transform: translateY(150%);
-    }
-    .box {
-        width: 0;
-        opacity: 0;
-        transition: width .4s ease .1s, opacity .2s .4s;
-
-        img {
-            opacity: 0;
-            width: 0;
-            transition: width .4s ease .1s, opacity .2s .4s;
-        }
-    }
-}
\ No newline at end of file
diff --git a/frontend/src/pages/hud/DeathScreen/DeathScreen.tsx b/frontend/src/pages/hud/DeathScreen/DeathScreen.tsx
deleted file mode 100644
index 898170fb66e7cece095671147d42c61f15253001..0000000000000000000000000000000000000000
--- a/frontend/src/pages/hud/DeathScreen/DeathScreen.tsx
+++ /dev/null
@@ -1,60 +0,0 @@
-import { FC, useEffect, useState } from "react";
-import { observer } from "mobx-react-lite";
-import { playerStore } from "store/Player.store";
-import EventManager from "utils/EventManager.util";
-
-import style from "./deathscreen.module.scss";
-
-const DeathScreen: FC<{ store: typeof playerStore }> = observer(({ store }) => {
-    const [isActive, setActive] = useState(false);
-
-    useEffect(() => {
-        if (!isActive) return;
-
-        if (store.data.deathTime === 0) {
-            EventManager.emitClient("player", "canAcceptDeath", true);
-            return;
-        }
-        const timer = setTimeout(() => {
-            store.setData("deathTime", store.data.deathTime - 1);
-        }, 1000);
-        return () => clearTimeout(timer);
-    }, [isActive, store.data.deathTime]);
-
-    useEffect(() => {
-        setActive(store.data.isDead);
-    }, [store.data.isDead]);
-
-    if (!isActive) return null;
-
-    return (
-        <div className={style.deathscreen}>
-            <div className={style.heartrate}>
-                <svg x="0px" y="0px" viewBox="0 0 298 53.9">
-                    <path
-                        className="st0"
-                        d="M297.5,41.2h-76.6c-0.5,0-0.9,0.4-1,0.8l-1.6,11.3l-3.1-32c0-0.5-0.4-0.9-0.9-0.9c-0.5,0-0.9,0.3-1,0.8
-                       l-5.3,25.5l-2.3-10.9c-0.1-0.4-0.4-0.7-0.9-0.8c-0.4,0-0.8,0.2-1,0.6l-2.3,4.8h-107c0,0,0,0,0,0H82c-1.6,0-2.2,1.1-2.2,1.6
-                       l-1.6,11.3l-3.1-52c0-0.5-0.4-0.9-0.9-0.9c-0.5,0-0.9,0.3-1,0.8l-9.3,45.5l-2.3-10.9c-0.1-0.4-0.4-0.7-0.9-0.8c-0.4,0-0.8,0.2-1,0.6
-                       l-2.3,4.8H0.5"
-                    />
-                </svg>
-                <div className={style.fadein}></div>
-                <div className={style.fadeout}></div>
-            </div>
-            <div className={style.header}>you are injured right now...</div>
-            <div className={style.desc}>You are injured. Please wait for doctors to arrive.</div>
-            <div className={style.bottomdata}>
-                {store.data.deathTime === 0 ? (
-                    "PRESS E TO ACCEPT DEATH"
-                ) : (
-                    <div className={style.timer}>
-                        <span className={style.text}>00</span>
-                        <span className={style.text}>{store.data.deathTime}</span>
-                    </div>
-                )}
-            </div>
-        </div>
-    );
-});
-export default DeathScreen;
diff --git a/frontend/src/pages/hud/DeathScreen/deathscreen.module.scss b/frontend/src/pages/hud/DeathScreen/deathscreen.module.scss
deleted file mode 100644
index 90d7f3d9bb7200c9412526ce01c3de157fe12f4b..0000000000000000000000000000000000000000
--- a/frontend/src/pages/hud/DeathScreen/deathscreen.module.scss
+++ /dev/null
@@ -1,114 +0,0 @@
-.deathscreen {
-    position: absolute;
-    left: 50%;
-    transform: translate(-50%, 0%);
-    bottom: 10vh;
-    filter: drop-shadow(0 0 5vh black);
-
-    width: 55.55555555555556vh;
-    height: 13.88888888888889vh;
-
-
-    display: flex;
-    flex-direction: column;
-    align-items: center;
-    justify-content: center;
-
-    transition: all .2s;
-
-
-    .heartrate {
-        position: fixed;
-        width: 80%;
-        height: 100%;
-        bottom: 15vh;
-
-        svg {
-            height: 100%;
-            width: 100%;
-        }
-
-        path {
-            stroke: red;
-            stroke-width: 0.18518518518518517vh;
-            fill: none;
-            stroke-dasharray: 150, 100;
-            stroke-dashoffset: 0;
-            animation: pulse 7s infinite linear;
-
-        }
-
-    }
-
-
-
-    .header {
-
-        font-family: 'Beast Duh';
-        font-size: 4vh;
-
-        color: red;
-        text-shadow: 0 0 10px black;
-        text-transform: uppercase;
-
-    }
-
-    .desc {
-        filter: drop-shadow(0 0 5vh black);
-        font-family: 'Beast Duh';
-        font-size: 1.5vh;
-        color: white;
-        text-shadow: 0 0 0.9259259259259259vh black;
-    }
-
-    .bottomdata {
-        filter: drop-shadow(0 0 5vh black);
-        width: 400px;
-        height: 100px;
-        font-family: 'Beast Duh';
-        font-size: 2vh;
-
-        display: flex;
-        align-items: center;
-        justify-content: center;
-        flex-direction: column;
-
-        color: white;
-        text-shadow: 0 0 0.9259259259259259vh black;
-        text-transform: uppercase;
-
-        background: linear-gradient(90deg, rgba(0, 0, 0, 0) 0%, rgb(105, 44, 44) 50%, rgba(0, 0, 0, 0) 100%);
-
-        .timer {
-
-            display: flex;
-            align-items: center;
-            gap: .5vh;
-            justify-content: center;
-
-
-
-            .text {
-                background: linear-gradient(to top, rgba(0, 0, 0, 0) 0%, rgb(0, 0, 0) 50%, rgba(0, 0, 0, 0) 100%);
-
-                padding: .5vh;
-                height: 5vh;
-                display: flex;
-                align-items: center;
-                justify-content: center;
-                font-size: 3vh;
-                color: red;
-            }
-        }
-    }
-}
-
-@keyframes pulse {
-    0% {
-        stroke-dashoffset: 0;
-    }
-
-    100% {
-        stroke-dashoffset: 1050;
-    }
-}
\ No newline at end of file
diff --git a/frontend/src/pages/hud/Hud.tsx b/frontend/src/pages/hud/Hud.tsx
deleted file mode 100644
index ee9ddc4d52907040f97c22ac6893cad56e74010a..0000000000000000000000000000000000000000
--- a/frontend/src/pages/hud/Hud.tsx
+++ /dev/null
@@ -1,44 +0,0 @@
-import { observer } from "mobx-react-lite";
-import { FC } from "react";
-
-/* Components */
-import InteractionMenu from "./InteractionMenu/InteractionMenu";
-import MainHud from "./MainHud/MainHud";
-import Inventory from "./Inventory/Inventory";
-import DeathScreen from "./DeathScreen/DeathScreen";
-import NativeMenu from "./Nativemenu/NativeMenu";
-import InteractButton from "./InteractButton/InteractButton";
-/* Stores */
-import { inventoryStore } from "store/Inventory.store";
-import { playerStore } from "store/Player.store";
-import { hudStore } from "store/Hud.store";
-import { createComponent } from "src/hoc/registerComponent";
-import { nativemenuStore } from "store/Nativemenu.store";
-/* Styling */
-import style from "./hud.module.scss";
-
-interface HUDProps {
-    inventoryStore: typeof inventoryStore;
-    store: typeof playerStore;
-    hudStore: typeof hudStore;
-    nativemenuStore: typeof nativemenuStore;
-}
-
-const HUD: FC<HUDProps> = observer(({ inventoryStore, store, hudStore, nativemenuStore }) => {
-    return (
-        <div className={style.main}>
-            <NativeMenu key={0} store={nativemenuStore} />
-            <DeathScreen store={store} />
-            <MainHud store={hudStore} playerStore={store} />
-            <InteractionMenu store={hudStore} />
-            <InteractButton store={hudStore} />
-            {inventoryStore.isVisible && <Inventory store={inventoryStore} playerStore={store} />}
-        </div>
-    );
-});
-
-export default createComponent({
-    props: { inventoryStore, store: playerStore, hudStore, nativemenuStore },
-    component: HUD,
-    pageName: "hud"
-});
diff --git a/frontend/src/pages/hud/InteractButton/InteractButton.tsx b/frontend/src/pages/hud/InteractButton/InteractButton.tsx
deleted file mode 100644
index adc27964c3b1c25e88af88601d8e105fb8260ba2..0000000000000000000000000000000000000000
--- a/frontend/src/pages/hud/InteractButton/InteractButton.tsx
+++ /dev/null
@@ -1,151 +0,0 @@
-import { FC, useState, useMemo, useRef, useEffect, useCallback, CSSProperties } from "react";
-import { observer } from "mobx-react-lite";
-import cn from "classnames";
-
-import EventManager from "../../../utils/EventManager.util";
-import { regExp } from "utils/Helpers.util";
-import { hudStore } from "store/Hud.store";
-
-import style from "./interactbutton.module.scss";
-
-const rarityColors: { [key: number]: string } = {
-    0: "#B7C2F8",
-    1: "#8A9EFF",
-    2: "#C970FF",
-    3: "#FF8888",
-    4: "#FFD139"
-};
-
-const InteractButton: FC<{ store: typeof hudStore }> = observer(({ store }) => {
-    const [input, setInput] = useState(""),
-        [timer, setTimer] = useState(false),
-        timeout = useRef<NodeJS.Timeout | null>(null),
-        animationRef = useRef<HTMLDivElement>(null);
-
-    const buttonImage = useMemo(() => {
-        const image = new URL(`../../../assets/images/hud/inventory/items/${store.interactButton?.image}.svg`, import.meta.url).href;
-        return image.includes("undefined") ? new URL("../../../assets/images/hud/icons/interact.svg", import.meta.url).href : image;
-    }, [store.interactButton?.image]);
-
-    useEffect(() => {
-        if (!store.interactButton) return;
-        const animationElement = animationRef.current;
-        if (animationElement) {
-            animationElement.classList.toggle(style.interaction_active, !!store.interactButton);
-        }
-        setTimer(store.interactButton.autoStart);
-    }, [store.interactButton, store.interactButton?.autoStart]);
-
-    const handleTimerControl = useCallback(
-        (action: "start" | "stop") => {
-            if (!store.interactButton || store.interactButton.autoStart) return;
-
-            const startAction = action === "start";
-            if (timer !== startAction) {
-                setTimer(startAction);
-                EventManager.emitServer("interactionButton", startAction ? "holdDownE" : "stopHoldingE");
-            }
-        },
-        [store.interactButton, store.interactButton?.autoStart, timer]
-    );
-
-    useEffect(() => {
-        if (!store.interactButton) return;
-        if (timer) {
-            timeout.current = setTimeout(() => {
-                if (!store.interactButton?.autoStart) {
-                    EventManager.emitServer("interactionButton", "progressCompleted");
-                }
-                store.setInteractButtonData(null);
-                setTimer(false);
-            }, store.interactButton.time * 1000);
-        } else if (timeout.current) {
-            clearTimeout(timeout.current);
-        }
-    }, [timer, store.interactButton?.time, store]);
-
-    useEffect(() => {
-        if (!store.interactButton) return;
-        if (parseInt(input) > store.interactButton.count) {
-            setInput(String(store.interactButton.count));
-        }
-    }, [input, store.interactButton?.count]);
-
-    const sendCount = useCallback(() => {
-        if (input) {
-            EventManager.emitServer("interactionButton", "interact", { type: store.interactButton?.image, count: input });
-            setInput("");
-        }
-    }, [input, store.interactButton?.image]);
-
-    useEffect(() => {
-        const handleKeyDown = (e: KeyboardEvent) => {
-            if (e.code === "Enter") sendCount();
-            if (e.code === "KeyE") handleTimerControl("start");
-        };
-
-        const handleKeyUp = (e: KeyboardEvent) => {
-            if (e.code === "KeyE") handleTimerControl("stop");
-        };
-
-        document.addEventListener("keydown", handleKeyDown);
-        document.addEventListener("keyup", handleKeyUp);
-
-        return () => {
-            document.removeEventListener("keydown", handleKeyDown);
-            document.removeEventListener("keyup", handleKeyUp);
-        };
-    }, [sendCount, handleTimerControl]);
-
-    if (!store.interactButton) return null;
-
-    return (
-        <div ref={animationRef} className={style.interactbutton} style={{ "--bg": rarityColors[store.interactButton.rarity] } as CSSProperties}>
-            {store.interactButton.count > 0 && (
-                <div className={style.input}>
-                    <label htmlFor="interactive" className={style.box}>
-                        <input type="text" placeholder="Amount" id="interactive" value={input} onChange={(e) => setInput(e.target.value.replace(regExp.number, ""))} />
-                        <div className={style.inputbutton} onClick={sendCount}></div>
-                    </label>
-                    <div
-                        className={style.button}
-                        onClick={() => {
-                            setInput(String(store.interactButton?.count));
-                            EventManager.emitServer("interactionButton", "interact", {
-                                type: store.interactButton?.image,
-                                count: store.interactButton?.count
-                            });
-                        }}
-                    >
-                        MAX
-                    </div>
-                </div>
-            )}
-            <div className={style.left} style={{ transform: timer && store.interactButton.count <= 0 && !store.interactButton.autoStart && `translate(7.314814814814815vh, 0vh)` } as CSSProperties}>
-                {!store.interactButton.autoStart && store.interactButton.count ? <div className={style.count}>x{store.interactButton.count}</div> : undefined}
-                <div className={cn(style.timer, { [style.active]: timer })} style={{ "--seconds": `${store.interactButton.time}s` } as CSSProperties}>
-                    <span className={style.timertop}></span>
-                    <span className={style.timerright}></span>
-                    <span className={style.timerbottom}></span>
-                    <span className={style.timerleft}></span>
-                </div>
-                <img
-                    src={buttonImage}
-                    alt="#"
-                    className={style.img}
-                    style={{ "--filter": rarityColors[store.interactButton.rarity] ? rarityColors[store.interactButton.rarity] : "#000" } as CSSProperties}
-                />
-            </div>
-            <div className={style.right} style={{ transform: timer && store.interactButton.count <= 0 && !store.interactButton.autoStart ? `translate(7.5vh, 0vh)` : undefined }}>
-                <div className={style.background} style={{ "--color": rarityColors[store.interactButton.rarity] } as CSSProperties}></div>
-                <div className={style.button}>{store.interactButton.button}</div>
-                <div className={style.container}>
-                    <div className={style.title}>{store.interactButton.header}</div>
-                    <div className={style.desc}>{store.interactButton.description}</div>
-                </div>
-            </div>
-        </div>
-    );
-});
-
-export default InteractButton;
diff --git a/frontend/src/pages/hud/InteractButton/interactbutton.module.scss b/frontend/src/pages/hud/InteractButton/interactbutton.module.scss
deleted file mode 100644
index 1daf98301b5f5b1e78c26c72d2af9d7fac1a4ccc..0000000000000000000000000000000000000000
--- a/frontend/src/pages/hud/InteractButton/interactbutton.module.scss
+++ /dev/null
@@ -1,355 +0,0 @@
-@import "../../../styles/vars.scss";
-
-.interactbutton {
-  position: absolute;
-  left: 50%;
-  bottom: 10%;
-  transform: translate(-50%, 0%);
-  display: flex;
-  align-items: center;
-  justify-content: flex-end;
-  filter: drop-shadow(0 0 1vh black);
-
-
-  .input {
-    width: 18.51851851851852vh;
-    height: 4.259259259259259vh;
-    display: flex;
-    align-items: center;
-    flex-shrink: 0;
-    background: $global-bg-transparent-reverted;
-    opacity: 0;
-    transition: all 0.35s ease-in-out;
-
-    .box {
-      margin-left: 0.37037037037037035vh;
-      padding-left: 1.111111111111111vh;
-      width: 14.444444444444443vh;
-      height: 3.333333333333333vh;
-      display: flex;
-      align-items: center;
-      background: rgba(0, 0, 0, 0.5);
-
-      input {
-        outline: none;
-        border: none;
-        background: none;
-        width: 10.648148148148147vh;
-        height: 3.333333333333333vh;
-        display: flex;
-        align-items: center;
-        font-family: Arial, Helvetica, sans-serif;
-        font-size: 1.2037037037037037vh;
-        color: #fff;
-        text-shadow: 0 0.09259259259259259vh 0.27777777777777773vh rgba(0, 0, 0, 0.75);
-
-        &::placeholder {
-          color: #fff;
-          opacity: 0.5;
-        }
-      }
-
-      .inputbutton {
-        margin-left: 0.4629629629629629vh;
-        width: 1.6666666666666665vh;
-        height: 1.759259259259259vh;
-        background: url(../../../assets/images/hud/inventory/icons/entericon.svg) no-repeat;
-        background-size: cover;
-      }
-    }
-
-    .button {
-      margin-left: 0.9259259259259258vh;
-
-      width: 3.333333333333333vh;
-      height: 3.333333333333333vh;
-
-      display: flex;
-      align-items: center;
-      justify-content: center;
-
-      background: $global-bg;
-
-      font-family: Arial, Helvetica, sans-serif;
-      font-size: 1.111111111111111vh;
-      color: #fff;
-      text-shadow: 0 0.09259259259259259vh 0.27777777777777773vh rgba(0, 0, 0, 0.75);
-
-      transition: all 0.35s;
-
-      &:hover {
-        color: #AAB6EF;
-        background: rgba(0, 0, 0, 0.5);
-      }
-    }
-  }
-
-  .left {
-    position: relative;
-    width: 7.037037037037036vh;
-    height: 7.037037037037036vh;
-
-    filter: drop-shadow(0 0 1.5vh black);
-    display: flex;
-    align-items: center;
-    justify-content: center;
-    background: $global-bg;
-
-    flex-shrink: 0;
-
-    opacity: 0;
-    transition: all 0.35s ease-in-out;
-
-
-
-    .timer {
-      position: absolute;
-
-      width: 100%;
-      height: 100%;
-
-      z-index: 2;
-
-      opacity: 0;
-      transition: all 0.6s;
-
-      --time: var(--seconds);
-
-
-      &.active {
-        opacity: 1;
-      }
-
-      & span {
-        position: absolute;
-        display: block;
-        background: #fff;
-      }
-
-      &.active span {
-        transition: all calc(var(--time) /4) linear;
-      }
-
-      .timertop,
-      .timerbottom {
-        width: 100%;
-        height: 0.2777777777777778vh;
-        transform: scaleX(0);
-      }
-
-      .timerleft,
-      .timerright {
-        width: 0.2777777777777778vh;
-        height: 100%;
-        transform: scaleY(0);
-      }
-
-      .timertop {
-        top: 0;
-        left: 0;
-        margin: var(--time);
-        transition-delay: 0s;
-        transform-origin: top left;
-      }
-
-      .timerright {
-        top: 0;
-        right: 0;
-        transition-delay: 0s;
-        transform-origin: top left;
-      }
-
-      .timerbottom {
-        bottom: 0;
-        right: 0;
-        transition-delay: 0s;
-        transform-origin: top right;
-      }
-
-      .timerleft {
-        top: 0;
-        left: 0;
-        transform-origin: bottom left;
-      }
-
-      &.active .timertop {
-        transition-delay: 0s;
-      }
-
-      &.active .timerright {
-        transition-delay: calc(var(--time)/4);
-      }
-
-      &.active .timerbottom {
-        transition-delay: calc(var(--time)/2);
-      }
-
-      &.active .timerleft {
-        transition-delay: calc(var(--time)*3/4);
-      }
-
-      &.active .timertop,
-      &.active .timerbottom {
-        transform: scaleX(1);
-      }
-
-      &.active .timerleft,
-      &.active .timerright {
-        transform: scaleY(1);
-      }
-    }
-    .img {
-      width: 4.037037vh;
-
-      background-position: center;
-      background-size: inherit;
-      background-repeat: no-repeat;
-
-      filter: drop-shadow(0vh 0.09259259259259259vh 0.27777777777777773vh var(--filter));
-    }
-
-    .count {
-      position: absolute;
-      bottom: -0.6481481481481481vh;
-      left: 50%;
-      transform: translate(-50%, 0%);
-
-      font-family: Arial, Helvetica, sans-serif;
-      font-size: 1.2037037037037037vh;
-      color: #fff;
-
-      text-shadow: 0 0.09259259259259259vh 0.27777777777777773vh rgba(0, 0, 0, 0.75);
-    }
-  }
-
-  .right {
-    position: relative;
-
-    height: 5.37037037037037vh;
-
-    display: flex;
-    align-items: center;
-    justify-content: flex-end;
-
-    overflow: hidden;
-    z-index: -1;
-
-    width: 80%;
-    opacity: 0;
-    transition: all 0.35s ease-in-out;
-
-    &::before {
-      content: '';
-      position: absolute;
-      top: 0;
-      left: 0;
-
-      width: 10.74074074074074vh;
-      height: 0.09259259259259259vh;
-
-      background: linear-gradient(90deg, #ff0000 0%, rgba(255, 255, 255, 0) 100%);
-    }
-
-    &::after {
-      content: '';
-      position: absolute;
-      bottom: 0;
-      left: 0;
-
-      width: 10.74074074074074vh;
-      height: 0.09259259259259259vh;
-
-      background: linear-gradient(90deg, #ff0000 0%, rgba(255, 255, 255, 0) 100%);
-    }
-
-    .background {
-      position: absolute;
-      top: 0.09259259259259259vh;
-      left: 0%;
-
-      width: 2.7777777777777777vh;
-      height: 5.37037037037037vh;
-
-      background: $global-bg-transparent;
-
-      opacity: 0;
-      transition: all 0.35s ease-out;
-      z-index: -1;
-    }
-
-    .button {
-      margin-left: 4.166666666666666vh;
-
-      width: 3.222222222222222vh;
-      height: 3.222222222222222vh;
-
-      border: 0.09259259259259259vh solid #f00;
-
-      display: flex;
-      align-items: center;
-      justify-content: center;
-      flex-shrink: 0;
-
-      font-family: 'Beast Duh', sans-serif;
-      font-size: 1.7037037037037vh;
-      color: #fff;
-      text-shadow: 0 0.09259259259259259vh 0.27777777777777773vh rgba(0, 0, 0, 0.75);
-
-      transition: all 0.35s ease-out;
-    }
-
-    .container {
-      margin-left: 2.962962962962963vh;
-
-      display: flex;
-      flex-direction: column;
-
-      text-shadow: 0 0.09259259259259259vh 0.27777777777777773vh rgba(0, 0, 0, 0.75);
-      color: #fff;
-
-      transition: all 0.35s ease-out;
-
-      .title {
-        font-family: 'Beast Duh', sans-serif;
-        font-size: 1.2037037037037037vh;
-        text-transform: uppercase;
-      }
-
-      .desc {
-        margin-top: 0.27777777777777773vh;
-
-        font-family: Arial, Helvetica, sans-serif;
-        font-size: 1.2037037037037037vh;
-      }
-    }
-  }
-}
-
-.interaction_active {
-    .left {
-      opacity: 1 !important;
-    }
-
-    .input {
-      opacity: 1 !important;
-      width: 20vh !important;
-    }
-
-    .right {
-      width: 100% !important;
-      opacity: 1 !important;
-
-      .background {
-        width: 100% !important;
-        opacity: 1 !important;
-      }
-
-      .button {
-        margin-left: 2.3148vh !important;
-      }
-
-      .container {
-        margin-left: 2.037vh !important;
-      }
-    }
-}
diff --git a/frontend/src/pages/hud/InteractionMenu/InteractionMenu.tsx b/frontend/src/pages/hud/InteractionMenu/InteractionMenu.tsx
deleted file mode 100644
index e096bcec526530755df07aed71f0a8a68a87638b..0000000000000000000000000000000000000000
--- a/frontend/src/pages/hud/InteractionMenu/InteractionMenu.tsx
+++ /dev/null
@@ -1,48 +0,0 @@
-import { FC } from "react";
-import { Menu, MenuItem, SubMenu } from "./components";
-import style from "./interactionmenu.module.scss";
-import { observer } from "mobx-react-lite";
-import EventManager from "utils/EventManager.util";
-import { hudStore } from "store/Hud.store";
-
-const InteractionMenu: FC<{ store: typeof hudStore }> = ({ store }) => {
-    const handleItemClick = (event: any, _index: number, data: number) => {
-        EventManager.emitClient("hud", "interactResult", data);
-        EventManager.emitServer("hud", "interactResult", data);
-        store.hideInteraction();
-    };
-
-    if (!store.interactionMenu.isActive || store.interactionMenu.items.length <= 1) return null;
-
-    return (
-        <div className={style.main}>
-            <Menu show={store.interactionMenu.isActive} outerRadius={150} innerRadius={80} centerX={200} centerY={200} theme={"dark"} animation={["fade", "scale", "rotate"]} animationTimeout={150}>
-                {store.interactionMenu.items
-                    .filter((x) => x.subItems === undefined)
-                    .map((x, e) => (
-                        <MenuItem display={"center"} onItemClick={handleItemClick} data={x.id}>
-                            {x.text}
-                        </MenuItem>
-                    ))}
-
-                {store.interactionMenu.items
-                    .filter((x) => x.subItems)
-                    .map((e, idx) => {
-                        return (
-                            <SubMenu key={idx} itemView={e.text} data={e.id} displayPosition="center">
-                                {e.subItems?.map((subitem, index) => {
-                                    return (
-                                        <MenuItem onItemClick={handleItemClick} data={e.id}>
-                                            {e.text}
-                                        </MenuItem>
-                                    );
-                                })}
-                            </SubMenu>
-                        );
-                    })}
-            </Menu>
-        </div>
-    );
-};
-
-export default observer(InteractionMenu);
diff --git a/frontend/src/pages/hud/InteractionMenu/components/Menu.scss b/frontend/src/pages/hud/InteractionMenu/components/Menu.scss
deleted file mode 100644
index c8ae94ea7c20603b1f228d5eb2d1afb18c81cba0..0000000000000000000000000000000000000000
--- a/frontend/src/pages/hud/InteractionMenu/components/Menu.scss
+++ /dev/null
@@ -1,163 +0,0 @@
-@import "../../../../styles/vars";
-
-:root {
-	--__reactRadialMenu__menu-bgColor: #fff;
-	--__reactRadialMenu__separator-color: red;
-	--__reactRadialMenu__item-color: #333;
-	--__reactRadialMenu__zIndex: 666;
-	--__reactRadialMenu__activeItem-color: #fff;
-	--__reactRadialMenu__activeItem-bgColor: #3498db;
-	--__reactRadialMenu__arrow-color: #6f6e77;
-	--__reactRadialMenu__activeArrow-color: #fff;
-	--__reactRadialMenu__animation-delay: 300ms;
-}
-
-
-/* --------------------------------- Themes --------------------------------- */
-
-.__rrm-dark {
-	--__reactRadialMenu__menu-bgColor: #28272be3;
-	--__reactRadialMenu__separator-color: red;
-	--__reactRadialMenu__item-color: #fff;
-}
-
-/* ------------------------------- Animations --------------------------------*/
-.__rrm-menu.__rrm-closing.__rrm-fade,
-.__rrm-menu.__rrm-opening.__rrm-fade {
-	opacity: 0;
-}
-
-.__rrm-menu.__rrm-opened.__rrm-fade {
-	opacity: 1;
-}
-
-.__rrm-menu.__rrm-closing.__rrm-scale,
-.__rrm-menu.__rrm-opening.__rrm-scale {
-	scale: 0;
-}
-
-.__rrm-menu.__rrm-opened.__rrm-scale {
-	scale: 1;
-}
-
-.__rrm-menu.__rrm-closing.__rrm-rotate,
-.__rrm-menu.__rrm-opening.__rrm-rotate {
-	rotate: -45deg;
-}
-
-.__rrm-menu.__rrm-opened.__rrm-rotate {
-	rotate: 0deg;
-}
-
-/* ---------------------------------- Menu ---------------------------------- */
-.__rrm-menu {
-	position: absolute;
-	font-family: "Beast Duh";
-	font-size: 1vh;
-
-	top: 50%;
-	left: 50%;
-	transform: translate(-50%, -50%);
-
-	z-index: var(--__reactRadialMenu__zIndex);
-	transition: all var(--__reactRadialMenu__animation-delay) ease;
-
-
-}
-
-.__rrm-menu g {
-	cursor: pointer;
-}
-
-/* ---------------------------------- Base ---------------------------------- */
-.__rrm-base {
-	transition: all var(--__reactRadialMenu__animation-delay) ease;
-	fill: var(--__reactRadialMenu__menu-bgColor);
-}
-
-.__rrm-base.__rrm-active {
-	filter: blur(.2vh);
-	stroke: rgba(0, 0, 0, 0.24);
-}
-
-/* --------------------------------- Content -------------------------------- */
-.__rrm-content {
-
-	display: flex;
-	align-items: center;
-	justify-content: center;
-	text-align: center;
-	flex-direction: column;
-
-	width: 100%;
-	height: 100%;
-
-
-	pointer-events: none;
-	color: white;
-	overflow: hidden;
-
-
-	font-size: 1.5vh;
-	font-family: 'Beast Duh';
-}
-
-.__rrm-content.__rrm-active {
-	color: var(--__reactRadialMenu__activeItem-color);
-}
-
-/* ---------------------------------- Arrow --------------------------------- */
-.__rrm-arrow {
-	stroke: var(--__reactRadialMenu__arrow-color);
-	fill: none;
-	stroke-linecap: round;
-	stroke-linejoin: round;
-	stroke-width: 0.18518518518518517vh;
-}
-
-.__rrm-arrow.__rrm-active {
-	stroke: var(--__reactRadialMenu__activeArrow-color);
-}
-
-/* --------------------------------- Return --------------------------------- */
-.__rrm-return {
-	stroke: var(--__reactRadialMenu__arrow-color);
-	fill: none;
-	stroke-linecap: round;
-	stroke-linejoin: round;
-	stroke-width: 0.37037037037037035vh;
-}
-
-.__rrm-return.__rrm-active {
-	stroke: var(--__reactRadialMenu__activeArrow-color);
-}
-
-/* --------------------------------- No Bg --------------------------------- */
-.__rrm-no-bg>g>foreignObject {
-	border: 0.09259259259259259vh solid var(--__reactRadialMenu__separator-color);
-	border-radius: 50%;
-	background-color: var(--__reactRadialMenu__menu-bgColor);
-}
-
-.__rrm-no-bg>g>foreignObject:has(.__rrm-active) {
-	background-color: var(--__reactRadialMenu__activeItem-bgColor);
-}
-
-.__rrm-no-bg .__rrm-arrow {
-	stroke: var(--__reactRadialMenu__arrow-color);
-	fill: none;
-	stroke-linecap: round;
-	stroke-linejoin: round;
-	stroke-width: 0.18518518518518517vh;
-}
-
-.__rrm-no-bg .__rrm-arrow.__rrm-active {
-	stroke: var(--__reactRadialMenu__arrow-color);
-}
-
-.__rrm-exit {
-	fill: grey;
-}
-.__rrm-exitactive {
-	fill: red;
-}
\ No newline at end of file
diff --git a/frontend/src/pages/hud/InteractionMenu/components/Menu.tsx b/frontend/src/pages/hud/InteractionMenu/components/Menu.tsx
deleted file mode 100644
index 030222a1e0fc5bd567eb21cfe2052c7d68649c99..0000000000000000000000000000000000000000
--- a/frontend/src/pages/hud/InteractionMenu/components/Menu.tsx
+++ /dev/null
@@ -1,146 +0,0 @@
-import clsx from "clsx";
-import React from "react";
-import { MenuContext } from "./MenuContext";
-import { MenuContextData, MenuProps } from "./types";
-import { cx } from "./util";
-
-import "./Menu.scss";
-import EventManager from "utils/EventManager.util";
-import { hudStore } from "store/Hud.store";
-
-export const MAIN_MENU_ID = "0";
-
-const initialData: MenuContextData = {
-    activeMenuId: MAIN_MENU_ID,
-    deltaRadius: 0,
-    innerRadius: 0,
-    menuHeight: 0,
-    menuWidth: 0,
-    middleRadius: 0,
-    outerRadius: 0,
-    drawBackground: true
-};
-
-const Menu = ({ centerX, centerY, innerRadius, outerRadius, animationTimeout, show, animateSubMenuChange, animation, theme, drawBackground, ...props }: MenuProps) => {
-    const [data, setData] = React.useState<MenuContextData>(initialData);
-    const [active, setActive] = React.useState(false);
-    if (innerRadius >= outerRadius) {
-        throw new Error("RadialMenu's innerRadius must be less than outerRadius");
-    }
-    const numOfChildren = React.Children.count(props.children);
-    if (numOfChildren < 2) {
-        throw new Error("RadialMenu must have at least 2 children");
-    }
-
-    const angleStep = (2 * Math.PI) / numOfChildren;
-    const middleRadius = (innerRadius + outerRadius) / 2;
-    const deltaRadius = outerRadius - innerRadius;
-    const menuWidth = outerRadius * 2;
-    const menuHeight = menuWidth;
-
-    animationTimeout = React.useMemo(() => animationTimeout || 0, [animationTimeout]);
-    const myMenuId = MAIN_MENU_ID;
-
-    React.useEffect(() => {
-        setData((prev) => ({
-            innerRadius,
-            outerRadius,
-            middleRadius,
-            deltaRadius,
-            menuWidth,
-            menuHeight,
-            activeMenuId: show ? myMenuId : prev.activeMenuId,
-            drawBackground: drawBackground ?? true
-        }));
-    }, [innerRadius, outerRadius, show, drawBackground]);
-
-    const [transition, setTransition] = React.useState<"closed" | "closing" | "opened" | "opening">("closed");
-    const handleTransition = React.useCallback(() => {
-        document.documentElement.style.setProperty("--__reactRadialMenu__animation-delay", `${animationTimeout}ms`);
-        if (show) {
-            setTransition("opening");
-            setTimeout(() => setTransition("opened"), animationTimeout);
-        } else {
-            setTransition("closing");
-            setTimeout(() => setTransition("closed"), animationTimeout);
-        }
-    }, [show, animationTimeout]);
-    const changeMenu = React.useCallback(
-        (menuId: string) => {
-            if (animateSubMenuChange) {
-                handleTransition();
-                setTimeout(() => setData((prev) => ({ ...prev, activeMenuId: menuId })), animationTimeout);
-            } else {
-                setData((prev) => ({ ...prev, activeMenuId: menuId }));
-            }
-        },
-        [handleTransition, animateSubMenuChange]
-    );
-    React.useEffect(() => {
-        handleTransition();
-    }, [show, handleTransition]);
-
-    if (transition === "closed") {
-        return <></>;
-    }
-    return (
-        <MenuContext.Provider value={{ data, changeMenu }}>
-            <svg
-                {...props}
-                width={"50vh"}
-                height={"50vh"}
-                stroke="#28272b"
-                strokeWidth={"2"}
-                viewBox={`${-35} ${-35} ${menuWidth + 35 * 2} ${menuHeight + 35 * 2}`}
-                className={clsx(props.className, cx("menu", transition, animation, theme, !data.drawBackground && "no-bg"))}
-            >
-                <circle key={1} cx={centerX - 50} cy={centerY - 50} r={menuWidth / 2 + 10} fill="none" stroke="red" />
-
-                {data.activeMenuId == "0" && (
-                    <g
-                        onMouseEnter={(e) => {
-                            setActive(true);
-                        }}
-                        onMouseLeave={(e) => {
-                            setActive(false);
-                        }}
-                        onClick={() => {
-                            EventManager.emitClient("cef", "close");
-                            hudStore.hideInteraction();
-                        }}
-                    >
-                        <circle key={2} cx="150" cy="150" r="50" className="__rrm-base"></circle>
-
-                        <foreignObject x="120" y="120" width="60" height="60">
-                            <div className="__rrm-content">
-                                <svg width="30" height="30" viewBox="0 0 60 60" fill="none">
-                                    <g clipPath="url(#clip0_104_36)">
-                                        <path
-                                            className={cx("exit", active && "exitactive")}
-                                            d="M58.8437 9.90253C60.6093 8.30878 60.3281 5.9416 58.2031 4.61738C56.0781 3.29316 52.9218 3.5041 51.1562 5.09785L29.9999 24.1408L8.84368 5.09785C7.07805 3.5041 3.9218 3.29316 1.7968 4.61738C-0.328196 5.9416 -0.609446 8.30878 1.15618 9.90253L23.4843 30.0002L1.15618 50.0978C-0.609446 51.6916 -0.328196 54.0588 1.7968 55.383C3.9218 56.7072 7.07805 56.4963 8.84368 54.9025L29.9999 35.8596L51.1562 54.9025C52.9218 56.4963 56.0781 56.7072 58.2031 55.383C60.3281 54.0588 60.6093 51.6916 58.8437 50.0978L36.5156 30.0002L58.8437 9.90253Z"
-                                            fill="red"
-                                        />
-                                    </g>
-                                </svg>
-                            </div>
-                        </foreignObject>
-                    </g>
-                )}
-
-                {React.Children.map(props.children, (child, index) => {
-                    if (React.isValidElement(child)) {
-                        let prop = {
-                            __index: index,
-                            __angleStep: angleStep,
-                            __parentMenuId: myMenuId
-                        };
-                        return React.cloneElement(child, prop);
-                    }
-                    return child;
-                })}
-            </svg>
-        </MenuContext.Provider>
-    );
-};
-
-export default Menu;
diff --git a/frontend/src/pages/hud/InteractionMenu/components/MenuContext.tsx b/frontend/src/pages/hud/InteractionMenu/components/MenuContext.tsx
deleted file mode 100644
index fd2a1f1257fed026028b492329c23f731666ec0d..0000000000000000000000000000000000000000
--- a/frontend/src/pages/hud/InteractionMenu/components/MenuContext.tsx
+++ /dev/null
@@ -1,9 +0,0 @@
-import React from "react";
-import { MenuContextData } from "./types";
-
-export interface MenuContextType {
-    data: MenuContextData;
-    changeMenu: (menuId: string) => void;
-}
-
-export const MenuContext = React.createContext<MenuContextType | null>(null);
diff --git a/frontend/src/pages/hud/InteractionMenu/components/MenuDisplay.tsx b/frontend/src/pages/hud/InteractionMenu/components/MenuDisplay.tsx
deleted file mode 100644
index f6c7243c3344389a001b4fddf90ffe169fbbe166..0000000000000000000000000000000000000000
--- a/frontend/src/pages/hud/InteractionMenu/components/MenuDisplay.tsx
+++ /dev/null
@@ -1,83 +0,0 @@
-import React from "react";
-import { MenuContext, MenuContextType } from "./MenuContext";
-import { MenuDisplayProps } from "./types";
-import { calculatePositions, cx } from "./util";
-
-const MenuDisplay = ({ position, onClick, ...props }: MenuDisplayProps) => {
-    const { data } = React.useContext(MenuContext) as MenuContextType;
-    const { innerRadius, outerRadius, activeMenuId } = data;
-    const [active, setActive] = React.useState(false);
-
-    let { startAngle, endAngle, objectX, objectY, objectWidth, objectHeight } = React.useMemo(() => calculatePositions(position, innerRadius, outerRadius), [position, innerRadius, outerRadius]);
-
-    if (props.__parentMenuId !== activeMenuId) {
-        return <></>;
-    }
-    return data.drawBackground ? (
-        <g
-            {...props}
-            onMouseEnter={() => setActive(true)}
-            onMouseLeave={() => setActive(false)}
-            onClick={(event) => {
-                event.preventDefault();
-                event.stopPropagation();
-                onClick(event, position);
-            }}
-        >
-            {position !== "center" ? (
-                <path
-                    d={`M ${Math.cos(startAngle) * innerRadius + outerRadius}
-                ${Math.sin(startAngle) * innerRadius + outerRadius}
-              A ${innerRadius} ${innerRadius} 0 0 1 
-                ${Math.cos(endAngle) * innerRadius + outerRadius}
-                ${Math.sin(endAngle) * innerRadius + outerRadius}
-              Z`}
-                    className={cx("base", { active })}
-                />
-            ) : (
-                <circle cx={outerRadius} cy={outerRadius} r={70} className={cx("base", { active })} />
-            )}
-            <foreignObject key="dude" x={120} y={120} width={60} height={60}>
-                <div className={cx("content", { active })}>
-                    {props.children ? (
-                        props.children
-                    ) : (
-                        <svg className={cx("return", { active })} width={`${objectWidth * 0.5}px`} height={`${objectHeight * 0.5}px`} viewBox="0 0 48 48">
-                            <path d="M12.9998 8L6 14L12.9998 21" />
-                            <path d="M6 14H28.9938C35.8768 14 41.7221 19.6204 41.9904 26.5C42.2739 33.7696 36.2671 40 28.9938 40H11.9984" />
-                        </svg>
-                    )}
-                </div>
-            </foreignObject>
-        </g>
-    ) : (
-        <g {...props}>
-            <foreignObject
-                x={objectX}
-                y={objectY}
-                width={objectWidth}
-                height={objectHeight}
-                onMouseEnter={() => setActive(true)}
-                onMouseLeave={() => setActive(false)}
-                onClick={(event) => {
-                    event.preventDefault();
-                    event.stopPropagation();
-                    onClick(event, position);
-                }}
-            >
-                <div className={cx("content", { active })}>
-                    {props.children ? (
-                        props.children
-                    ) : (
-                        <svg className={cx("return", { active })} width={`${objectWidth * 0.5}px`} height={`${objectHeight * 0.5}px`} viewBox="0 0 48 48">
-                            <path d="M12.9998 8L6 14L12.9998 21" />
-                            <path d="M6 14H28.9938C35.8768 14 41.7221 19.6204 41.9904 26.5C42.2739 33.7696 36.2671 40 28.9938 40H11.9984" />
-                        </svg>
-                    )}
-                </div>
-            </foreignObject>
-        </g>
-    );
-};
-
-export default MenuDisplay;
diff --git a/frontend/src/pages/hud/InteractionMenu/components/MenuItem.tsx b/frontend/src/pages/hud/InteractionMenu/components/MenuItem.tsx
deleted file mode 100644
index 174f599536b91898370ae9b114e6121db0fcfe0d..0000000000000000000000000000000000000000
--- a/frontend/src/pages/hud/InteractionMenu/components/MenuItem.tsx
+++ /dev/null
@@ -1,85 +0,0 @@
-import React from "react";
-import { MenuContext, MenuContextType } from "./MenuContext";
-import { MenuItemProps } from "./types";
-import { cx, getObjectDimensions, getRingSectionPath } from "./util";
-import classNames from "classnames";
-
-const MenuItem = ({ __angleStep, __index, __parentMenuId, data: propsData, onItemClick, ...props }: MenuItemProps) => {
-    const { data } = React.useContext(MenuContext) as MenuContextType;
-    const { innerRadius, outerRadius, middleRadius, deltaRadius, activeMenuId } = data;
-    const [active, setActive] = React.useState(false);
-    const angleStep = __angleStep as number;
-    const index = __index as number;
-    const parentMenuId = __parentMenuId as string;
-
-    const gapAngle = 0.02; // Adjust this value for the desired gap size
-
-    const { objectX, objectY, objectWidth, objectHeight } = React.useMemo(
-        () => getObjectDimensions(deltaRadius, angleStep, middleRadius, index, outerRadius),
-        [deltaRadius, angleStep, middleRadius, index, outerRadius]
-    );
-
-    if (parentMenuId !== activeMenuId) {
-        return <></>;
-    }
-
-    return data.drawBackground ? (
-        <g
-            {...props}
-            onMouseEnter={(e) => {
-                props.onMouseEnter?.(e);
-                setActive(true);
-            }}
-            onMouseLeave={(e) => {
-                props.onMouseLeave?.(e);
-                setActive(false);
-            }}
-            onClick={(event) => {
-                event.preventDefault();
-                event.stopPropagation();
-                onItemClick?.(event, index, propsData);
-            }}
-        >
-            <defs>
-                <linearGradient id="gradientActive" x1="0%" y1="0%" x2="100%" y2="0%">
-                    <stop offset="10%" style={{ stopColor: "#28272b", stopOpacity: 0.9 }} />
-                    <stop offset="100%" style={{ stopColor: "red", stopOpacity: 1 }} />
-                </linearGradient>
-            </defs>
-            <path
-                d={getRingSectionPath(index * angleStep, (index + 1) * angleStep, innerRadius, outerRadius, gapAngle)}
-                className={cx("base", { active })}
-                style={active ? { fill: "url(#gradientActive)" } : {}}
-            />
-            <foreignObject x={objectX} y={objectY} width={objectWidth} height={objectHeight} style={{ fontSize: "1.5vh" }}>
-                <div className={classNames("__rrm-content", active ? "__rrm-active" : undefined)}>{props.children}</div>
-            </foreignObject>
-        </g>
-    ) : (
-        <g {...props}>
-            <foreignObject
-                x={objectX}
-                y={objectY}
-                width={objectWidth}
-                height={objectHeight}
-                onMouseEnter={(e) => {
-                    props.onMouseEnter?.(e);
-                    setActive(true);
-                }}
-                onMouseLeave={(e) => {
-                    props.onMouseLeave?.(e);
-                    setActive(false);
-                }}
-                onClick={(event) => {
-                    event.preventDefault();
-                    event.stopPropagation();
-                    onItemClick?.(event, index, propsData);
-                }}
-            >
-                <div className={cx("content", { active })}>{props.children}</div>
-            </foreignObject>
-        </g>
-    );
-};
-
-export default MenuItem;
diff --git a/frontend/src/pages/hud/InteractionMenu/components/SubMenu/SubMenu.tsx b/frontend/src/pages/hud/InteractionMenu/components/SubMenu/SubMenu.tsx
deleted file mode 100644
index 18949e3235d6075ffbece67bdc5759b008c0cdd9..0000000000000000000000000000000000000000
--- a/frontend/src/pages/hud/InteractionMenu/components/SubMenu/SubMenu.tsx
+++ /dev/null
@@ -1,21 +0,0 @@
-import React from "react";
-import { MenuContext, MenuContextType } from "../MenuContext";
-import { SubMenuProps } from "../types";
-import { SubMenuClosed } from "./SubMenuClosed";
-import { SubMenuOpened } from "./SubMenuOpened";
-
-const SubMenu = (props: SubMenuProps) => {
-    const { data } = React.useContext(MenuContext) as MenuContextType;
-    const { activeMenuId } = data;
-    const myMenuId = `${props.__parentMenuId}-${props.__index}`;
-
-    // separate props for SubMenuClosed and SubMenuOpened
-    const { __parentMenuId, displayPosition, children, displayView, onDisplayClick, ...rest } = props;
-
-    if (activeMenuId === props.__parentMenuId) {
-        return <SubMenuClosed {...rest} __myMenuId={myMenuId} />;
-    }
-    return <SubMenuOpened __myMenuId={myMenuId} __parentMenuId={__parentMenuId} displayPosition={displayPosition} children={children} displayView={displayView} onDisplayClick={onDisplayClick} />;
-};
-
-export default SubMenu;
diff --git a/frontend/src/pages/hud/InteractionMenu/components/SubMenu/SubMenuClosed.tsx b/frontend/src/pages/hud/InteractionMenu/components/SubMenu/SubMenuClosed.tsx
deleted file mode 100644
index e6420627a391562e913dc6fed47fed78e6bbfe7f..0000000000000000000000000000000000000000
--- a/frontend/src/pages/hud/InteractionMenu/components/SubMenu/SubMenuClosed.tsx
+++ /dev/null
@@ -1,70 +0,0 @@
-import React from "react";
-import { MenuContext, MenuContextType } from "../MenuContext";
-import { SubMenuClosedProps } from "../types";
-import { cx, getArrowPoints, getObjectDimensions, getRingSectionPath } from "../util";
-
-export const SubMenuClosed = ({ __myMenuId, __angleStep, __index, itemView, data: propsData, onItemClick, ...props }: SubMenuClosedProps) => {
-    const { data, changeMenu } = React.useContext(MenuContext) as MenuContextType;
-    const { innerRadius, outerRadius, middleRadius, deltaRadius } = data;
-    const [active, setActive] = React.useState(false);
-    const angleStep = __angleStep as number;
-    const index = __index as number;
-    const myMenuId = __myMenuId as string;
-
-    const { objectX, objectY, objectWidth, objectHeight } = React.useMemo(
-        () => getObjectDimensions(deltaRadius, angleStep, middleRadius, index, outerRadius),
-        [deltaRadius, angleStep, middleRadius, index, outerRadius]
-    );
-
-    return data.drawBackground ? (
-        <g
-            {...props}
-            onMouseEnter={(e) => {
-                props.onMouseEnter?.(e);
-                setActive(true);
-            }}
-            onMouseLeave={(e) => {
-                props.onMouseLeave?.(e);
-                setActive(false);
-            }}
-            onClick={(event) => {
-                event.preventDefault();
-                event.stopPropagation();
-                onItemClick?.(event, index, propsData);
-                changeMenu(myMenuId);
-            }}
-        >
-            <path d={getRingSectionPath(index * angleStep, (index + 1) * angleStep, innerRadius, outerRadius)} className={cx("base", { active })} />
-            <foreignObject x={objectX} y={objectY} width={objectWidth} height={objectHeight}>
-                <div className={cx("content", { active })}>{itemView}</div>
-            </foreignObject>
-            <polyline points={getArrowPoints(index * angleStep, (index + 1) * angleStep, outerRadius)} className={cx("arrow", { active })} />
-        </g>
-    ) : (
-        <g {...props}>
-            <foreignObject
-                onMouseEnter={(e) => {
-                    props.onMouseEnter?.(e);
-                    setActive(true);
-                }}
-                onMouseLeave={(e) => {
-                    props.onMouseLeave?.(e);
-                    setActive(false);
-                }}
-                onClick={(event) => {
-                    event.preventDefault();
-                    event.stopPropagation();
-                    onItemClick?.(event, index, propsData);
-                    changeMenu(myMenuId);
-                }}
-                x={objectX}
-                y={objectY}
-                width={objectWidth}
-                height={objectHeight}
-            >
-                <div className={cx("content", { active })}>{itemView}</div>
-            </foreignObject>
-            <polyline points={getArrowPoints(index * angleStep, (index + 1) * angleStep, outerRadius)} className={cx("arrow", { active })} />
-        </g>
-    );
-};
diff --git a/frontend/src/pages/hud/InteractionMenu/components/SubMenu/SubMenuOpened.tsx b/frontend/src/pages/hud/InteractionMenu/components/SubMenu/SubMenuOpened.tsx
deleted file mode 100644
index e8fae9e7f1a726f203284b0646f0266bdc6bb46b..0000000000000000000000000000000000000000
--- a/frontend/src/pages/hud/InteractionMenu/components/SubMenu/SubMenuOpened.tsx
+++ /dev/null
@@ -1,41 +0,0 @@
-import React from "react";
-import { MenuContext, MenuContextType } from "../MenuContext";
-import MenuDisplay from "../MenuDisplay";
-import { SubMenuOpenedProps } from "../types";
-
-export const SubMenuOpened = ({ __myMenuId, __parentMenuId, displayPosition, children, displayView, onDisplayClick }: SubMenuOpenedProps) => {
-    const { changeMenu } = React.useContext(MenuContext) as MenuContextType;
-    const myMenuId = __myMenuId as string;
-    const parentMenuId = __parentMenuId as string;
-
-    const numOfChildren = React.Children.count(children);
-    if (numOfChildren < 2) {
-        throw new Error("RadialMenu must have at least 2 children");
-    }
-    const angleStep = (2 * Math.PI) / numOfChildren;
-    return (
-        <>
-            {React.Children.map(children, (child, index) => {
-                if (React.isValidElement(child)) {
-                    let prop = {
-                        __index: index,
-                        __angleStep: angleStep,
-                        __parentMenuId: myMenuId
-                    };
-                    return React.cloneElement(child, prop);
-                }
-                return child;
-            })}
-            <MenuDisplay
-                __parentMenuId={myMenuId}
-                position={displayPosition}
-                onClick={(event, position) => {
-                    onDisplayClick?.(event, position);
-                    changeMenu(parentMenuId);
-                }}
-            >
-                {displayView}
-            </MenuDisplay>
-        </>
-    );
-};
diff --git a/frontend/src/pages/hud/InteractionMenu/components/SubMenu/index.ts b/frontend/src/pages/hud/InteractionMenu/components/SubMenu/index.ts
deleted file mode 100644
index ff4516813177918244132b9d74df4eefb4ceacc4..0000000000000000000000000000000000000000
--- a/frontend/src/pages/hud/InteractionMenu/components/SubMenu/index.ts
+++ /dev/null
@@ -1 +0,0 @@
-export { default } from "./SubMenu";
diff --git a/frontend/src/pages/hud/InteractionMenu/components/index.ts b/frontend/src/pages/hud/InteractionMenu/components/index.ts
deleted file mode 100644
index 519981496550385fcf48680c8a76254afc2dd4aa..0000000000000000000000000000000000000000
--- a/frontend/src/pages/hud/InteractionMenu/components/index.ts
+++ /dev/null
@@ -1,3 +0,0 @@
-export { default as Menu } from "./Menu";
-export { default as MenuItem } from "./MenuItem";
-export { default as SubMenu } from "./SubMenu";
diff --git a/frontend/src/pages/hud/InteractionMenu/components/types.ts b/frontend/src/pages/hud/InteractionMenu/components/types.ts
deleted file mode 100644
index 841038e45cac5e72e89b63ebcc9c0f31fe38a2bc..0000000000000000000000000000000000000000
--- a/frontend/src/pages/hud/InteractionMenu/components/types.ts
+++ /dev/null
@@ -1,60 +0,0 @@
-export type DisplayPosition = "top" | "right" | "bottom" | "left" | "center";
-
-export interface MenuContextData {
-    innerRadius: number;
-    outerRadius: number;
-    middleRadius: number;
-    deltaRadius: number;
-    menuWidth: number;
-    menuHeight: number;
-    activeMenuId: string;
-    drawBackground: boolean;
-}
-
-export type AnimationType = "fade" | "rotate" | "scale";
-
-export interface MenuProps extends React.SVGProps<SVGSVGElement> {
-    innerRadius: number;
-    outerRadius: number;
-    centerX: number;
-    centerY: number;
-    children: React.ReactNode;
-    show?: boolean;
-    animationTimeout?: number;
-    animateSubMenuChange?: boolean;
-    animation?: AnimationType[] | AnimationType;
-    theme?: "light" | "dark";
-    drawBackground?: boolean;
-}
-
-export interface MenuItemProps extends Omit<React.SVGProps<SVGGElement>, "onClick"> {
-    __index?: number;
-    __angleStep?: number;
-    __parentMenuId?: string;
-
-    data?: any;
-    onItemClick?: (event: React.MouseEvent<SVGGElement, MouseEvent>, index: number, data?: any) => void;
-}
-
-export interface SubMenuClosedProps extends Omit<MenuItemProps, "children"> {
-    __myMenuId?: string;
-    itemView?: React.ReactNode;
-}
-
-export interface SubMenuOpenedProps {
-    __myMenuId?: string;
-    __parentMenuId?: string;
-    displayPosition: DisplayPosition;
-    children: React.ReactNode;
-    displayView?: React.ReactNode;
-    onDisplayClick?: MenuDisplayProps["onClick"];
-}
-
-export type SubMenuProps = SubMenuClosedProps & SubMenuOpenedProps;
-
-export interface MenuDisplayProps {
-    __parentMenuId: string;
-    position: DisplayPosition;
-    children: React.ReactNode;
-    onClick: (event: React.MouseEvent<SVGGElement, MouseEvent>, position: DisplayPosition) => void;
-}
diff --git a/frontend/src/pages/hud/InteractionMenu/components/util.ts b/frontend/src/pages/hud/InteractionMenu/components/util.ts
deleted file mode 100644
index 4297735ae82f5bce8ed5eea32dd327b13b0c5f42..0000000000000000000000000000000000000000
--- a/frontend/src/pages/hud/InteractionMenu/components/util.ts
+++ /dev/null
@@ -1,110 +0,0 @@
-import clsx from "clsx";
-
-export function cx(...classNames: any) {
-    return clsx(...classNames)
-        .split(" ")
-        .map((className) => `__rrm-${className}`)
-        .join(" ");
-}
-
-export function getRingSectionPath(startAngle: number, endAngle: number, innerRadius: number, outerRadius: number, gapAngle: number = 0.02): string {
-    // Adjust start and end angles to create a gap
-    startAngle += gapAngle / 2;
-    endAngle -= gapAngle / 2;
-
-    // get the x and y coordinates on the outer ring
-    const outerX1 = outerRadius * Math.cos(startAngle);
-    const outerY1 = outerRadius * Math.sin(startAngle);
-    const outerX2 = outerRadius * Math.cos(endAngle);
-    const outerY2 = outerRadius * Math.sin(endAngle);
-
-    // get the x and y coordinates on the inner ring
-    const innerX1 = innerRadius * Math.cos(startAngle);
-    const innerY1 = innerRadius * Math.sin(startAngle);
-    const innerX2 = innerRadius * Math.cos(endAngle);
-    const innerY2 = innerRadius * Math.sin(endAngle);
-
-    const largeArcFlag = endAngle - startAngle <= Math.PI ? 0 : 1;
-
-    return `
-        M ${outerRadius + outerX1} ${outerRadius + outerY1}
-        A ${outerRadius} ${outerRadius} 0 ${largeArcFlag} 1 ${outerRadius + outerX2} ${outerRadius + outerY2}
-        L ${outerRadius + innerX2} ${outerRadius + innerY2}
-        A ${innerRadius} ${innerRadius} 0 ${largeArcFlag} 0 ${outerRadius + innerX1} ${outerRadius + innerY1}
-        Z
-    `;
-}
-
-
-export function getArrowPoints(startAngle: number, endAngle: number, outerRadius: number): string {
-    const outR = outerRadius * 0.98;
-    const inR = outerRadius * 0.95;
-    const pivotX = outR * Math.cos((startAngle + endAngle) / 2) + outerRadius;
-    const pivotY = outR * Math.sin((startAngle + endAngle) / 2) + outerRadius;
-    const x1 = inR * Math.cos((startAngle + endAngle) / 2 + Math.PI / 60) + outerRadius;
-    const y1 = inR * Math.sin((startAngle + endAngle) / 2 + Math.PI / 60) + outerRadius;
-    const x2 = inR * Math.cos((startAngle + endAngle) / 2 - Math.PI / 60) + outerRadius;
-    const y2 = inR * Math.sin((startAngle + endAngle) / 2 - Math.PI / 60) + outerRadius;
-    return `${x1},${y1} ${pivotX},${pivotY} ${x2},${y2}`;
-}
-
-export function calculatePositions(position: string, innerRadius: number, outerRadius: number) {
-    let startAngle = 0;
-    let endAngle = 0;
-    let objectHeight = 0;
-    let objectWidth = 0;
-    let objectX = 0;
-    let objectY = 0;
-
-    switch (position) {
-        case "top":
-            startAngle = Math.PI / 6 + Math.PI;
-            endAngle = (5 * Math.PI) / 6 + Math.PI;
-            objectHeight = innerRadius / 2;
-            objectY = Math.sin(startAngle) * innerRadius + outerRadius - objectHeight;
-            objectX = Math.cos(startAngle) * innerRadius + outerRadius;
-            objectWidth = Math.cos(endAngle) * innerRadius + outerRadius - objectX;
-            break;
-        case "bottom":
-            startAngle = Math.PI / 6;
-            endAngle = (5 * Math.PI) / 6;
-            objectHeight = innerRadius / 2;
-            objectY = Math.sin(endAngle) * innerRadius + outerRadius;
-            objectX = Math.cos(endAngle) * innerRadius + outerRadius;
-            objectWidth = Math.cos(startAngle) * innerRadius + outerRadius - objectX;
-            break;
-        case "left":
-            startAngle = (4 * Math.PI) / 6;
-            endAngle = (8 * Math.PI) / 6;
-            objectWidth = innerRadius / 2;
-            objectX = Math.cos(endAngle) * innerRadius + outerRadius - objectWidth;
-            objectY = Math.sin(endAngle) * innerRadius + outerRadius;
-            objectHeight = Math.sin(startAngle) * innerRadius + outerRadius - objectY;
-            break;
-        case "right":
-            startAngle = (10 * Math.PI) / 6;
-            endAngle = (2 * Math.PI) / 6;
-            objectWidth = innerRadius / 2;
-            objectX = Math.cos(startAngle) * innerRadius + outerRadius;
-            objectY = Math.sin(startAngle) * innerRadius + outerRadius;
-            objectHeight = Math.sin(endAngle) * innerRadius + outerRadius - objectY;
-            break;
-        case "center":
-            objectX = outerRadius - innerRadius;
-            objectY = objectX;
-            objectWidth = innerRadius * 2;
-            objectHeight = objectWidth;
-            break;
-        default:
-            throw new Error(`Invalid position: ${position}`);
-    }
-    return { startAngle, endAngle, objectX, objectY, objectWidth, objectHeight };
-}
-
-export function getObjectDimensions(deltaRadius: number, angleStep: number, middleRadius: number, index: number, outerRadius: number) {
-    const objectWidth = Math.min(deltaRadius / Math.sqrt(2), angleStep * middleRadius);
-    const objectHeight = objectWidth;
-    const objectX = Math.cos(angleStep * index + angleStep / 2) * middleRadius + (outerRadius - objectWidth / 2);
-    const objectY = Math.sin(angleStep * index + angleStep / 2) * middleRadius + (outerRadius - objectHeight / 2);
-    return { objectX, objectY, objectWidth, objectHeight };
-}
diff --git a/frontend/src/pages/hud/InteractionMenu/index.ts b/frontend/src/pages/hud/InteractionMenu/index.ts
deleted file mode 100644
index 40b494c5f8737f14659cb4dcf658af7532a21272..0000000000000000000000000000000000000000
--- a/frontend/src/pages/hud/InteractionMenu/index.ts
+++ /dev/null
@@ -1 +0,0 @@
-export * from "./components";
diff --git a/frontend/src/pages/hud/InteractionMenu/interactionmenu.module.scss b/frontend/src/pages/hud/InteractionMenu/interactionmenu.module.scss
deleted file mode 100644
index 372f82a3cda3674be05df1030302ebe9fdb64755..0000000000000000000000000000000000000000
--- a/frontend/src/pages/hud/InteractionMenu/interactionmenu.module.scss
+++ /dev/null
@@ -1,8 +0,0 @@
-.main {
-    position: absolute;
-    width: 100vw;
-    height: 100vh;
-    display: flex;
-    align-items: center;
-    justify-content: center;
-}
\ No newline at end of file
diff --git a/frontend/src/pages/hud/Inventory/Interfaces.ts b/frontend/src/pages/hud/Inventory/Interfaces.ts
deleted file mode 100644
index 1397cd595193ce034f4333bd3e07f6909292d310..0000000000000000000000000000000000000000
--- a/frontend/src/pages/hud/Inventory/Interfaces.ts
+++ /dev/null
@@ -1,24 +0,0 @@
-export interface IItemImage {
-    image: null | string;
-    quality: null | number;
-    name: null | string;
-    description: null | string;
-    render?: null | string;
-}
-
-export interface ICurrentItem {
-    component: string | null;
-    id: number | null;
-    options: string[] | null;
-}
-export interface ITargetCell {
-    component: string | null;
-    id: number | null;
-}
-
-export interface IDropCell {
-    component: string | null;
-    id: number | null;
-}
-
-export type CenterComponent = "dropZone" | "confirmDrop" | "split";
diff --git a/frontend/src/pages/hud/Inventory/Inventory.tsx b/frontend/src/pages/hud/Inventory/Inventory.tsx
deleted file mode 100644
index 0361d56ff9bfdc3326648f02b620f6584570abdf..0000000000000000000000000000000000000000
--- a/frontend/src/pages/hud/Inventory/Inventory.tsx
+++ /dev/null
@@ -1,340 +0,0 @@
-import { FC, useCallback, useEffect, useRef, useState } from "react";
-import { observer } from "mobx-react-lite";
-
-import Main from "./components/Main/Main";
-import DragItem from "./components/DragItem/DragItem";
-
-import ConfirmItemDrop from "./components/ConfirmDrop/ConfirmDrop";
-import Split from "./components/Split/SplitItem";
-import Modal from "./components/Modal/Modal";
-
-import EventManager from "utils/EventManager.util";
-import CenterItems from "./components/DropZone/CenterItems";
-import Notification from "utils/NotifyManager.util";
-import Backpack from "./components/SidePages/Backpack";
-import error from "assets/images/error.svg";
-import SideInventory from "./components/SidePages/SideInventory";
-
-import style from "./inventory.module.scss";
-
-import { OnPlayerPutItemOn } from "./actions/Putitem";
-import { OnPlayerTakeItemOff } from "./actions/TakeItemOff";
-import { OnPlayerDropItem } from "./actions/DropItem";
-import { OnPlayerSplitItem } from "./actions/SplitItem";
-import { OnPlayerDragItem } from "./actions/ItemDrag";
-import { IItemImage, ICurrentItem, ITargetCell, IDropCell, CenterComponent } from "./Interfaces";
-import { inventoryStore } from "store/Inventory.store";
-import { playerStore } from "store/Player.store";
-
-const Inventory: FC<{ store: typeof inventoryStore; playerStore: typeof playerStore }> = observer(({ store, playerStore }) => {
-    const [itemInformation, setItemInformation] = useState<IItemImage | null>(null);
-
-    const [currentItem, setItem] = useState<ICurrentItem>({ component: null, id: null, options: null });
-    const [targetCell, setTargetCell] = useState<ITargetCell>({ component: null, id: null });
-    const [dropCell, setDropCell] = useState<IDropCell>({ component: null, id: null });
-    const [viewingBackpack, setViewingBackpack] = useState<string | null>(null);
-    const [isCellDragged, setCellDragged] = useState<boolean>(false);
-    const [middleComponent, setMiddleComponent] = useState<CenterComponent>("dropZone");
-    const [showModal, setShowModal] = useState(false);
-    const [modalCoords, setModalCoords] = useState<{ x: number; y: number }>({ x: 0, y: 0 });
-
-    const mouseData = useRef<HTMLDivElement>(null);
-    const screen = useRef<HTMLDivElement>(null);
-
-    const putItemOn = OnPlayerPutItemOn(setItem, playerStore.data.gender, currentItem, store, viewingBackpack);
-    const takeItemOff = OnPlayerTakeItemOff(setItem, currentItem, store);
-    const handleDrop = OnPlayerDropItem(currentItem, store, viewingBackpack, setItem, setMiddleComponent);
-    const handleSplit = OnPlayerSplitItem(currentItem, store, viewingBackpack, setItem, setMiddleComponent);
-    const handleMouseUp = OnPlayerDragItem(
-        playerStore.data.gender,
-        isCellDragged,
-        targetCell,
-        store,
-        dropCell,
-        viewingBackpack,
-        setItem,
-        setTargetCell,
-        setDropCell,
-        setCellDragged,
-        handleDrop,
-        putItemOn
-    );
-    const giveItemAway = useCallback(
-        (id?: number) => {
-            if (currentItem.id === null || currentItem.component === null) return Notification.info("what u want?");
-
-            const item = currentItem.component === "clothes" ? store.clothes[currentItem.id] : store.inventory[currentItem.component][currentItem.id];
-            if (typeof id !== "undefined" || id !== null) {
-                setMiddleComponent("dropZone");
-                setItem({ component: null, id: null, options: null });
-
-                const itemData = { playerId: id, item: item, source: { slot: `${currentItem.id}` } };
-                EventManager.emitServer("inventory", "onGiveItem", itemData);
-            }
-        },
-        [currentItem.component, currentItem.id, store.clothes, store.inventory]
-    );
-    /**
-     * Enable only for debugging purposes!
-     */
-
-    // useEffect(() => {
-    //     console.log("viewing backpack changed", viewingBackpack);
-    // }, [viewingBackpack]);
-
-    // useEffect(() => {
-    //     console.log("currentItem changed", currentItem);
-    // }, [currentItem]);
-
-    // useEffect(() => {
-    //     console.log("targetCell changed", targetCell);
-    // }, [targetCell]);
-
-    // useEffect(() => {
-    //     console.log("dropCell changed", dropCell);
-    // }, [dropCell]);
-
-    // useEffect(() => {
-    //     console.log("store.quickUse changed", store.quickUse);
-    // }, [store.quickUse]);
-
-    // useEffect(() => {
-    //     console.log("store.clothes changed", store.clothes);
-    // }, [store.clothes]);
-
-    // useEffect(() => {
-    //     console.log("store.inventory changed", store.inventory);
-    // }, [store.inventory]);
-
-    const getItemOptions = useCallback(
-        (targetCell: { id: number | null; component: string | null }) => {
-            const targetId = targetCell.id;
-            const component = targetCell.component;
-            if (targetId === null || component === null) return [];
-
-            const componentMapping: { clothes?: string[]; pockets?: string[]; backpack?: string[]; quickUse?: string[] } = {
-                clothes: store.clothes[targetId]?.options,
-                pockets: store.inventory.pockets[targetId]?.options,
-                backpack: (() => {
-                    if (!viewingBackpack) return [];
-                    const backpack = store.findItemByUUID(viewingBackpack);
-                    if (!backpack || !backpack.items) return [];
-                    return backpack.items[targetId]?.options ?? [];
-                })(),
-                quickUse: (() => {
-                    const quickUseData = store.quickUse[targetId];
-                    if (quickUseData && quickUseData.component && quickUseData.id !== null) {
-                        const item = store.inventory[quickUseData.component]?.[quickUseData.id];
-                        return item?.options;
-                    }
-                    return [];
-                })()
-            };
-
-            return componentMapping[component as keyof typeof componentMapping] ?? [];
-        },
-        [store.clothes, store.inventory, store.quickUse, viewingBackpack]
-    );
-
-    const handleMouseDown = useCallback(
-        (_targetCell: IDropCell) => {
-            if (_targetCell.id === null || !_targetCell.component) return;
-            let options = getItemOptions(_targetCell);
-            setItem({ ..._targetCell, options });
-            setShowModal(false);
-            setCellDragged(true);
-        },
-        [getItemOptions]
-    );
-
-    function calculateAdjustedClientPosition(clientX: number, clientY: number): { adjustedClientX: number; adjustedClientY: number } {
-        const actualPageWidth = window.innerWidth;
-        const actualPageHeight = window.innerHeight;
-        const desiredPageWidth = actualPageWidth * 0.8;
-        const desiredPageHeight = actualPageHeight * 0.75;
-        const adjustmentX = (actualPageWidth - desiredPageWidth) / 2;
-        const adjustmentY = (actualPageHeight - desiredPageHeight) / 2;
-        const adjustedClientX = clientX - adjustmentX;
-        const adjustedClientY = clientY - adjustmentY;
-        return { adjustedClientX, adjustedClientY };
-    }
-
-    const handleContextMenu = useCallback(
-        (_targetCell: IDropCell, e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {
-            if (isCellDragged || _targetCell.id === null || _targetCell.component === null) return;
-            const options = getItemOptions(_targetCell);
-            setItem({ ..._targetCell, options });
-            const { adjustedClientX, adjustedClientY } = calculateAdjustedClientPosition(e.clientX, e.clientY);
-            setModalCoords({ x: adjustedClientX, y: adjustedClientY });
-            setShowModal(true);
-        },
-        [isCellDragged, getItemOptions]
-    );
-
-    useEffect(() => {
-        if (!currentItem.component || currentItem.id === null) {
-            setItemInformation({ image: null, quality: null, name: null, description: null });
-            return;
-        }
-
-        let item;
-        switch (currentItem.component) {
-            case "quickUse":
-                const quickUseData = store.quickUse[currentItem.id];
-                if (!quickUseData || !quickUseData.component || quickUseData.id === null) {
-                    setItemInformation({ image: null, quality: null, name: null, description: null });
-                    return;
-                }
-                item = store.inventory[quickUseData.component][quickUseData.id];
-                break;
-            case "clothes":
-                item = store.clothes[currentItem.id];
-                break;
-            case "pockets":
-                item = store.inventory.pockets[currentItem.id];
-                break;
-            case "backpack":
-                if (!viewingBackpack) {
-                    setItemInformation({ image: null, quality: null, name: null, description: null });
-                    return;
-                }
-                const itemdata = store.findItemByUUID(viewingBackpack);
-                if (!itemdata || !itemdata.items) {
-                    setItemInformation({ image: null, quality: null, name: null, description: null });
-                    return;
-                }
-                const iteminfo = itemdata.items[currentItem.id];
-                item = iteminfo;
-                break;
-            case "groundItems":
-                item = store.sideInventory[currentItem.id];
-                break;
-            default:
-                setItemInformation({ image: null, quality: null, name: null, description: null });
-                return;
-        }
-
-        if (!item) {
-            setItemInformation({ image: null, quality: null, name: null, description: null });
-            return;
-        }
-
-        setItemInformation({ image: item.image, quality: item.quality, name: item.name, description: item.description, render: item.render });
-        setMiddleComponent("dropZone");
-    }, [currentItem, store.clothes, store.inventory, store.quickUse, store.sideInventory, viewingBackpack]);
-
-    useEffect(() => {
-        const timeout = setTimeout(() => {
-            if (screen.current) {
-                screen.current.classList.add(style.active);
-            }
-        }, 200);
-        return () => clearTimeout(timeout);
-    }, []);
-
-    const setImageSource = useCallback((img: string) => {
-        try {
-            return new URL(`../../../assets/images/hud/inventory/items/${img}`, import.meta.url).href;
-        } catch (err) {
-            return error;
-        }
-    }, []);
-
-    return (
-        <div
-            ref={screen}
-            className={style.inventory}
-            onMouseUp={(e) => e.button === 0 && handleMouseUp()}
-            onMouseMove={(e) => {
-                if (mouseData.current) {
-                    mouseData.current.style.left = e.pageX + "px";
-                    mouseData.current.style.top = e.pageY + "px";
-                }
-            }}
-            onContextMenu={(e) => e.preventDefault()}
-        >
-            <div className={style.content}>
-                <div className={style.left}>
-                    <div className={style.adaptive}>
-                        <Main
-                            store={store}
-                            itemInformation={itemInformation}
-                            currentItem={currentItem}
-                            setItem={setItem}
-                            setTargetCell={setTargetCell}
-                            setDropCell={setDropCell}
-                            isCellDragged={isCellDragged}
-                            handleMouseDown={handleMouseDown}
-                            handleContextMenu={handleContextMenu}
-                            setShowModal={setShowModal}
-                            setSource={setImageSource}
-                        />
-                    </div>
-                </div>
-                {middleComponent === "dropZone" && (
-                    <CenterItems
-                        store={store}
-                        currentItem={currentItem}
-                        setItem={setItem}
-                        setTargetCell={setTargetCell}
-                        setDropCell={setDropCell}
-                        isCellDragged={isCellDragged}
-                        handleMouseDown={handleMouseDown}
-                        handleContextMenu={handleContextMenu}
-                    />
-                )}
-                {middleComponent === "confirmDrop" && <ConfirmItemDrop store={store} setMiddleComponent={setMiddleComponent} handleDrop={handleDrop} itemInformation={itemInformation} />}
-                {middleComponent === "split" && <Split viewingBackpack={viewingBackpack} store={store} currentItem={currentItem} handleSplit={handleSplit} setMiddleComponent={setMiddleComponent} />}
-                <Modal
-                    store={store}
-                    currentItem={currentItem}
-                    putItemOn={putItemOn}
-                    viewingBackpack={viewingBackpack}
-                    setViewingBackpack={setViewingBackpack}
-                    takeItemOff={takeItemOff}
-                    handleDrop={handleDrop}
-                    giveItemAway={giveItemAway}
-                    setMiddleComponent={setMiddleComponent}
-                    showModal={showModal}
-                    setShowModal={setShowModal}
-                    modalCoords={modalCoords}
-                />
-
-                <div className={style.right}>
-                    <div className={style.adaptive}>
-                        {viewingBackpack && (
-                            <Backpack
-                                viewingBackpack={viewingBackpack}
-                                store={store}
-                                currentItem={currentItem}
-                                setItem={setItem}
-                                setTargetCell={setTargetCell}
-                                setDropCell={setDropCell}
-                                isCellDragged={isCellDragged}
-                                handleMouseDown={handleMouseDown}
-                                handleContextMenu={handleContextMenu}
-                                setSource={setImageSource}
-                            />
-                        )}
-                        <SideInventory
-                            title="Ground Items"
-                            store={store}
-                            currentItem={currentItem}
-                            setItem={setItem}
-                            setTargetCell={setTargetCell}
-                            setDropCell={setDropCell}
-                            isCellDragged={isCellDragged}
-                            handleMouseDown={handleMouseDown}
-                            handleContextMenu={handleContextMenu}
-                            setSource={setImageSource}
-                        />
-                    </div>
-                </div>
-            </div>
-
-            <DragItem viewingBackpack={viewingBackpack} mouseData={mouseData} store={store} targetCell={targetCell} />
-        </div>
-    );
-});
-
-export default Inventory;
diff --git a/frontend/src/pages/hud/Inventory/actions/DropItem.tsx b/frontend/src/pages/hud/Inventory/actions/DropItem.tsx
deleted file mode 100644
index 5efc0cc54faa8cccf1209c281a93519f837be03a..0000000000000000000000000000000000000000
--- a/frontend/src/pages/hud/Inventory/actions/DropItem.tsx
+++ /dev/null
@@ -1,55 +0,0 @@
-import { useCallback } from "react";
-import { CenterComponent, ICurrentItem } from "../Interfaces";
-
-import Notification from "utils/NotifyManager.util";
-import EventManager from "utils/EventManager.util";
-import { inventoryStore } from "store/Inventory.store";
-
-export const OnPlayerDropItem = (
-    currentItem: ICurrentItem,
-    store: typeof inventoryStore,
-    viewingBackpack: string | null,
-    setItem: (item: ICurrentItem) => void,
-    setMiddleComponent: (comp: CenterComponent) => void
-) => {
-    return useCallback(
-        (isAccepted?: boolean) => {
-            if (currentItem.id === null || currentItem.component === null) return;
-            if (currentItem.component === "quickUse") return Notification.error("You cannot drop an item from fast slots.");
-            if (currentItem.component === "groundItems") return Notification.error("You cant drop an item that's already dropped.");
-
-            const getBackpackData = (hash: string | null) => {
-                if (!hash || currentItem.id === null) return null;
-                const itemdata = store.findItemByUUID(hash);
-                if (!itemdata || !itemdata.items) return null;
-                return itemdata.items[currentItem.id] ?? null;
-            };
-
-            const item =
-                currentItem.component === "backpack"
-                    ? getBackpackData(viewingBackpack)
-                    : currentItem.component === "clothes"
-                    ? store.clothes[currentItem.id]
-                    : store.inventory[currentItem.component][currentItem.id];
-            if (!item) return;
-
-            if (item.quality >= 3 && !isAccepted) {
-                setMiddleComponent("confirmDrop");
-                EventManager.emitServer("inventory", "confirmItemDrop");
-            } else {
-                setMiddleComponent("dropZone");
-                setItem({ component: null, id: null, options: null });
-
-                const dropItemData = {
-                    item: item,
-                    source:
-                        currentItem.component === "backpack" && viewingBackpack
-                            ? { component: currentItem.component, slot: `${currentItem.id}`, viewingBackpack }
-                            : { component: currentItem.component, slot: `${currentItem.id}` }
-                };
-                EventManager.emitServer("inventory", "onDropItem", dropItemData);
-            }
-        },
-        [currentItem.component, currentItem.id, setItem, setMiddleComponent, store.clothes, store.inventory, viewingBackpack]
-    );
-};
diff --git a/frontend/src/pages/hud/Inventory/actions/GiveItemAway.tsx b/frontend/src/pages/hud/Inventory/actions/GiveItemAway.tsx
deleted file mode 100644
index e69de29bb2d1d6434b8b29ae775ad8c2e48c5391..0000000000000000000000000000000000000000
diff --git a/frontend/src/pages/hud/Inventory/actions/ItemDrag.tsx b/frontend/src/pages/hud/Inventory/actions/ItemDrag.tsx
deleted file mode 100644
index 8a00e7393ba9e8467fe208b8b32333f8fb81e835..0000000000000000000000000000000000000000
--- a/frontend/src/pages/hud/Inventory/actions/ItemDrag.tsx
+++ /dev/null
@@ -1,280 +0,0 @@
-import { useCallback } from "react";
-import { values } from "mobx";
-
-import { ICurrentItem, IDropCell, ITargetCell } from "../Interfaces";
-import Notification from "utils/NotifyManager.util";
-import EventManager from "utils/EventManager.util";
-import { RageShared } from "../../../../../../source/shared";
-import { inventoryStore } from "store/Inventory.store";
-
-export const OnPlayerDragItem = (
-    gender: number,
-    isCellDragged: boolean,
-    targetCell: ITargetCell,
-    store: typeof inventoryStore,
-    dropCell: IDropCell,
-    viewingBackpack: string | null,
-    setItem: (item: ICurrentItem) => void,
-    setTargetCell: (target: ITargetCell) => void,
-    setDropCell: (slot: IDropCell) => void,
-    setCellDragged: (enable: boolean) => void,
-    handleDrop: () => void,
-    putItemOn: (target: RageShared.Inventory.Interfaces.IBaseItem) => void
-) => {
-    return useCallback(() => {
-        if (!isCellDragged) return;
-
-        const getTargetItem = () => {
-            const { id, component } = targetCell;
-            if (id === null || component === null) {
-                return null;
-            }
-
-            let targetItem: RageShared.Inventory.Interfaces.IBaseItem | null = null;
-            if (component === "quickUse") {
-                const quickUseData = store.quickUse[id];
-                if (quickUseData && quickUseData.component && quickUseData.id !== null) {
-                    targetItem = store.inventory[quickUseData.component]?.[quickUseData.id];
-                }
-            } else if (component === "backpack" && viewingBackpack) {
-                targetItem = store.getBackpackItemData(viewingBackpack, id);
-            } else if (component === "groundItems") {
-                targetItem = store.sideInventory[id];
-            } else {
-                targetItem = component === "clothes" ? store.clothes[id] : store.inventory[component][id];
-            }
-            return targetItem;
-        };
-
-        const target = getTargetItem();
-
-        const getItemOptions = (targetCell: ITargetCell) => {
-            const { id, component } = targetCell;
-            if (id === null || component === null) return [];
-
-            const componentMapping: { [key: string]: string[] | undefined } = {
-                clothes: store.clothes[id]?.options,
-                pockets: store.inventory.pockets[id]?.options,
-                backpack: viewingBackpack ? store.getBackpackItemData(viewingBackpack, id)?.options : [],
-                quickUse: (() => {
-                    const quickUseData = store.quickUse[id];
-                    if (quickUseData && quickUseData.component && quickUseData.id !== null) {
-                        return store.inventory[quickUseData.component]?.[quickUseData.id]?.options;
-                    }
-                    return [];
-                })()
-            };
-
-            return componentMapping[component] ?? [];
-        };
-
-        const handleAction = (options: any, notification?: string) => {
-            if (targetCell.id === null || targetCell.component === null) return;
-            setItem({ ...options });
-            setTargetCell({ component: null, id: null });
-            setDropCell({ component: null, id: null });
-            setCellDragged(false);
-            if (notification) {
-                Notification.error(notification);
-            }
-        };
-
-        const error = (subtitle: string) => {
-            const options = getItemOptions(targetCell);
-            handleAction({ ...targetCell, options }, subtitle);
-        };
-
-        const cancel = (notification?: string) => {
-            const options = getItemOptions(targetCell);
-            handleAction({ ...targetCell, options }, notification);
-        };
-
-        const success = () => {
-            if (dropCell.id === null || dropCell.component === null) return;
-            const options = getItemOptions(dropCell);
-            handleAction({ ...dropCell, options });
-            if (targetCell.component === dropCell.component && targetCell.id === dropCell.id) return;
-
-            const sendData = {
-                item: target,
-                source: { component: targetCell.component, slot: `${targetCell.id}` },
-                target: {
-                    component: dropCell.component,
-                    slot: `${dropCell.id}`,
-                    item: dropCell.component === "clothes" && itemDropData && !itemDropData.isPlaced ? null : dropCell.component === "quickUse" ? null : itemDropData
-                },
-                backpackHash: viewingBackpack
-            };
-            EventManager.emitServer("inventory", "onMoveItem", sendData);
-            return;
-        };
-
-        if (dropCell.id === targetCell.id && dropCell.component === targetCell.component) return cancel();
-        if (!targetCell.component || targetCell.id === null) return cancel();
-
-        if (!target || !dropCell.component) return cancel();
-
-        if (targetCell.component === "quickUse") {
-            if (!dropCell.component || dropCell.id === null) return cancel();
-            if (dropCell.component === "quickUse") {
-                const item = store.quickUse[targetCell.id];
-                store.changeInventoryData({ component: "quickUse", id: targetCell.id }, store.quickUse[dropCell.id], false);
-                store.changeInventoryData({ component: "quickUse", id: dropCell.id }, item, true);
-                return success();
-            }
-            if (dropCell.component !== "pockets") return cancel("You can't move a quick use item here!");
-            const quickUseData = store.quickUse[targetCell.id];
-            if (!quickUseData || !quickUseData.component || quickUseData.id === null) return cancel("Invalid quick use item! > contact an admin.");
-            const linkedQuickUseItem = store.inventory[quickUseData.component][quickUseData.id];
-            if (!linkedQuickUseItem) return cancel("This quick use item isn't valid! Contact an admin");
-            const slotIndex = Object.values(store.inventory[quickUseData.component]).findIndex((_x, e) => e === quickUseData.id);
-            store.changeInventoryData({ component: "quickUse", id: targetCell.id }, null, false);
-            setItem({ component: dropCell.component, id: slotIndex, options: linkedQuickUseItem.options });
-            setTargetCell({ component: null, id: null });
-            setDropCell({ component: null, id: null });
-            setCellDragged(false);
-            const sendData = {
-                item: linkedQuickUseItem,
-                source: { component: targetCell.component, slot: `${targetCell.id}` },
-                target: { component: dropCell.component, slot: `${slotIndex}`, item: null }
-            };
-            return EventManager.emitServer("inventory", "onMoveItem", sendData);
-        }
-
-        if (targetCell.component !== "pockets" && dropCell.component === "quickUse") {
-            return cancel("You can only put an item to quick use from your pocket.");
-        }
-
-        if (dropCell.component !== "pockets" && store.isItemInQuickUse(targetCell.component, targetCell.id)) {
-            return cancel("This item is placed in quick use, remove it from there before moving it elsewhere.");
-        }
-
-        if (dropCell.component === "backpack" && target.type === "backpack") {
-            return cancel("You can't put a backpack inside a backpack.");
-        }
-
-        // if (dropCell.component === "trade") {
-        //     if (targetCell.component === "quickUse") {
-        //         return cancel("Remove the item from the fast slots first.");
-        //     }
-        //     EventManager.emitServer("inventory", "onGiveItemAway");
-        //     setTargetCell({ component: null, id: null });
-        //     setDropCell({ component: null, id: null });
-        //     setCellDragged(false);
-        //     return giveItemAway();
-        // }
-
-        if (dropCell.component === "remove") {
-            if (targetCell.component === "quickUse") return cancel("Remove the item from the fast slots first.");
-            setTargetCell({ component: null, id: null });
-            setDropCell({ component: null, id: null });
-            setCellDragged(false);
-            return handleDrop();
-        }
-
-        if (dropCell.component === "putOn") {
-            const clothes = ["hat", "glasses", "tShirt", "mask", "top", "backpack", "armour", "watch", "gloves", "pants", "shoes", "wallet"];
-            if (target.isPlaced) return error("You are already wearing this item 2");
-
-            if (clothes.includes(target.type)) {
-                if (target.gender && target.gender !== gender) return error("Gender mismatch");
-                setTargetCell({ component: null, id: null });
-                setDropCell({ component: null, id: null });
-                setCellDragged(false);
-                return putItemOn(target);
-            } else return error("The item cannot be equipped");
-        }
-        if (dropCell.id === null) return cancel("ERROR #303, contact an admin!");
-
-        if (dropCell.component === "quickUse") {
-            if (values(store.quickUse).findIndex((el) => el && el.component === targetCell.component && el.id === targetCell.id) >= 0) return error("This item is already on quick use.");
-            if (target.options.indexOf("fast") >= 0) {
-                store.changeInventoryData({ component: "quickUse", id: dropCell.id }, targetCell, true);
-                return success();
-            } else return error("The item cannot be placed into quick access");
-        }
-
-        if (dropCell.component === "groundItems") return error("You cant move items here, use the drop zone to drop them.");
-
-        const itemDropData =
-            dropCell.component === "backpack"
-                ? store.getBackpackItemData(viewingBackpack, dropCell.id) || null
-                : dropCell.component === "clothes"
-                ? store.clothes[dropCell.id]
-                : store.inventory[dropCell.component][dropCell.id];
-
-        if (
-            (targetCell.component !== dropCell.component && targetCell.component === "pockets" && dropCell.component !== "backpack") ||
-            (targetCell.component === "backpack" && dropCell.component !== "pockets")
-        ) {
-            if (target.weight * target.count + Number(store.currentWeight) > store.maxInventoryWeight) return error("You dont have any more space in your inventory here");
-        }
-
-        if (dropCell.component === "clothes") {
-            const items: { [key: number]: string } = {
-                0: "hat",
-                1: "mask",
-                2: "glasses",
-                3: "earRings",
-                4: "chain",
-                5: "tShirt",
-                6: "top",
-                7: "backpack",
-                8: "wallet",
-                9: "armour",
-                10: "watch",
-                11: "gloves",
-                12: "pants",
-                13: "shoes"
-            };
-            if (targetCell.component !== "clothes" && target.type === items[dropCell.id]) {
-                if (target.hash === itemDropData?.hash) return error("You are already wearing this item.");
-                if (target.gender && target.gender !== gender) return error("Gender mismatch");
-                if (itemDropData?.isPlaced) store.changeInventoryData(targetCell, { ...itemDropData }, false, viewingBackpack);
-                else store.changeInventoryData(targetCell, null, false, viewingBackpack);
-                store.changeInventoryData(dropCell, { ...target, isPlaced: true }, true);
-                return success();
-            } else return error("The item cannot be placed in this location");
-        }
-
-        if (targetCell.component === "clothes") {
-            if (dropCell.component !== "clothes" && dropCell.component !== "quickUse") {
-                if (target.type === "backpack" && dropCell.component === "backpack") return error("You cant put a backpack inside a backpack");
-                if (target.weight * target.count + Number(store.currentWeight) > store.maxInventoryWeight) return error("You cant hold any more items");
-                if (itemDropData !== null) {
-                    if (itemDropData.type !== target.type || itemDropData.key !== target.key || itemDropData.quality !== target.quality) return error("The item cannot be placed in this location");
-                    else if (itemDropData.count + target.count <= itemDropData.maxStack) {
-                        store.changeInventoryData(dropCell, { ...target, count: target.count + itemDropData.count }, true);
-                    } else {
-                        const freeIndex = values(store.inventory[dropCell.component]).findIndex((el) => !el);
-                        if (freeIndex < 0) return error("Not enough inventory space");
-                        store.changeInventoryData({ component: dropCell.component, id: freeIndex }, { ...target }, true);
-                    }
-                } else {
-                    store.changeInventoryData(dropCell, { ...target, isPlaced: false }, false, viewingBackpack);
-                }
-                store.changeInventoryData(targetCell, { type: target.type, isPlaced: false, quality: -1, image: target.image }, true);
-                return success();
-            }
-        }
-
-        const isTargetInQuickUse = values(store.quickUse).findIndex((el) => el && el.component === targetCell.component && el.id === targetCell.id);
-        const isDropToInQuickUse = values(store.quickUse).findIndex((el) => el && el.component === dropCell.component && el.id === dropCell.id);
-        const isTargetEqualsDrop =
-            target.key === itemDropData?.key &&
-            target.type === itemDropData.type &&
-            target.quality === itemDropData.quality &&
-            (dropCell.component !== targetCell.component || dropCell.id !== targetCell.id);
-
-        if (isTargetInQuickUse >= 0) store.quickUse[isTargetInQuickUse] = { component: dropCell.component, id: dropCell.id };
-        if (isDropToInQuickUse >= 0) store.quickUse[isDropToInQuickUse] = { component: targetCell.component, id: targetCell.id };
-
-        if (!isTargetEqualsDrop) {
-            if (isTargetInQuickUse >= 0) store.quickUse[isTargetInQuickUse] = { component: dropCell.component, id: dropCell.id };
-            if (isDropToInQuickUse >= 0) store.quickUse[isDropToInQuickUse] = { component: targetCell.component, id: targetCell.id };
-            store.changeInventoryData(targetCell, itemDropData, false, viewingBackpack);
-            store.changeInventoryData(dropCell, target, true, viewingBackpack);
-        }
-        return success();
-    }, [dropCell, gender, handleDrop, isCellDragged, putItemOn, setCellDragged, setDropCell, setItem, setTargetCell, store, targetCell, viewingBackpack]);
-};
diff --git a/frontend/src/pages/hud/Inventory/actions/Putitem.tsx b/frontend/src/pages/hud/Inventory/actions/Putitem.tsx
deleted file mode 100644
index 8c65c74c24ea83cbb5b6036678ca14d3c2e935ac..0000000000000000000000000000000000000000
--- a/frontend/src/pages/hud/Inventory/actions/Putitem.tsx
+++ /dev/null
@@ -1,79 +0,0 @@
-import { ICurrentItem } from "../Interfaces";
-import { useCallback } from "react";
-import EventManager from "utils/EventManager.util";
-import Notification from "utils/NotifyManager.util";
-import { values } from "mobx";
-import { RageShared } from "../../../../../../source/shared";
-import { inventoryStore } from "store/Inventory.store";
-export const OnPlayerPutItemOn = (setItem: (item: ICurrentItem) => void, gender: number, currentItem: ICurrentItem, store: typeof inventoryStore, viewingBackpack: string | null) => {
-    return useCallback(
-        (item?: RageShared.Inventory.Interfaces.IBaseItem) => {
-            if (currentItem.id === null || currentItem.component === null) return;
-
-            const target = item ? item : { ...store.inventory[currentItem.component][currentItem.id] };
-            if (target.gender && target.gender !== gender) return Notification.error("This clothing type is not suitable for you.");
-
-            const items: { [key: string]: number } = {
-                hat: 0,
-                mask: 1,
-                glasses: 2,
-                earRings: 3,
-                chain: 4,
-                tShirt: 5,
-                top: 6,
-                backpack: 7,
-                wallet: 8,
-                armour: 9,
-                watch: 10,
-                gloves: 11,
-                pants: 12,
-                shoes: 13
-            };
-            const id = items[target.type ?? ""];
-
-            const drop = { ...store.clothes[id] };
-
-            const freeIndex =
-                currentItem.component === "backpack"
-                    ? (viewingBackpack && values(store.findItemByUUID(viewingBackpack)?.items).findIndex((el) => !el)) || -1
-                    : currentItem.component === "groundItems"
-                    ? values(store.sideInventory).findIndex((el) => !el)
-                    : values(store.inventory[currentItem.component]).findIndex((el) => !el);
-
-            if (target.hash === drop.hash) return Notification.error("You are already wearing this item.");
-
-            if (target.count === 1) {
-                if (drop.isPlaced) store.changeInventoryData(currentItem, { ...drop }, false, viewingBackpack);
-                else store.changeInventoryData(currentItem, null, false, viewingBackpack);
-
-                store.changeInventoryData({ component: "clothes", id }, { ...target, isPlaced: true }, true);
-
-                const moveItemData = {
-                    item: target,
-                    source: { component: currentItem.component, slot: `${currentItem.id}` },
-                    target: { component: "clothes", slot: `${id}`, item: drop.isPlaced ? drop : null }
-                };
-                EventManager.emitServer("inventory", "onMoveItem", moveItemData);
-            } else {
-                if (drop.isPlaced) {
-                    if (freeIndex < 0) return Notification.error("Not enough inventory space");
-                    store.changeInventoryData({ component: currentItem.component, id: freeIndex }, { ...drop }, false, viewingBackpack);
-                }
-
-                const item = store.inventory[currentItem.component][currentItem.id];
-                if (!item) return Notification.error(">> !item is null");
-                item.count -= 1;
-                store.changeInventoryData({ component: "clothes", id }, { ...target, count: 1, isPlaced: true }, true, viewingBackpack);
-
-                const splitItemData = {
-                    item: target,
-                    source: { component: currentItem.component, slot: `${currentItem.id}` },
-                    target: { component: "clothes", count: 1, slot: `${id}` }
-                };
-                EventManager.emitServer("inventory", "onSplitItem", splitItemData);
-            }
-            setItem({ component: "clothes", id, options: store.clothes[id]?.options ?? [] });
-        },
-        [currentItem, gender, setItem, store, viewingBackpack]
-    );
-};
diff --git a/frontend/src/pages/hud/Inventory/actions/SplitItem.tsx b/frontend/src/pages/hud/Inventory/actions/SplitItem.tsx
deleted file mode 100644
index 88261d18dd903e8443a531ff9b9c812e593d683f..0000000000000000000000000000000000000000
--- a/frontend/src/pages/hud/Inventory/actions/SplitItem.tsx
+++ /dev/null
@@ -1,132 +0,0 @@
-import { useCallback } from "react";
-import { CenterComponent, ICurrentItem } from "../Interfaces";
-import Notification from "utils/NotifyManager.util";
-import EventManager from "utils/EventManager.util";
-import { values } from "mobx";
-import { RageShared } from "../../../../../../source/shared";
-import { inventoryStore } from "store/Inventory.store";
-export const OnPlayerSplitItem = (
-    currentItem: ICurrentItem,
-    store: typeof inventoryStore,
-    viewingBackpack: string | null,
-    setItem: (item: ICurrentItem) => void,
-    setMiddleComponent: (comp: CenterComponent) => void
-) => {
-    return useCallback(
-        (splitItem: RageShared.Inventory.Interfaces.IBaseItem, value: number) => {
-            if (currentItem.id === null || currentItem.component === null) return;
-
-            if (value <= 0) return setMiddleComponent("dropZone");
-
-            //if player is trying to split an item from backpack
-            if (currentItem.component === "backpack") {
-                if (!viewingBackpack) return setMiddleComponent("dropZone");
-                let findFreeSlot = -1;
-
-                const backpackData = store.findItemByUUID(viewingBackpack);
-                if (!backpackData || !backpackData.items) return setMiddleComponent("dropZone");
-
-                const itemData = backpackData.items[currentItem.id];
-
-                if (!itemData) return setMiddleComponent("dropZone");
-
-                const backpackQualityList: { [key: number]: number } = { 0: 12, 1: 24 };
-
-                const backpackQuality = backpackQualityList[backpackData.quality];
-
-                for (let i = 0; i < backpackQuality; i++) {
-                    if (backpackData.items[i] === null) {
-                        findFreeSlot = i;
-                        break;
-                    }
-                }
-
-                if (findFreeSlot === -1) {
-                    Notification.error(`This backpack doesn't have any free slot where the split item can go.`);
-                    return setMiddleComponent("dropZone");
-                }
-                if (itemData.count <= 1) return setMiddleComponent("dropZone");
-
-                itemData.count -= value;
-                Notification.success(`You successfully split this item.`);
-
-                store.changeInventoryData({ component: currentItem.component, id: findFreeSlot }, { ...itemData, count: value }, true, viewingBackpack);
-                setItem({ component: "backpack", id: findFreeSlot, options: itemData.options });
-
-                //BACKEND TODO: Making sure the newly created item has a new hash key (better generate there then here)
-                EventManager.emitServer("inventory", "onSplitItem", {
-                    item: itemData,
-                    source: { component: "backpack", slot: `${currentItem.id}` },
-                    target: { component: "backpack", count: value, slot: `${findFreeSlot}`, linkedbackpack: viewingBackpack }
-                });
-            } else {
-                let item = { ...splitItem, options: [...splitItem.options] };
-                let component;
-                let pocketsFreeIndex = values(store.inventory.pockets).findIndex((el) => !el);
-
-                let backpackFreeIndex = -1;
-                let backpackQuality: { [key: number]: number } = { 0: 12, 1: 24 };
-                //checking if backpack is placed to clothes
-                if (store.clothes[7]?.isPlaced) {
-                    const itemData = store.clothes[7];
-                    const backpackData = store.findItemByUUID(itemData.hash);
-                    if (backpackData && backpackData.items) {
-                        const quality = backpackQuality[itemData.quality];
-                        for (let i = 0; i < quality; i++) {
-                            if (backpackData.items[i] === null) {
-                                backpackFreeIndex = i;
-                                break;
-                            }
-                        }
-                    }
-                }
-
-                if (pocketsFreeIndex >= 0) {
-                    component = "pockets";
-                } else if (store.clothes[7]?.isPlaced && backpackFreeIndex >= 0) {
-                    component = "backpack";
-                } else {
-                    return Notification.error("You dont have enough space in inventory");
-                }
-
-                if (currentItem.component === "quickUse") {
-                    const quickUseData = store.quickUse[currentItem.id];
-                    if (!quickUseData) return;
-                    const [fastSlotComponent, fastSlotLinkedID] = [quickUseData.component, quickUseData.id];
-                    if (!fastSlotComponent || fastSlotLinkedID === null) return;
-
-                    const itemData = store.inventory[fastSlotComponent][fastSlotLinkedID];
-                    if (!itemData) return;
-                    itemData.count -= value;
-                } else {
-                    const itemData = store.inventory[currentItem.component][currentItem.id];
-                    if (!itemData) return;
-                    itemData.count -= value;
-                }
-
-                store.changeInventoryData(
-                    { component, id: component === "pockets" ? pocketsFreeIndex : backpackFreeIndex },
-                    { ...item, count: value },
-                    true,
-                    component === "backpack" ? store.clothes[7]?.hash : null
-                );
-
-                setItem({ component, id: component === "pockets" ? pocketsFreeIndex : backpackFreeIndex, options: item.options });
-
-                Notification.success(`Item was split successfully, it was added to your ${component}`);
-
-                EventManager.emitServer("inventory", "onSplitItem", {
-                    item: item,
-                    source: { component: currentItem.component, slot: `${currentItem.id}` },
-                    target: {
-                        component: component,
-                        count: value,
-                        slot: `${component === "pockets" ? pocketsFreeIndex : backpackFreeIndex}`,
-                        linkedbackpack: component === "backpack" ? store.clothes[7]?.hash : null
-                    }
-                });
-            }
-        },
-        [currentItem.component, currentItem.id, setItem, setMiddleComponent, store, viewingBackpack]
-    );
-};
diff --git a/frontend/src/pages/hud/Inventory/actions/TakeItemOff.tsx b/frontend/src/pages/hud/Inventory/actions/TakeItemOff.tsx
deleted file mode 100644
index 44c1319e4b03c7aac5c85bda31f54e0c4fb18134..0000000000000000000000000000000000000000
--- a/frontend/src/pages/hud/Inventory/actions/TakeItemOff.tsx
+++ /dev/null
@@ -1,47 +0,0 @@
-import { useCallback } from "react";
-import { values } from "mobx";
-import { ICurrentItem } from "../Interfaces";
-import { inventoryStore } from "store/Inventory.store";
-import EventManager from "utils/EventManager.util";
-import Notification from "utils/NotifyManager.util";
-
-export const OnPlayerTakeItemOff = (setItem: (item: ICurrentItem) => void, currentItem: ICurrentItem, store: typeof inventoryStore) => {
-    return useCallback(() => {
-        if (currentItem.id === null) return;
-
-        const clothesData = store.clothes[currentItem.id];
-        if (!clothesData) return;
-        let component;
-        let id;
-        const item = { ...clothesData };
-
-        const pocketsFreeIndex = values(store.inventory.pockets).findIndex((el) => !el);
-
-        if (item.type === "backpack" && values(store.inventory.backpack).findIndex((el) => el !== null) >= 0) {
-            return Notification.error("Take the items off your backpack before taking it off.");
-        }
-
-        if (item.weight + store.currentWeight <= store.maxInventoryWeight) {
-            if (pocketsFreeIndex >= 0) {
-                store.changeInventoryData({ component: "pockets", id: pocketsFreeIndex }, { ...item }, true);
-                id = pocketsFreeIndex;
-                component = "pockets";
-            } else if (store.clothes[7] && store.clothes[7].isPlaced) {
-                const backpackFreeIndex = values(store.inventory.backpack).findIndex((el) => !el);
-                if (item.type === "backpack") return Notification.error("Not enough inventory space");
-                store.changeInventoryData({ component: "backpack", id: backpackFreeIndex }, { ...item }, true);
-                id = backpackFreeIndex;
-                component = "backpack";
-            } else return Notification.error("Not enough inventory space");
-        } else return Notification.error("Not enough inventory space");
-
-        setItem({ component, id, options: item.options ?? null });
-        store.changeInventoryData(currentItem, null, true);
-
-        EventManager.emitServer("inventory", "onMoveItem", {
-            item: item,
-            source: { component: currentItem.component, slot: `${currentItem.id}` },
-            target: { component: component, slot: `${id}`, item: null }
-        });
-    }, [currentItem, setItem, store]);
-};
diff --git a/frontend/src/pages/hud/Inventory/components/Clothes/Clothes.tsx b/frontend/src/pages/hud/Inventory/components/Clothes/Clothes.tsx
deleted file mode 100644
index 7076aa5988fa89ced2b5dc3e003cc5d842ee11af..0000000000000000000000000000000000000000
--- a/frontend/src/pages/hud/Inventory/components/Clothes/Clothes.tsx
+++ /dev/null
@@ -1,106 +0,0 @@
-import React, { FC, useCallback } from "react";
-import { observer } from "mobx-react-lite";
-import { entries } from "mobx";
-import cn from "classnames";
-
-import error from "assets/images/error.svg";
-
-import { ICurrentItem, IDropCell, ITargetCell } from "../../Interfaces";
-
-import style from "./clothes.module.scss";
-import { inventoryStore } from "store/Inventory.store";
-
-interface IClothesProps {
-    store: typeof inventoryStore;
-    currentItem: ICurrentItem;
-    setItem: (item: ICurrentItem) => void;
-    setTargetCell: (target: ITargetCell) => void;
-    setDropCell: (data: IDropCell) => void;
-    isCellDragged: boolean;
-    handleMouseDown: (data: IDropCell) => void;
-    handleContextMenu: (_targetCell: IDropCell, e: React.MouseEvent<HTMLDivElement, MouseEvent>) => void;
-}
-
-const Clothes: FC<IClothesProps> = ({ store, currentItem, setItem, setTargetCell, setDropCell, isCellDragged, handleMouseDown, handleContextMenu }) => {
-    const setSource = useCallback((img: string) => {
-        try {
-            return new URL(`../../../../../assets/images/hud/inventory/items/${img}`, import.meta.url).href;
-        } catch (err) {
-            return error;
-        }
-    }, []);
-
-    const getEmptyClothesSlotImage = (idx: number) => {
-        const items: { [key: number]: string } = {
-            0: "hat",
-            1: "mask",
-            2: "glasses",
-            3: "earRings",
-            4: "chain",
-            5: "tShirt",
-            6: "top",
-            7: "backpack",
-            8: "wallet",
-            9: "armour",
-            10: "watch",
-            11: "gloves",
-            12: "pants",
-            13: "shoes"
-        };
-
-        try {
-            return new URL(`../../../../../assets/images/hud/inventory/items/${items[idx]}.svg`, import.meta.url).href;
-        } catch (err) {
-            return error;
-        }
-    };
-
-    return (
-        <div className={style.inventoryclothes}>
-            {entries(store.clothes).map(([key, el]) => {
-                return (
-                    <div key={key} className={style.slot}>
-                        <div
-                            style={{ "--color": store.getItemQuality(el) } as React.CSSProperties}
-                            className={cn(style.content, currentItem.component === "clothes" && currentItem.id && currentItem.id === parseInt(key) ? style.active : null)}
-                            onClick={() => {
-                                if (el?.isPlaced) setItem({ component: "clothes", id: parseInt(key), options: el.options ?? [] });
-                            }}
-                            onMouseDown={(e) => {
-                                const timeout = setTimeout(() => {
-                                    if (el && el.isPlaced && e.button === 0) {
-                                        handleMouseDown({ component: "clothes", id: parseInt(key) });
-                                        setTargetCell({ component: "clothes", id: parseInt(key) });
-                                        setDropCell({ component: "clothes", id: parseInt(key) });
-                                    }
-                                }, 100);
-
-                                document.body.onmouseup = () => {
-                                    clearTimeout(timeout);
-                                    document.body.onmouseup = null;
-                                };
-                            }}
-                            onContextMenu={(e) => {
-                                e.preventDefault();
-                                if (el && el.isPlaced) {
-                                    handleContextMenu({ component: "clothes", id: parseInt(key) }, e);
-                                }
-                            }}
-                            onMouseEnter={() => isCellDragged && setDropCell({ component: "clothes", id: parseInt(key) })}
-                            onMouseLeave={() => setDropCell({ component: null, id: null })}
-                        >
-                            <img
-                                className={style.icon}
-                                src={el === null ? getEmptyClothesSlotImage(parseInt(key)) : setSource(`${el.image}`)}
-                                alt="#"
-                                style={el?.isPlaced ? { opacity: 1, filter: `drop-shadow(0 0 0.4629629629629629vh ${store.getItemQuality(el)})` } : { opacity: 0.3, filter: "none" }}
-                            />
-                        </div>
-                    </div>
-                );
-            })}
-        </div>
-    );
-};
-
-export default observer(Clothes);
diff --git a/frontend/src/pages/hud/Inventory/components/Clothes/clothes.module.scss b/frontend/src/pages/hud/Inventory/components/Clothes/clothes.module.scss
deleted file mode 100644
index f07420f3ba9088593a2f223c3f16285a1c5ae77f..0000000000000000000000000000000000000000
--- a/frontend/src/pages/hud/Inventory/components/Clothes/clothes.module.scss
+++ /dev/null
@@ -1,46 +0,0 @@
-.inventoryclothes {
-	position: absolute;
-	top: 15vh;
-	display: grid;
-	grid-template-columns: repeat(2, 0fr);
-	grid-template-rows: repeat(7, 0fr);
-	justify-content: space-between;
-
-	width: 40vh;
-
-	.active {
-		border: 0.18518518518518517vh solid #ffffff !important;
-	}
-
-	.slot {
-		display: flex;
-		align-items: center;
-		margin-bottom: 1.3888888888888888vh;
-
-
-		.content {
-			width: 4.82962962962963vh;
-			height: 4.82962962962963vh;
-			display: flex;
-			align-items: center;
-			justify-content: center;
-			border-radius: 4vh;
-
-			background-color: #00000057;
-
-			border: .2vh solid var(--color);
-			box-shadow: 0 0 10px var(--color);
-
-			.icon {
-				height: 80%;
-				width: 80%;
-
-				pointer-events: none;
-			}
-		}
-	}
-
-	@media screen and (width: 2560px) and (height: 1600px) {
-		width: 25vh;
-	}
-}
\ No newline at end of file
diff --git a/frontend/src/pages/hud/Inventory/components/ConfirmDrop/ConfirmDrop.tsx b/frontend/src/pages/hud/Inventory/components/ConfirmDrop/ConfirmDrop.tsx
deleted file mode 100644
index 24a5e53d98d500b5d448003db86f79873ed73880..0000000000000000000000000000000000000000
--- a/frontend/src/pages/hud/Inventory/components/ConfirmDrop/ConfirmDrop.tsx
+++ /dev/null
@@ -1,115 +0,0 @@
-import error from "assets/images/error.svg";
-
-import EventManager from "utils/EventManager.util";
-import { FC, useCallback, useEffect, useRef } from "react";
-
-import style from "./confirmdrop.module.scss";
-import { CenterComponent } from "../../Interfaces";
-import { inventoryStore } from "store/Inventory.store";
-
-interface IConfirmItemDropProps {
-    store: typeof inventoryStore;
-    setMiddleComponent: (page: CenterComponent) => void;
-    handleDrop: (isAccepted?: boolean) => void;
-    itemInformation: any;
-}
-
-const ConfirmItemDrop: FC<IConfirmItemDropProps> = ({ store, setMiddleComponent, handleDrop, itemInformation }) => {
-    const screen = useRef<HTMLDivElement>(null);
-
-    const setSource = useCallback((img: string) => {
-        try {
-            return new URL(`../../../../../assets/images/hud/inventory/items/${img}`, import.meta.url).href;
-        } catch (err) {
-            return error;
-        }
-    }, []);
-
-    useEffect(() => {
-        const timeout = setTimeout(() => {
-            if (screen.current) screen.current.style.opacity = "1";
-        }, 200);
-
-        return () => clearTimeout(timeout);
-    }, []);
-
-    return (
-        <div className={style.confirmitemdrop} ref={screen}>
-            <div className={style.content}>
-                <div className={style.render}>
-                    <img
-                        className={style.image}
-                        src={setSource(`${itemInformation.image}`)}
-                        alt="#"
-                        style={{ filter: `drop-shadow(0 0 1.3888888888888888vh ${store.getItemQuality(itemInformation)})` }}
-                    />
-                    <div className={style.name}>{itemInformation.name}</div>
-                    <div className={style.quality} style={{ textShadow: `0 0 0.4629629629629629vh ${store.getItemQuality(itemInformation)}` }}>
-                        LEVEL {itemInformation.quality + 1}
-                    </div>
-                </div>
-                <div className={style.title}>
-                    Are you sure you want to delete <br />
-                    this item?
-                </div>
-                <div className={style.choice}>
-                    <div className={style.confirm} onClick={() => handleDrop(true)}>
-                        <div className={style.top}>
-                            <div className={style.title}>YES</div>
-                            <svg className={style.trash} width="71.708" height="22.437" viewBox="0 0 71.708 22.437">
-                                <defs>
-                                    <filter id="id_trashTopFilter" x="0" y="0" width="71.708" height="22.437" filterUnits="userSpaceOnUse">
-                                        {
-                                            // @ts-ignore
-                                            <feOffset dy="1" input="SourceAlpha" />
-                                        }
-
-                                        <feGaussianBlur stdDeviation="1.5" result="blur" />
-                                        <feFlood floodOpacity="0.749" />
-                                        <feComposite operator="in" in2="blur" />
-                                        <feComposite in="SourceGraphic" />
-                                    </filter>
-                                </defs>
-                                <g transform="matrix(1, 0, 0, 1, 0, 0)" filter="url(#id_trashTopFilter)">
-                                    <path d="M54.531,8.979,50.052,4.5h-22.4L23.177,8.979H7.5v8.958H70.208V8.979Z" transform="translate(-3 -1)" className={style.trash} fill="#fff" />
-                                </g>
-                            </svg>
-                        </div>
-                        <svg className={style.bottom} width="62.75" height="71.708" viewBox="0 0 62.75 71.708">
-                            <defs>
-                                <filter id="id_trashBottomFilter" x="0" y="0" width="62.75" height="71.708" filterUnits="userSpaceOnUse">
-                                    {
-                                        // @ts-ignore
-                                        <feOffset dy="1" input="SourceAlpha" />
-                                    }
-                                    <feGaussianBlur stdDeviation="1.5" result="blur" />
-                                    <feFlood floodOpacity="0.749" />
-                                    <feComposite operator="in" in2="blur" />
-                                    <feComposite in="SourceGraphic" />
-                                </filter>
-                            </defs>
-                            <g transform="matrix(1, 0, 0, 1, 0, 0)" filter="url(#id_trashBottomFilter)">
-                                <path
-                                    d="M9.45,66.048a8.985,8.985,0,0,0,8.958,8.958H54.241A8.985,8.985,0,0,0,63.2,66.048V12.3H9.45ZM20.468,34.156l6.316-6.316,9.541,9.5,9.5-9.5,6.316,6.316-9.5,9.5,9.5,9.5L45.82,59.463l-9.5-9.5-9.5,9.5-6.316-6.316,9.5-9.5Z"
-                                    transform="translate(-4.95 -8.8)"
-                                    fill="#fff"
-                                />
-                            </g>
-                        </svg>
-                    </div>
-                    <div
-                        className={style.decline}
-                        onClick={() => {
-                            setMiddleComponent("dropZone");
-                            EventManager.emitServer("inventory", "onCancelItemDrop");
-                        }}
-                    >
-                        NO
-                    </div>
-                </div>
-            </div>
-        </div>
-    );
-};
-
-export default ConfirmItemDrop;
diff --git a/frontend/src/pages/hud/Inventory/components/ConfirmDrop/confirmdrop.module.scss b/frontend/src/pages/hud/Inventory/components/ConfirmDrop/confirmdrop.module.scss
deleted file mode 100644
index a09493b9f3cb7659fc23b377f2e5f4b6b735ccce..0000000000000000000000000000000000000000
--- a/frontend/src/pages/hud/Inventory/components/ConfirmDrop/confirmdrop.module.scss
+++ /dev/null
@@ -1,121 +0,0 @@
-@import '../../../../../styles/vars';
-
-.confirmitemdrop {
-	position: absolute;
-	top: 50%;
-	left: 50%;
-	transform: translate(-50%, -50%);
-
-	width: 13.888888888888888vh;
-	height: 100%;
-
-	background: linear-gradient(to top, red, rgb(0 0 0 / 38%) 60%, rgba(195, 115, 243, 0));
-
-	text-align: center;
-
-	opacity: 0;
-
-	transition: opacity .2s;
-
-	.content {
-		position: absolute;
-		left: 50%;
-		bottom: 0.9259259259259258vh;
-		transform: translateX(-50%);
-
-		width: 27.777777777777775vh;
-
-		font-size: 1.3888888888888888vh;
-
-		.render {
-			margin-bottom: 1.8518518518518516vh;
-			font-family: Arial, Helvetica, sans-serif;
-			text-shadow: 0 0.27777777777777773vh 0.27777777777777773vh rgba(0, 0, 0, 0.53);
-
-			.image {
-				width: 30%;
-				margin-bottom: 1.3888888888888888vh;
-			}
-
-			.name {
-				font-family: $global-font;
-				font-size: 2vh;
-				margin-bottom: 1.3888888888888888vh;
-			}
-		}
-
-		.title {
-			text-transform: uppercase;
-			text-shadow: 0 0.27777777777777773vh 0.27777777777777773vh rgba(0, 0, 0, 0.53);
-			font-family: Arial, Helvetica, sans-serif;
-		}
-
-		.choice {
-			position: relative;
-
-			width: 100%;
-			height: 18.51851851851852vh;
-			display: flex;
-			flex-direction: column;
-			align-items: center;
-			justify-content: center;
-
-			text-transform: uppercase;
-			font-family: Arial, Helvetica, sans-serif;
-
-			.confirm {
-				position: absolute;
-
-				text-shadow: 0 0.27777777777777773vh 0.27777777777777773vh rgba(0, 0, 0, 0.53);
-
-				//cursor: url("../../../../../assets/images/cursorPointer.svg"), pointer;
-
-				&:hover .top {
-					transform: rotate(-15deg) translateX(-10%);
-
-					.title {
-						transform: translateY(-50%);
-						opacity: 0;
-					}
-				}
-
-				&:hover .trash {
-					fill: red;
-
-				}
-
-				&:hover .bottom {
-					transform: translateY(10%);
-				}
-
-				.top {
-					transform-origin: 0 50%;
-
-					transition: transform .2s;
-
-					.title {
-						margin-bottom: 0.4629629629629629vh;
-
-						transition: transform .2s, opacity .2s;
-					}
-
-					.trash {
-						margin-bottom: -0.4629629629629629vh;
-					}
-				}
-
-				.bottom {
-					transition: transform .2s;
-				}
-			}
-
-			.decline {
-				position: absolute;
-				bottom: 0;
-
-				border-bottom: 0.18518518518518517vh solid #ffffff;
-				filter: drop-shadow(0 0.18518518518518517vh 0.18518518518518517vh rgba(0, 0, 0, 0.53));
-			}
-		}
-	}
-}
\ No newline at end of file
diff --git a/frontend/src/pages/hud/Inventory/components/DragItem/DragItem.tsx b/frontend/src/pages/hud/Inventory/components/DragItem/DragItem.tsx
deleted file mode 100644
index d010f99d32c3379f669df0f1f714d4944cbdaa0b..0000000000000000000000000000000000000000
--- a/frontend/src/pages/hud/Inventory/components/DragItem/DragItem.tsx
+++ /dev/null
@@ -1,76 +0,0 @@
-import { FC, useCallback, useMemo, RefObject } from "react";
-import { observer } from "mobx-react-lite";
-import error from "assets/images/error.svg";
-
-import { ITargetCell } from "../../Interfaces";
-
-import style from "./dragitem.module.scss";
-import { inventoryStore } from "store/Inventory.store";
-
-interface IDragItemProps {
-    viewingBackpack: string | null;
-    mouseData: RefObject<HTMLDivElement>;
-    store: typeof inventoryStore;
-    targetCell: ITargetCell;
-}
-const DragItem: FC<IDragItemProps> = ({ viewingBackpack, mouseData, store, targetCell }) => {
-    const setImageSource = useCallback((img: string) => {
-        try {
-            return new URL(`../../../../../assets/images/hud/inventory/items/${img}`, import.meta.url).href;
-        } catch (err) {
-            return error;
-        }
-    }, []);
-
-    const getItemFromFastSlots = useCallback(
-        (id: number) => {
-            const fastSlot = store.quickUse[id];
-            if (!fastSlot || !fastSlot.component || fastSlot.id === null) return null;
-            return store.inventory[fastSlot.component][fastSlot.id];
-        },
-        [store.inventory, store.quickUse]
-    );
-
-    const getItemFromStore = useCallback(
-        (component: string | null, id: number | null) => {
-            if (!component || id === null) return null;
-            if (component === "backpack") {
-                if (!viewingBackpack) return null;
-                return store.getBackpackItemData(viewingBackpack, id);
-            } else if (component === "groundItems") {
-                return store.sideInventory[id];
-            }
-            return store.inventory[component][id];
-        },
-        [store.inventory, store.sideInventory, viewingBackpack]
-    );
-
-    const item = useMemo(() => {
-        if (!targetCell || !targetCell.component || targetCell.id === null) return null;
-
-        if (targetCell.component === "quickUse") {
-            return getItemFromFastSlots(targetCell.id);
-        }
-
-        if (targetCell.component === "clothes") {
-            return store.clothes[targetCell.id];
-        }
-
-        return getItemFromStore(targetCell.component, targetCell.id);
-    }, [targetCell, getItemFromStore, getItemFromFastSlots, store.clothes]);
-
-    const itemQualityStyle = item && item.quality >= 0 && item.quality <= 4 ? `linear-gradient(to top, ${store.getItemQuality(item)}, #C373F360 60%, #C373F300)` : "none";
-    const itemClassNames = style.itemdrag;
-    const displayStyle = targetCell.component ? { display: "flex" } : { display: "none" };
-
-    return (
-        <div className={itemClassNames} ref={mouseData} style={displayStyle}>
-            <div className={style.quality} style={{ background: itemQualityStyle }} />
-            {item?.image && <img className={style.image} src={setImageSource(item.image)} alt="#" />}
-            {item && item.count > 1 && <div className={style.count}>{item.count}</div>}
-            {item?.gender !== undefined && item?.gender !== null && <div className={style.gender}>{item.gender === 0 ? "M" : "F"}</div>}
-        </div>
-    );
-};
-
-export default observer(DragItem);
diff --git a/frontend/src/pages/hud/Inventory/components/DragItem/dragitem.module.scss b/frontend/src/pages/hud/Inventory/components/DragItem/dragitem.module.scss
deleted file mode 100644
index f31b2c5ddc8256dba5c163f40b7b2762ddf69cc3..0000000000000000000000000000000000000000
--- a/frontend/src/pages/hud/Inventory/components/DragItem/dragitem.module.scss
+++ /dev/null
@@ -1,55 +0,0 @@
-.itemdrag {
-	position: absolute;
-	transform: translate(-50%, -50%);
-
-	width: 4.62962962962963vh;
-	height: 4.62962962962963vh;
-	margin-bottom: 1.3888888888888888vh;
-	margin-right: 1.3888888888888888vh;
-	display: flex;
-	align-items: center;
-	justify-content: center;
-
-	background-color: #00000057;
-	border-radius: 1vh;
-	text-shadow: 0 0.18518518518518517vh 0.18518518518518517vh rgba(0, 0, 0, 0.53);
-
-	border: 0.18518518518518517vh solid #00000000;
-
-	pointer-events: none;
-
-
-
-	.image {
-		position: absolute;
-		width: 60%;
-		height: 60%;
-	}
-
-	.quality {
-		position: absolute;
-		left: 50%;
-		top: 0;
-		transform: translateX(-50%);
-		border-radius: 0.5vh;
-
-		width: 100%;
-		height: 100%;
-	}
-
-	.count {
-		position: absolute;
-		top: 0;
-		left: 50%;
-		transform: translate(-50%, -50%);
-		font-family: 'Beast Duh';
-	}
-
-	.gender {
-		position: absolute;
-		right: 0;
-		bottom: 0;
-		font-family: 'Beast Duh';
-		text-shadow: 0vh 0vh 1vh black;
-	}
-}
\ No newline at end of file
diff --git a/frontend/src/pages/hud/Inventory/components/DropZone/CenterItems.tsx b/frontend/src/pages/hud/Inventory/components/DropZone/CenterItems.tsx
deleted file mode 100644
index 08b6ba6302953ebd79d24b362d5922d4ad3f4a01..0000000000000000000000000000000000000000
--- a/frontend/src/pages/hud/Inventory/components/DropZone/CenterItems.tsx
+++ /dev/null
@@ -1,49 +0,0 @@
-import { FC, useEffect, useRef } from "react";
-import TradeZone from "./components/Giveaway";
-import PutOnZone from "./components/PutOnZone";
-
-import { ICurrentItem, IDropCell, ITargetCell } from "../../Interfaces";
-import Clothes from "../Clothes/Clothes";
-import { inventoryStore } from "store/Inventory.store";
-
-import style from "./centeritems.module.scss";
-interface ICenterProps {
-    store: typeof inventoryStore;
-    currentItem: ICurrentItem;
-    setItem: (item: ICurrentItem) => void;
-    setTargetCell: (target: ITargetCell) => void;
-    setDropCell: (dropcell: IDropCell) => void;
-    isCellDragged: boolean;
-    handleMouseDown: (targetCell: IDropCell) => void;
-    handleContextMenu: (_targetCell: IDropCell, e: React.MouseEvent<HTMLDivElement, MouseEvent>) => void;
-}
-
-const CenterItems: FC<ICenterProps> = ({ store, currentItem, setItem, setTargetCell, setDropCell, isCellDragged, handleMouseDown, handleContextMenu }) => {
-    const screen = useRef<HTMLDivElement>(null);
-    useEffect(() => {
-        const timeout = setTimeout(() => {
-            if (screen.current) screen.current.style.opacity = "1";
-        }, 200);
-        return () => clearTimeout(timeout);
-    }, []);
-
-    return (
-        <div className={style.centerzone} ref={screen}>
-            <Clothes
-                store={store}
-                currentItem={currentItem}
-                setItem={setItem}
-                setTargetCell={setTargetCell}
-                setDropCell={setDropCell}
-                isCellDragged={isCellDragged}
-                handleMouseDown={handleMouseDown}
-                handleContextMenu={handleContextMenu}
-            />
-
-            {isCellDragged && <TradeZone setDropCell={setDropCell} isCellDragged={isCellDragged} />}
-            {isCellDragged && <PutOnZone setDropCell={setDropCell} isCellDragged={isCellDragged} />}
-        </div>
-    );
-};
-
-export default CenterItems;
diff --git a/frontend/src/pages/hud/Inventory/components/DropZone/centeritems.module.scss b/frontend/src/pages/hud/Inventory/components/DropZone/centeritems.module.scss
deleted file mode 100644
index 8dbfe0fff536625df9345b79681827e3d00f023c..0000000000000000000000000000000000000000
--- a/frontend/src/pages/hud/Inventory/components/DropZone/centeritems.module.scss
+++ /dev/null
@@ -1,31 +0,0 @@
-@import '../../../../../styles/vars';
-
-.centerzone {
-	position: absolute;
-	top: 50%;
-	left: 50%;
-	transform: translate(-50%, -50%);
-
-
-	height: 100%;
-	width: 26.85185185185185vh;
-
-	padding: 0.9259259259259258vh 0;
-
-	display: flex;
-	flex-direction: column;
-	align-items: center;
-	justify-content: space-between;
-
-	text-align: center;
-	text-transform: uppercase;
-	text-shadow: 0 0.18518518518518517vh 0.18518518518518517vh rgba(0, 0, 0, 0.53);
-	font-family: Arial, Helvetica, sans-serif;
-	letter-spacing: 0.09259259259259259vh;
-
-	opacity: 0;
-
-	transition: opacity .2s;
-
-
-}
\ No newline at end of file
diff --git a/frontend/src/pages/hud/Inventory/components/DropZone/components/Giveaway.tsx b/frontend/src/pages/hud/Inventory/components/DropZone/components/Giveaway.tsx
deleted file mode 100644
index 78bc0c795ec5d9624d683b212e986ca07198fe0a..0000000000000000000000000000000000000000
--- a/frontend/src/pages/hud/Inventory/components/DropZone/components/Giveaway.tsx
+++ /dev/null
@@ -1,28 +0,0 @@
-import { FC, useEffect, useState } from "react";
-import cn from "classnames";
-import tradeZoneIcon from "assets/images/hud/inventory/icons/giveaway.svg";
-import { IDropCell } from "pages/hud/Inventory/Interfaces";
-import style from "./giveaway.module.scss";
-const TradeZone: FC<{ setDropCell: (data: IDropCell) => void; isCellDragged: boolean }> = ({ setDropCell, isCellDragged }) => {
-    const [hover, setHover] = useState(false);
-
-    useEffect(() => {
-        if (hover && !isCellDragged) setHover(false);
-    }, [hover, isCellDragged]);
-
-    return (
-        <div
-            className={cn(style.giveaway, hover && style.hide)}
-            onMouseEnter={() => isCellDragged && (setDropCell({ component: "trade", id: null }), setHover(true))}
-            onMouseLeave={() => {
-                setHover(false);
-                setDropCell({ component: null, id: null });
-            }}
-        >
-            <img className={style.icon} src={tradeZoneIcon} alt="#" />
-            <div className={style.title}>GIVE AWAY</div>
-        </div>
-    );
-};
-
-export default TradeZone;
diff --git a/frontend/src/pages/hud/Inventory/components/DropZone/components/PutOnZone.tsx b/frontend/src/pages/hud/Inventory/components/DropZone/components/PutOnZone.tsx
deleted file mode 100644
index ea1f3e0a9abd286075a87de5daff028494dd5bf6..0000000000000000000000000000000000000000
--- a/frontend/src/pages/hud/Inventory/components/DropZone/components/PutOnZone.tsx
+++ /dev/null
@@ -1,34 +0,0 @@
-import { FC, useEffect, useState } from "react";
-import cn from "classnames";
-
-import putOnZoneIcon from "assets/images/hud/inventory/icons/draghere.svg";
-
-import style from "./puton.module.scss";
-
-const PutOnZone: FC<{ setDropCell: any; isCellDragged: boolean }> = ({ setDropCell, isCellDragged }) => {
-    const [hover, setHover] = useState(false);
-
-    useEffect(() => {
-        if (hover && !isCellDragged) setHover(false);
-    }, [hover, isCellDragged]);
-
-    return (
-        <div
-            className={cn(style.puton, hover && style.hover)}
-            onMouseEnter={() => isCellDragged && (setHover(true), setDropCell({ component: "putOn", id: null }))}
-            onMouseLeave={() => {
-                setHover(false);
-                setDropCell({ component: null, id: null });
-            }}
-        >
-            <img className={style.icon} src={putOnZoneIcon} alt="#" />
-            <div className={style.title}>
-                Drag and drop an item here
-                <br />
-                to put it on
-            </div>
-        </div>
-    );
-};
-
-export default PutOnZone;
diff --git a/frontend/src/pages/hud/Inventory/components/DropZone/components/giveaway.module.scss b/frontend/src/pages/hud/Inventory/components/DropZone/components/giveaway.module.scss
deleted file mode 100644
index 2bbf7aa0b6312154172d6013ce530d684ef859c1..0000000000000000000000000000000000000000
--- a/frontend/src/pages/hud/Inventory/components/DropZone/components/giveaway.module.scss
+++ /dev/null
@@ -1,97 +0,0 @@
-@import '../../../../../../styles/vars';
-
-.giveaway {
-    position: relative;
-
-    width: 100%;
-    height: 15%;
-    padding-bottom: 5%;
-
-    display: flex;
-    flex-direction: column;
-    align-items: center;
-    justify-content: center;
-
-    border: 0.18518518518518517vh dashed #ffffff;
-    animation: slide-bottom 0.3s ease-in forwards;
-
-    @keyframes slide-bottom {
-        0% {
-            transform: translateY(-100px);
-            opacity: 0;
-        }
-
-        50% {
-            opacity: 0;
-        }
-
-        100% {
-            transform: translateY(0);
-            opacity: 1;
-
-        }
-    }
-
-    &::before {
-        content: '';
-        position: absolute;
-        top: 0;
-        left: 0;
-
-        width: 100%;
-        height: 100%;
-
-        background: #00000040;
-
-        transition: all 0.3s;
-        z-index: -1;
-    }
-
-    &::after {
-        content: '';
-        position: absolute;
-        top: 0;
-        left: 0;
-
-        width: 100%;
-        height: 100%;
-
-        background: linear-gradient(0deg, rgba(0, 217, 255, 0.397), transparent);
-        transition: all 0.3s;
-
-        opacity: 0;
-        z-index: -1;
-    }
-
-    .title {
-        transition: all 0.3s;
-    }
-
-    .icon {
-        margin-bottom: 0.9259259259259258vh;
-        filter: drop-shadow(0 0.18518518518518517vh 0.18518518518518517vh rgba(0, 0, 0, 0.53));
-        transition: all 0.3s;
-    }
-}
-
-
-.hide {
-    border: 0.18518518518518517vh dashed transparent;
-}
-
-.hide::before {
-    opacity: 0;
-}
-
-.hide::after {
-    opacity: 1;
-}
-
-.hide .title {
-    transform: translate(0vh, 3.62963vh);
-    opacity: 0;
-}
-
-.hide .icon {
-    transform: translate(0vh, 1.4814814814814814vh);
-}
\ No newline at end of file
diff --git a/frontend/src/pages/hud/Inventory/components/DropZone/components/puton.module.scss b/frontend/src/pages/hud/Inventory/components/DropZone/components/puton.module.scss
deleted file mode 100644
index 08c52cc71f52e99f3bb48aacf6348abe5634d9e6..0000000000000000000000000000000000000000
--- a/frontend/src/pages/hud/Inventory/components/DropZone/components/puton.module.scss
+++ /dev/null
@@ -1,59 +0,0 @@
-@import '../../../../../../styles/vars';
-
-.puton {
-    position: relative;
-    width: 100%;
-    height: 85%;
-
-    display: flex;
-    flex-direction: column;
-    align-items: center;
-    justify-content: center;
-
-    text-transform: uppercase;
-    text-shadow: 0 0.18518518518518517vh 0.18518518518518517vh rgba(0, 0, 0, 0.53);
-    font-family: Arial, Helvetica, sans-serif;
-    letter-spacing: 0.09259259259259259vh;
-
-    transition: all 0.3s;
-    animation: slide-top 0.3s ease-in forwards;
-
-    @keyframes slide-top {
-        0% {
-            transform: translateY(300px);
-            opacity: 0;
-        }
-
-        50% {
-            opacity: 1;
-        }
-
-        100% {
-            transform: translateY(10px);
-        }
-    }
-
-    .icon {
-        margin-bottom: 0.9259259259259258vh;
-        filter: drop-shadow(0 0.18518518518518517vh 0.18518518518518517vh rgba(0, 0, 0, 0.53));
-        transition: all 0.3s;
-    }
-
-    .title {
-        transition: all 0.3s;
-    }
-}
-
-.hover::before {
-    width: 85.6%;
-    height: 85.2%;
-    border: 0.18518518518518517vh dashed transparent;
-}
-
-.hover .title {
-    opacity: 0;
-}
-
-.hover .icon {
-    transform: translate(0vh, 1.8518518518518519vh);
-}
\ No newline at end of file
diff --git a/frontend/src/pages/hud/Inventory/components/Main/Main.tsx b/frontend/src/pages/hud/Inventory/components/Main/Main.tsx
deleted file mode 100644
index 7934e1e6eb0a8a3e20e79551f6d05b75c4f2b2a9..0000000000000000000000000000000000000000
--- a/frontend/src/pages/hud/Inventory/components/Main/Main.tsx
+++ /dev/null
@@ -1,113 +0,0 @@
-import { FC, useCallback, useMemo } from "react";
-import { observer } from "mobx-react-lite";
-import cn from "classnames";
-
-import Pockets from "./components/Pockets";
-import FastSlots from "./components/Quickuse";
-
-import style from "./main.module.scss";
-
-import { IItemImage, ICurrentItem, ITargetCell, IDropCell } from "../../Interfaces";
-
-import DeleteItem from "./components/DeleteItem";
-import errorIcon from "assets/images/error.svg";
-import { inventoryStore } from "store/Inventory.store";
-
-interface IMainProps {
-    store: typeof inventoryStore;
-    itemInformation: IItemImage | null;
-    currentItem: ICurrentItem;
-    setItem: (item: ICurrentItem) => void;
-    setTargetCell: (target: ITargetCell) => void;
-    setDropCell: (dropcell: IDropCell) => void;
-    isCellDragged: boolean;
-    handleMouseDown: (targetCell: IDropCell) => void;
-    handleContextMenu: (_targetCell: IDropCell, e: React.MouseEvent<HTMLDivElement, MouseEvent>) => void;
-    setShowModal: (enable: boolean) => void;
-    setSource: (img: string) => any;
-}
-
-const Main: FC<IMainProps> = ({ store, itemInformation, currentItem, setItem, setTargetCell, setDropCell, isCellDragged, handleMouseDown, handleContextMenu, setShowModal, setSource }) => {
-    const renderQuality = useMemo(() => {
-        switch (itemInformation?.quality) {
-            case 0:
-                return "#B7C2F8";
-            case 1:
-                return "#8A9EFF";
-            case 2:
-                return "#C970FF";
-            case 3:
-                return "#FF8888";
-            case 4:
-                return "#FFD139";
-            default:
-                return "#FFFFFF";
-        }
-    }, [itemInformation?.quality]);
-
-    const getRenderImage = useCallback(() => {
-        try {
-            return new URL(`../../../../../assets/images/hud/inventory/items/${itemInformation?.image}`, import.meta.url).href;
-        } catch (err) {
-            return errorIcon;
-        }
-    }, [itemInformation?.image]);
-
-    return (
-        <div className={style.main}>
-            <div className={style.title}>
-                INVENTORY
-                <div className={cn(style.weight, (store.currentWeight * 100) / store.maxInventoryWeight > 90 && style.red)}>
-                    {store.currentWeight}/<span>{store.maxInventoryWeight}kg.</span>
-                </div>
-            </div>
-            {itemInformation && (
-                <div className={style.iteminfo} style={itemInformation.image ? { opacity: 1 } : { opacity: 0 }}>
-                    <img
-                        className={style.image}
-                        src={itemInformation.render !== null && itemInformation.render !== "" ? `${getRenderImage()} ` : `${setSource(`${itemInformation.image}`)} `}
-                        alt="#"
-                        style={{ filter: `drop-shadow( 0 0 1.3888888888888888vh ${renderQuality} )` }}
-                    />
-                    <div className={style.info}>
-                        <div className={style.name}>{itemInformation.name}</div>
-                        {itemInformation.quality && (
-                            <div className={style.level} style={{ textShadow: `0 0 0.4629629629629629vh ${renderQuality} ` }}>
-                                level {itemInformation.quality + 1}
-                            </div>
-                        )}
-                        <div className={style.description}>{itemInformation.description}</div>
-                    </div>
-                </div>
-            )}
-
-            <Pockets
-                store={store}
-                currentItem={currentItem}
-                setItem={setItem}
-                setTargetCell={setTargetCell}
-                setDropCell={setDropCell}
-                isCellDragged={isCellDragged}
-                handleMouseDown={handleMouseDown}
-                handleContextMenu={handleContextMenu}
-                setShowModal={setShowModal}
-                setSource={setSource}
-            />
-
-            <FastSlots
-                store={store}
-                currentItem={currentItem}
-                setItem={setItem}
-                setTargetCell={setTargetCell}
-                setDropCell={setDropCell}
-                isCellDragged={isCellDragged}
-                handleMouseDown={handleMouseDown}
-                handleContextMenu={handleContextMenu}
-                setSource={setSource}
-            />
-            <DeleteItem setDropCell={setDropCell} isCellDragged={isCellDragged} />
-        </div>
-    );
-};
-
-export default observer(Main);
diff --git a/frontend/src/pages/hud/Inventory/components/Main/components/DeleteItem.tsx b/frontend/src/pages/hud/Inventory/components/Main/components/DeleteItem.tsx
deleted file mode 100644
index 86dfbce6e8e30cd1d084e20ce403f5d2816784f2..0000000000000000000000000000000000000000
--- a/frontend/src/pages/hud/Inventory/components/Main/components/DeleteItem.tsx
+++ /dev/null
@@ -1,30 +0,0 @@
-import { FC, useState, useEffect } from "react";
-import cn from "classnames";
-import removeZoneIcon from "assets/images/hud/inventory/icons/removeicon.svg";
-import { IDropCell } from "pages/hud/Inventory/Interfaces";
-
-import style from "./deleteitem.module.scss";
-
-const DeleteItem: FC<{ setDropCell: (data: IDropCell) => void; isCellDragged: boolean }> = ({ isCellDragged, setDropCell }) => {
-    const [hover, setHover] = useState(false);
-
-    useEffect(() => {
-        if (hover && !isCellDragged) setHover(false);
-    }, [hover, isCellDragged]);
-
-    return (
-        <div
-            className={cn(style.deletezone, hover && style.hide)}
-            onMouseEnter={() => isCellDragged && (setDropCell({ component: "remove", id: null }), setHover(true))}
-            onMouseLeave={() => {
-                setHover(false);
-                setDropCell({ component: null, id: null });
-            }}
-        >
-            <div className={style.title}>DRAG AN ITEM HERE TO DROP</div>
-            <img className={style.icon} src={removeZoneIcon} alt="#" />
-        </div>
-    );
-};
-
-export default DeleteItem;
diff --git a/frontend/src/pages/hud/Inventory/components/Main/components/Pockets.tsx b/frontend/src/pages/hud/Inventory/components/Main/components/Pockets.tsx
deleted file mode 100644
index 6eb3cb422c3872a6642ca41e24671f7a113622e7..0000000000000000000000000000000000000000
--- a/frontend/src/pages/hud/Inventory/components/Main/components/Pockets.tsx
+++ /dev/null
@@ -1,92 +0,0 @@
-import { FC } from "react";
-import { observer } from "mobx-react-lite";
-import { entries, values } from "mobx";
-import cn from "classnames";
-
-import { ICurrentItem, IDropCell, ITargetCell } from "pages/hud/Inventory/Interfaces";
-import Notification from "utils/NotifyManager.util";
-
-import { inventoryStore } from "store/Inventory.store";
-import style from "./pockets.module.scss";
-interface IPocketsProps {
-    store: typeof inventoryStore;
-    setItem: (item: ICurrentItem) => void;
-    currentItem: ICurrentItem;
-    isCellDragged: boolean;
-    setDropCell: (data: IDropCell) => void;
-    setTargetCell: (data: ITargetCell) => void;
-    handleMouseDown: (_targetCell: IDropCell) => void;
-    handleContextMenu: (_targetCell: IDropCell, e: React.MouseEvent<HTMLDivElement, MouseEvent>) => void;
-    setShowModal?: (enable: boolean) => void;
-    setSource: (img: string) => any;
-}
-
-const Pockets: FC<IPocketsProps> = ({ store, setItem, currentItem, isCellDragged, setDropCell, setTargetCell, handleMouseDown, handleContextMenu, setSource }) => {
-    return (
-        <div className={style.pockets}>
-            <div className={style.header}>
-                <div className={style.info}>
-                    <div className={style.title}>POCKETS</div>
-                </div>
-            </div>
-            <div className={style.content}>
-                {entries(store.inventory.pockets).map(([key, el]) => {
-                    return (
-                        <div
-                            key={key + el?.hash || key}
-                            onDoubleClick={() => {
-                                Notification.info(`Heyo why u double clicking me?1`);
-                            }}
-                            className={cn(style.cell, currentItem.component === "pockets" && currentItem.id === parseInt(key) ? style.active : null)}
-                            style={
-                                values(store.quickUse).filter((fastslot) => fastslot && fastslot.component === "pockets" && fastslot.id === parseInt(key)).length > 0
-                                    ? { border: "0.18518518518518517vh dashed #B8B8B8" }
-                                    : undefined
-                            }
-                            onClick={() => {
-                                if (el?.type) {
-                                    setItem({ component: "pockets", id: parseInt(key), options: el?.options });
-                                }
-                            }}
-                            onMouseDown={(e) => {
-                                const timeout = setTimeout(() => {
-                                    if (el?.type && e.button === 0) {
-                                        handleMouseDown({ component: "pockets", id: parseInt(key) });
-                                        setTargetCell({ component: "pockets", id: parseInt(key) });
-                                        setDropCell({ component: "pockets", id: parseInt(key) });
-                                    }
-                                }, 100);
-
-                                document.body.onmouseup = () => {
-                                    clearTimeout(timeout);
-                                    document.body.onmouseup = null;
-                                };
-                            }}
-                            onContextMenu={(e) => {
-                                e.preventDefault();
-                                if (el?.type) {
-                                    handleContextMenu({ component: "pockets", id: parseInt(key) }, e);
-                                }
-                            }}
-                            onMouseEnter={() => {
-                                if (isCellDragged) setDropCell({ component: "pockets", id: parseInt(key) });
-                            }}
-                            onMouseLeave={() => setDropCell({ component: null, id: null })}
-                        >
-                            {el?.type && (
-                                <>
-                                    <div className={style.level} style={{ background: `linear-gradient(to top, ${store.getItemQuality(el)}, #C373F360 60%, #C373F300)` }} />
-                                    <img className={style.image} src={setSource(`${el?.image}`)} alt="#" />
-                                    {el?.count > 1 && <div className={style.count}>{el?.count}</div>}
-                                    <div className={style.gender}>{el?.gender !== undefined && el?.gender !== null ? (el?.gender === 0 ? "M" : "F") : null}</div>
-                                </>
-                            )}
-                        </div>
-                    );
-                })}
-            </div>
-        </div>
-    );
-};
-
-export default observer(Pockets);
diff --git a/frontend/src/pages/hud/Inventory/components/Main/components/Quickuse.tsx b/frontend/src/pages/hud/Inventory/components/Main/components/Quickuse.tsx
deleted file mode 100644
index 32fbe40525c9dbea5b4d287fd38ef3e503d1bcd4..0000000000000000000000000000000000000000
--- a/frontend/src/pages/hud/Inventory/components/Main/components/Quickuse.tsx
+++ /dev/null
@@ -1,79 +0,0 @@
-import { FC } from "react";
-import { observer } from "mobx-react-lite";
-import { entries } from "mobx";
-import cn from "classnames";
-
-import { ICurrentItem, IDropCell, ITargetCell } from "pages/hud/Inventory/Interfaces";
-import { inventoryStore } from "store/Inventory.store";
-
-import style from "./quickuse.module.scss";
-interface IFastSlotProps {
-    store: typeof inventoryStore;
-    setItem: (item: ICurrentItem) => void;
-    currentItem: ICurrentItem;
-    isCellDragged: boolean;
-    setDropCell: (data: IDropCell) => void;
-    setTargetCell: (data: ITargetCell) => void;
-    handleMouseDown: (_targetCell: IDropCell) => void;
-    handleContextMenu: (_targetCell: IDropCell, e: React.MouseEvent<HTMLDivElement, MouseEvent>) => void;
-    setSource: (img: string) => any;
-}
-
-const FastSlots: FC<IFastSlotProps> = ({ store, setItem, currentItem, isCellDragged, setDropCell, setTargetCell, handleMouseDown, handleContextMenu, setSource }) => {
-    return (
-        <div className={style.quickuse}>
-            <div className={style.header}>
-                <div className={style.title}>QUICK USE</div>
-            </div>
-            <div className={style.content}>
-                {entries(store.quickUse).map(([key, el]) => {
-                    const itemData = el?.component && el.id !== null ? store.inventory[el.component][el.id] : null;
-
-                    const quality = store.getItemQuality(itemData);
-
-                    return (
-                        <div
-                            key={key + itemData?.hash || key}
-                            className={cn(style.cell, currentItem.component === "quickUse" && currentItem.id === parseInt(key) ? style.active : null)}
-                            onClick={() => {
-                                if (el && el.id >= 0 && el.component) setItem({ component: "quickUse", id: parseInt(key), options: null });
-                            }}
-                            onMouseDown={(e) => {
-                                const timeout = setTimeout(() => {
-                                    if (el !== null && e.button === 0) {
-                                        handleMouseDown({ component: "quickUse", id: parseInt(key) });
-                                        setTargetCell({ component: "quickUse", id: parseInt(key) });
-                                        setDropCell({ component: "quickUse", id: parseInt(key) });
-                                    }
-                                }, 100);
-
-                                document.body.onmouseup = () => {
-                                    clearTimeout(timeout);
-                                    document.body.onmouseup = null;
-                                };
-                            }}
-                            onContextMenu={(e) => {
-                                e.preventDefault();
-                                if (el?.component) {
-                                    handleContextMenu({ component: "quickUse", id: parseInt(key) }, e);
-                                }
-                            }}
-                            onMouseEnter={() => isCellDragged && setDropCell({ component: "quickUse", id: parseInt(key) })}
-                            onMouseLeave={() => setDropCell({ component: null, id: null })}
-                        >
-                            {el && el.id >= 0 && el.component && (
-                                <>
-                                    <div className={style.level} style={{ background: `linear-gradient(to top, ${quality}, #C373F360 60%, #C373F300)` }} />
-                                    <img className={style.image} src={setSource(`${itemData?.image}`)} alt="#" />
-                                </>
-                            )}
-                            <div className={style.id}>{parseInt(key) + 1}</div>
-                        </div>
-                    );
-                })}
-            </div>
-        </div>
-    );
-};
-
-export default observer(FastSlots);
diff --git a/frontend/src/pages/hud/Inventory/components/Main/components/deleteitem.module.scss b/frontend/src/pages/hud/Inventory/components/Main/components/deleteitem.module.scss
deleted file mode 100644
index a714cf7e4c58905b2c8070473c3fcf51e9ddb2ac..0000000000000000000000000000000000000000
--- a/frontend/src/pages/hud/Inventory/components/Main/components/deleteitem.module.scss
+++ /dev/null
@@ -1,82 +0,0 @@
-@import "../../../../../../styles/vars.scss";
-
-.deletezone {
-    position: relative;
-    width: 100%;
-    height: 15%;
-    margin-top: 5%;
-    display: flex;
-    flex-direction: column;
-    align-items: center;
-    justify-content: center;
-    border: 0.18518518518518517vh dashed #ffffff;
-    background: linear-gradient(0deg, rgba(255, 0, 0, 0.397), transparent);
-    text-transform: uppercase;
-    text-shadow: 0 0.18518518518518517vh 0.18518518518518517vh rgba(0, 0, 0, 0.53);
-    font-family: $global-font;
-    letter-spacing: 0.09259259259259259vh;
-
-    &::before {
-        content: '';
-        position: absolute;
-        top: 0;
-        left: 0;
-
-        width: 100%;
-        height: 100%;
-
-        background: #00000040;
-
-        transition: all 0.3s;
-        z-index: -1;
-    }
-
-    &::after {
-        content: '';
-        position: absolute;
-        top: 0;
-        left: 0;
-
-        width: 100%;
-        height: 100%;
-
-        background: linear-gradient(180deg, rgba(255, 38, 38, 0.5) 0%, rgba(128, 89, 89, 0) 100%);
-
-        transition: all 0.3s;
-
-        opacity: 0;
-        z-index: -1;
-    }
-
-    .title {
-        transition: all 0.3s;
-    }
-
-    .icon {
-        margin-top: 0.9259259259259258vh;
-        filter: drop-shadow(0 0.18518518518518517vh 0.18518518518518517vh rgba(0, 0, 0, 0.53));
-        transition: all 0.3s;
-    }
-}
-
-
-.hide {
-    border: 0.18518518518518517vh dashed transparent;
-}
-
-.hide::before {
-    opacity: 0;
-}
-
-.hide::after {
-    opacity: 1;
-}
-
-.hide .title {
-    transform: translate(0vh, -4.62962962962963vh);
-    opacity: 0;
-}
-
-.hide .icon {
-    transform: translate(0vh, -1.8518518518518519vh);
-}
\ No newline at end of file
diff --git a/frontend/src/pages/hud/Inventory/components/Main/components/pockets.module.scss b/frontend/src/pages/hud/Inventory/components/Main/components/pockets.module.scss
deleted file mode 100644
index c016ffd15d937d6ea4f008e8e1498c33e247f7ad..0000000000000000000000000000000000000000
--- a/frontend/src/pages/hud/Inventory/components/Main/components/pockets.module.scss
+++ /dev/null
@@ -1,121 +0,0 @@
-@import "../../../../../../styles/vars.scss";
-
-.pockets {
-    width: 43.814815vh;
-    overflow: hidden;
-
-    .header {
-        width: 100%;
-        display: flex;
-        align-items: center;
-
-        text-shadow: 0 0.18518518518518517vh 0.18518518518518517vh rgba(0, 0, 0, 0.53);
-
-        .info {
-            display: flex;
-            align-items: center;
-            justify-content: center;
-
-            border-top-left-radius: .5vh;
-            border-top-right-radius: .5vh;
-            padding: 0.4629629629629629vh 0.9259259259259258vh;
-            width: 100%;
-            margin-right: auto;
-            box-shadow: -1.3888888888888888vh 0.4629629629629629vh 0.9259259259259258vh #00000057;
-            background: $global-color;
-
-            .title {
-                font-size: 1.5vh;
-                font-family: $global-font;
-
-                margin-right: 0.9259259259259258vh;
-            }
-
-        }
-
-        .weight {
-            font-size: 1.3888888888888888vh;
-        }
-    }
-
-    .content {
-        display: grid;
-        grid-template-columns: repeat(6, 1fr);
-        grid-template-rows: repeat(1, 1fr);
-        padding: 1.3888888888888888vh;
-
-        background: rgba(0, 0, 0, 0.541);
-
-        .cell {
-            position: relative;
-            width: 5.666666666666667vh;
-            height: 5.666666666666667vh;
-            display: flex;
-            align-items: center;
-            justify-content: center;
-            margin-bottom: 1.3888888889vh;
-            margin-right: 1.3888888889vh;
-            background-color: $global-color;
-            border: 0.18518518518518517vh solid grey;
-            border-radius: 1vh;
-
-            text-shadow: 0 0.18518518518518517vh 0.18518518518518517vh rgba(0, 0, 0, 0.53);
-
-
-            .drink::before {
-                content: '';
-                position: absolute;
-                bottom: 0;
-
-                width: 100%;
-                height: 0.37037037037037035vh;
-
-                background-color: #91C1F1;
-            }
-
-            .image {
-                position: absolute;
-                width: 70%;
-                height: 100%;
-
-                pointer-events: none;
-            }
-
-            .level {
-                position: absolute;
-                left: 50%;
-                top: 0;
-                transform: translateX(-50%);
-                border-radius: .5vh;
-                width: 100%;
-                height: 100%;
-
-                pointer-events: none;
-            }
-
-            .count {
-                position: absolute;
-                top: 0;
-                left: 50%;
-                transform: translate(-50%, -50%);
-
-                font-family: $global-font;
-                text-shadow: 0vh 0vh 1vh black;
-
-                pointer-events: none;
-            }
-
-            .gender {
-                position: absolute;
-                right: 0;
-                bottom: 0;
-                font-family: $global-font;
-                text-shadow: 0vh 0vh 1vh black;
-            }
-        }
-    }
-}
-
-.active {
-    border: 0.18518518518518517vh solid #ffffff !important;
-}
\ No newline at end of file
diff --git a/frontend/src/pages/hud/Inventory/components/Main/components/quickuse.module.scss b/frontend/src/pages/hud/Inventory/components/Main/components/quickuse.module.scss
deleted file mode 100644
index 52d71e9d17a1d6113af1846482cef1e728941d5a..0000000000000000000000000000000000000000
--- a/frontend/src/pages/hud/Inventory/components/Main/components/quickuse.module.scss
+++ /dev/null
@@ -1,90 +0,0 @@
-@import "../../../../../../styles/vars.scss";
-
-.quickuse {
-    width: 43.814815vh;
-    overflow: hidden;
-
-    .header {
-        width: 100%;
-        display: flex;
-        align-items: center;
-        justify-content: center;
-
-        padding: 0.4629629629629629vh 0.9259259259259258vh;
-        background: $global-color;
-        text-shadow: 0 0.18518518518518517vh 0.18518518518518517vh rgba(0, 0, 0, 0.53);
-        box-shadow: -1.3888888888888888vh 0.4629629629629629vh 0.9259259259259258vh #00000057;
-
-        border-top-left-radius: .5vh;
-        border-top-right-radius: .5vh;
-
-        .title {
-            margin-right: 0.9259259259259258vh;
-            font-size: 1.5vh;
-            font-family: $global-font;
-            text-transform: uppercase;
-        }
-
-
-    }
-
-    .content {
-        display: flex;
-        align-items: center;
-        justify-content: space-between;
-        padding: 1.3888888888888888vh;
-
-        background: rgba(0, 0, 0, 0.541);
-
-        .cell {
-            position: relative;
-            width: 5.666666666666667vh;
-            height: 5.666666666666667vh;
-            display: flex;
-            align-items: center;
-            justify-content: center;
-
-            background-color: $global-color;
-            border: 0.18518518518518517vh solid grey;
-            border-radius: 1vh;
-
-            text-shadow: 0 0.18518518518518517vh 0.18518518518518517vh rgba(0, 0, 0, 0.53);
-
-
-
-            .image {
-                position: absolute;
-                width: 70%;
-                height: 100%;
-
-                pointer-events: none;
-            }
-
-            .level {
-                position: absolute;
-                left: 50%;
-                top: 0;
-                transform: translateX(-50%);
-                border-radius: .5vh;
-
-                width: 100%;
-                height: 100%;
-
-                pointer-events: none;
-            }
-
-            .id {
-                position: absolute;
-                bottom: 0;
-                left: 50%;
-                transform: translate(-50%, 50%);
-                font-family: $global-font;
-                pointer-events: none;
-            }
-        }
-    }
-}
-
-.active {
-    border: 0.18518518518518517vh solid #ffffff !important;
-}
\ No newline at end of file
diff --git a/frontend/src/pages/hud/Inventory/components/Main/main.module.scss b/frontend/src/pages/hud/Inventory/components/Main/main.module.scss
deleted file mode 100644
index 6dfb70c377e85b34fc01223e58f7dd8404a0b237..0000000000000000000000000000000000000000
--- a/frontend/src/pages/hud/Inventory/components/Main/main.module.scss
+++ /dev/null
@@ -1,103 +0,0 @@
-@import '../../../../../styles/vars';
-
-.main {
-    padding-top: 5.555555555555555vh;
-    display: flex;
-    flex-direction: column;
-    padding-left: 5.5555555556vh;
-
-    .title {
-        width: 39.81481481481481vh;
-        display: flex;
-        align-items: center;
-        justify-content: space-between;
-
-        font-family: $global-font;
-        font-size: 2.314814814814815vh;
-        text-transform: uppercase;
-        text-shadow: 0 0.18518518518518517vh 0.18518518518518517vh rgba(0, 0, 0, 0.53);
-        margin: -0.8333333333333333vh 0 3.2407407407407405vh 0;
-
-        .weight {
-            display: flex;
-            align-items: center;
-
-            transform: translateY(20%);
-
-            font-family: "TT Norms Medium", sans-serif;
-            font-size: 2.0370370370370368vh;
-            text-transform: lowercase;
-
-            .red {
-                color: #FF4E4E;
-                text-shadow: 0vh 0vh 0.5555555555555555vh #FF4E4E;
-            }
-
-            &::before {
-                content: '';
-                margin-right: 0.8333333333333333vh;
-
-                width: 2.222222222222222vh;
-                height: 2.4074074074074074vh;
-
-                background: url(../../../../../assets/images/hud/inventory/weightIcon.svg) no-repeat;
-                background-size: cover;
-
-                filter: drop-shadow(0vh 0.09259259259259259vh 0.27777777777777773vh rgba(0, 0, 0, 0.75));
-            }
-
-            & span {
-                margin-top: auto;
-                font-size: 1.2037037037037037vh;
-            }
-        }
-    }
-
-    .iteminfo {
-        height: 9.25925925925926vh;
-        display: flex;
-        align-items: center;
-        justify-content: center;
-        margin-bottom: 2.314814814814815vh;
-        background: linear-gradient(45deg, #28272b, transparent);
-        border-radius: 1vh;
-        transition: opacity .5s;
-
-
-        .image {
-            width: 7.4074074074074066vh;
-            max-height: 9.25925925925926vh;
-        }
-
-        .info {
-            width: 25.925925925925924vh;
-            display: flex;
-            flex-direction: column;
-            align-items: center;
-
-            .name,
-            .level {
-                font-family: Arial, Helvetica, sans-serif;
-                text-transform: uppercase;
-                font-size: 1.2037037037037037vh;
-            }
-
-            .name {
-                text-shadow: 0 0.18518518518518517vh 0.18518518518518517vh rgba(0, 0, 0, 0.53);
-                margin-bottom: 0.9259259259259258vh;
-            }
-
-            .level {
-                margin-bottom: 0.9259259259259258vh;
-            }
-
-            .description {
-                text-shadow: 0 0.18518518518518517vh 0.18518518518518517vh rgba(0, 0, 0, 0.53);
-                font-family: Arial, Helvetica, sans-serif;
-
-            }
-        }
-    }
-
-
-}
\ No newline at end of file
diff --git a/frontend/src/pages/hud/Inventory/components/Modal/Modal.tsx b/frontend/src/pages/hud/Inventory/components/Modal/Modal.tsx
deleted file mode 100644
index 59d9fef23262d054e31be473a156fdaff01deff3..0000000000000000000000000000000000000000
--- a/frontend/src/pages/hud/Inventory/components/Modal/Modal.tsx
+++ /dev/null
@@ -1,150 +0,0 @@
-import { FC, useCallback, useEffect, useRef } from "react";
-import EventManager from "utils/EventManager.util";
-import { CenterComponent, ICurrentItem } from "../../Interfaces";
-import style from "./modal.module.scss";
-import Notification from "utils/NotifyManager.util";
-
-import { RageShared } from "../../../../../../../source/shared";
-import { inventoryStore } from "store/Inventory.store";
-
-interface IModalProps {
-    store: typeof inventoryStore;
-    currentItem: ICurrentItem;
-    viewingBackpack: string | null;
-    setViewingBackpack: (key: string | null) => void;
-    takeItemOff: () => void;
-    putItemOn: (item?: RageShared.Inventory.Interfaces.IBaseItem) => void;
-    handleDrop: (isAccepted?: boolean) => void;
-    giveItemAway: (id?: number) => void;
-    setMiddleComponent: (component: CenterComponent) => void;
-    showModal: boolean;
-    setShowModal: (enable: boolean) => void;
-    modalCoords: { x: number; y: number };
-}
-
-const Modal: FC<IModalProps> = ({
-    store,
-    currentItem,
-    viewingBackpack,
-    setViewingBackpack,
-    takeItemOff,
-    putItemOn,
-    handleDrop,
-    giveItemAway,
-    setMiddleComponent,
-    showModal,
-    setShowModal,
-    modalCoords
-}) => {
-    const modalRef = useRef<HTMLDivElement>(null);
-
-    useEffect(() => {
-        let timeout: NodeJS.Timeout;
-
-        function handleClickOutside(event: any) {
-            if (modalRef.current && !modalRef.current.contains(event.target)) {
-                setShowModal(false);
-            }
-        }
-
-        function handleClickInside(event: any) {
-            if (modalRef.current && modalRef.current.contains(event.target)) {
-                timeout = setTimeout(() => {
-                    setShowModal(false);
-                }, 100);
-            }
-        }
-
-        document.addEventListener("mousedown", handleClickOutside);
-        document.addEventListener("mouseup", handleClickInside);
-        return () => {
-            document.removeEventListener("mousedown", handleClickOutside);
-            document.removeEventListener("mouseup", handleClickInside);
-            clearTimeout(timeout);
-        };
-    }, [modalRef]); // eslint-disable-line
-
-    const ensureOptionsIsArray = useCallback(() => {
-        let item = JSON.parse(JSON.stringify(currentItem.options));
-        if (item === null || item === undefined) return [];
-        if (typeof item === "object") return Object.values(item);
-        if (Array.isArray(item)) return item;
-        return [];
-    }, [currentItem.options]);
-
-    const getItem = useCallback(
-        (id: number | null, component: string | null) => {
-            if (id === null || !component) return null;
-            if (component === "quickUse") {
-                const fastSlot = store.quickUse[id];
-                if (!fastSlot || !fastSlot.component || fastSlot.id === null) return null;
-                return store.inventory[fastSlot.component][fastSlot.id];
-            } else if (component === "backpack") {
-                if (!viewingBackpack) return null;
-                const backpackdata = store.findItemByUUID(viewingBackpack);
-                if (!backpackdata || !backpackdata.items) return null;
-                return backpackdata.items[id];
-            } else if (component === "clothes") {
-                return store.clothes[id];
-            }
-            return store.inventory[component][id];
-        },
-        [store.clothes, store.inventory, store.quickUse, viewingBackpack]
-    );
-
-    const useItem = useCallback(() => {
-        if (currentItem.id === null || !currentItem.component) return;
-
-        const item = getItem(currentItem.id, currentItem.component);
-        if (!item) return;
-
-        EventManager.emitServer("inventory", "onUseItem", { item, source: { component: currentItem.component, slot: `${currentItem.id}` } });
-    }, [currentItem.id, currentItem.component, getItem]);
-
-    const splitItem = useCallback(
-        (itemData: ICurrentItem) => {
-            if (itemData.id === null || itemData.component === null) return;
-
-            const item = getItem(itemData.id, itemData.component);
-            if (!item) return;
-            if (item.count > 1) setMiddleComponent("split");
-        },
-        [getItem, setMiddleComponent]
-    );
-
-    const openItem = useCallback(() => {
-        if (currentItem.id === null || !currentItem.component) return;
-
-        const item = getItem(currentItem.id, currentItem.component);
-        if (!item) return;
-        if (item.type === "backpack") {
-            if (viewingBackpack) return setViewingBackpack(null);
-            if (!item.items) return Notification.error("Something is wrong with this backpack, contact an admin!");
-            return setViewingBackpack(item.hash);
-        }
-        const itemData = { item, source: { component: currentItem.component, slot: `${currentItem.id}` } };
-        EventManager.emitServer("inventory", "onOpenItem", itemData);
-    }, [currentItem.id, currentItem.component, getItem, setViewingBackpack]);
-
-    const renderOption = (option: string, handler: () => void, label: string) =>
-        ensureOptionsIsArray().includes(option) && (
-            <div className={style.box} onClick={handler}>
-                {label}
-            </div>
-        );
-
-    if (!showModal) return null;
-
-    return (
-        <div className={style.itemoptions} ref={modalRef} style={{ top: `${modalCoords.y}px`, left: `${modalCoords.x}px` }}>
-            {renderOption(RageShared.Inventory.Enums.ACTIONS.USE_ITEM, useItem, "Use Item")}
-            {renderOption(RageShared.Inventory.Enums.ACTIONS.OPEN_ITEM, openItem, "Open")}
-            {renderOption(RageShared.Inventory.Enums.ACTIONS.WEAR_ITEM, () => (currentItem.component === "clothes" ? takeItemOff() : putItemOn()), currentItem.component === "clothes" ? "Take off" : "Put on")}
-            {renderOption(RageShared.Inventory.Enums.ACTIONS.DROP_ITEM, handleDrop, "Drop Item")}
-            {renderOption(RageShared.Inventory.Enums.ACTIONS.TRADE_ITEM, giveItemAway, "Trade Item")}
-            {renderOption(RageShared.Inventory.Enums.ACTIONS.SPLIT_ITEM, () => splitItem(currentItem), "Split Item")}
-        </div>
-    );
-};
-
-export default Modal;
diff --git a/frontend/src/pages/hud/Inventory/components/Modal/modal.module.scss b/frontend/src/pages/hud/Inventory/components/Modal/modal.module.scss
deleted file mode 100644
index d327090227931b0d5d95a5145352db78f448c141..0000000000000000000000000000000000000000
--- a/frontend/src/pages/hud/Inventory/components/Modal/modal.module.scss
+++ /dev/null
@@ -1,64 +0,0 @@
-@import '../../../../../styles/vars';
-
-.itemoptions {
-    position: absolute;
-    top: 0;
-    left: 0;
-
-    display: flex;
-    flex-direction: column;
-
-    z-index: 999;
-
-    background: $global-bg-transparent;
-    border-radius: .5vh;
-    padding: 1vh;
-
-    &::before {
-        position: absolute;
-
-        top: 0;
-        left: 0;
-
-        width: 100%;
-        height: 0.18518518518518517vh;
-
-        background: linear-gradient(273.64deg, rgba(140, 137, 146, 0) 8.45%, #FFFFFF 90%);
-    }
-
-    &::after {
-        position: absolute;
-
-        top: 0;
-        left: 0;
-
-        width: 0.18518518518518517vh;
-        height: 100%;
-
-        background: linear-gradient(0deg, rgba(140, 137, 146, 0) 8.45%, #FFFFFF 90%);
-    }
-
-    .box {
-        margin-bottom: 0.09259259259259259vh;
-        padding-left: 0.7407407407407407vh;
-
-        width: 16.48148148148148vh;
-        height: 3.0555555555555554vh;
-
-        display: flex;
-        align-items: center;
-
-        background: $global-bg-reverted;
-        //  linear-gradient(273.64deg, rgba(0, 0, 0, 0) 8.45%, rgba(230, 230, 230, 0.8) 90%);
-
-        font-family: Arial, Helvetica, sans-serif;
-        text-transform: uppercase;
-        font-size: 1.2037037037037037vh;
-        color: #ffffff;
-        text-shadow: 0vh 0.09259259259259259vh 0.27777777777777773vh rgba(0, 0, 0, 0.75);
-
-        &:hover {
-            background: $global-bg-transparent;
-        }
-    }
-}
\ No newline at end of file
diff --git a/frontend/src/pages/hud/Inventory/components/SidePages/Backpack.tsx b/frontend/src/pages/hud/Inventory/components/SidePages/Backpack.tsx
deleted file mode 100644
index 40d717b3d0d12fd1f0184d818a3fa255d4ee3121..0000000000000000000000000000000000000000
--- a/frontend/src/pages/hud/Inventory/components/SidePages/Backpack.tsx
+++ /dev/null
@@ -1,155 +0,0 @@
-import { FC, useCallback, useMemo } from "react";
-import { observer } from "mobx-react-lite";
-import { entries, values } from "mobx";
-import cn from "classnames";
-import { inventoryStore } from "store/Inventory.store";
-
-import { ICurrentItem, IDropCell, ITargetCell } from "../../Interfaces";
-import style from "./sideinventory.module.scss";
-interface IBackpackProps {
-    store: typeof inventoryStore;
-    viewingBackpack: string | null;
-    setItem: (item: ICurrentItem) => void;
-    currentItem: ICurrentItem;
-    isCellDragged: boolean;
-    setDropCell: (data: IDropCell) => void;
-    setTargetCell: (data: ITargetCell) => void;
-    handleMouseDown: (_targetCell: IDropCell) => void;
-    handleContextMenu: (_targetCell: IDropCell, e: React.MouseEvent<HTMLDivElement, MouseEvent>) => void;
-    setSource: (img: string) => any;
-}
-
-const Backpack: FC<IBackpackProps> = ({ viewingBackpack, store, setItem, currentItem, isCellDragged, setDropCell, setTargetCell, handleMouseDown, handleContextMenu, setSource }) => {
-    const getItemsInBackpack = useCallback(() => {
-        if (!viewingBackpack) return null;
-        const itemData = store.findItemByUUID(viewingBackpack);
-
-        if (!itemData || !itemData.items) return null;
-        return itemData.items;
-    }, [viewingBackpack]);
-
-    const getBackpackData = useMemo(() => {
-        if (!viewingBackpack) return null;
-        return store.findItemByUUID(viewingBackpack);
-    }, [viewingBackpack]);
-
-    if (!getItemsInBackpack() || !getBackpackData) {
-        return null;
-    }
-
-    return (
-        <div className={style.sidepage}>
-            <div className={style.header}>
-                <div className={style.info}>
-                    <div className={style.title}>BACKPACK</div>
-                </div>
-            </div>
-            <div className={style.content}>
-                {entries(getItemsInBackpack()).map(([key, el]) => {
-                    const quality = store.getItemQuality(el);
-                    const backpackLvl = getBackpackData.quality;
-
-                    return backpackLvl === 0 && parseInt(key) <= 11 ? (
-                        <div
-                            key={key + el?.hash || key}
-                            className={cn(style.cell, currentItem.component === "backpack" && currentItem.id === parseInt(key) ? style.active : null)}
-                            style={
-                                values(store.quickUse).filter((fastslot) => fastslot && fastslot.component === "backpack" && fastslot.id === parseInt(key)).length > 0
-                                    ? { border: "0.18518518518518517vh dashed #B8B8B8" }
-                                    : undefined
-                            }
-                            onClick={() => {
-                                if (el?.type && backpackLvl >= 0) setItem({ component: "backpack", id: parseInt(key), options: el?.options });
-                            }}
-                            onMouseDown={(e) => {
-                                const timeout = setTimeout(() => {
-                                    if (el?.type && e.button === 0) {
-                                        handleMouseDown({ component: "backpack", id: parseInt(key) });
-                                        setTargetCell({ component: "backpack", id: parseInt(key) });
-                                        setDropCell({ component: "backpack", id: parseInt(key) });
-                                    }
-                                }, 100);
-
-                                document.body.onmouseup = () => {
-                                    clearTimeout(timeout);
-                                    document.body.onmouseup = null;
-                                };
-                            }}
-                            onContextMenu={(e) => {
-                                e.preventDefault();
-                                if (el?.type) {
-                                    handleContextMenu({ component: "backpack", id: parseInt(key) }, e);
-                                }
-                            }}
-                            onMouseEnter={() => isCellDragged && setDropCell({ component: "backpack", id: parseInt(key) })}
-                            onMouseLeave={() => setDropCell({ component: null, id: null })}
-                        >
-                            {el?.type && (
-                                <>
-                                    <div className={style.quality} style={{ background: `linear-gradient(to top, ${quality}, #C373F360 60%, #C373F300)` }} />
-                                    <img className={style.image} src={setSource(`${el?.image}`)} alt="#" />
-                                    {el?.count > 1 && <div className={style.count}>{el?.count}</div>}
-                                    <div className={style.gender}>{el?.gender !== undefined && el?.gender !== null ? (el?.gender === 0 ? "M" : "F") : null}</div>
-                                </>
-                            )}
-                        </div>
-                    ) : backpackLvl >= 1 && parseInt(key) <= 23 ? (
-                        <div
-                            key={key + el?.hash || key}
-                            className={cn(style.cell, currentItem.component === "backpack" && currentItem.id === parseInt(key) ? style.active : null)}
-                            style={
-                                values(store.quickUse).filter((fastslot) => fastslot && fastslot.component === "backpack" && fastslot.id === parseInt(key)).length > 0
-                                    ? { border: "0.18518518518518517vh dashed #B8B8B8" }
-                                    : undefined
-                            }
-                            onClick={() => {
-                                if (el?.type && backpackLvl >= 0) setItem({ component: "backpack", id: parseInt(key), options: el?.options });
-                            }}
-                            onMouseDown={(e) => {
-                                const timeout = setTimeout(() => {
-                                    if (el?.type && e.button === 0) {
-                                        handleMouseDown({ component: "backpack", id: parseInt(key) });
-                                        setTargetCell({ component: "backpack", id: parseInt(key) });
-                                        setDropCell({ component: "backpack", id: parseInt(key) });
-                                    }
-                                }, 100);
-
-                                document.body.onmouseup = () => {
-                                    clearTimeout(timeout);
-                                    document.body.onmouseup = null;
-                                };
-                            }}
-                            onContextMenu={(e) => {
-                                e.preventDefault();
-                                if (el?.type) {
-                                    handleContextMenu({ component: "backpack", id: parseInt(key) }, e);
-                                }
-                            }}
-                            onMouseEnter={() => isCellDragged && setDropCell({ component: "backpack", id: parseInt(key) })}
-                            onMouseLeave={() => setDropCell({ component: null, id: null })}
-                        >
-                            {el?.type && (
-                                <>
-                                    <div className={style.quality} style={{ background: `linear-gradient(to top, ${quality}, #C373F360 60%, #C373F300)` }} />
-                                    <img className={style.image} src={setSource(`${el?.image}`)} alt="#" />
-                                    {el?.count > 1 && <div className={style.count}>{el?.count}</div>}
-                                    <div className={style.gender}>{el?.gender !== undefined && el?.gender !== null ? (el?.gender === 0 ? "м" : "ж") : null}</div>
-                                </>
-                            )}
-                        </div>
-                    ) : (
-                        <div key={key + el?.hash || key} className={style.locked} />
-                    );
-                })}
-                {getBackpackData && getBackpackData.quality < 1 && (
-                    <div className={style.second_lock}>
-                        <div className={style.title}>Buy a level 2 backpack</div>
-                        <div className={style.subtitle}>to unlock additional slots</div>
-                    </div>
-                )}
-            </div>
-        </div>
-    );
-};
-
-export default observer(Backpack);
diff --git a/frontend/src/pages/hud/Inventory/components/SidePages/SideInventory.tsx b/frontend/src/pages/hud/Inventory/components/SidePages/SideInventory.tsx
deleted file mode 100644
index ccbc8a9dc310c52878b7d156deb5fa1c645795f8..0000000000000000000000000000000000000000
--- a/frontend/src/pages/hud/Inventory/components/SidePages/SideInventory.tsx
+++ /dev/null
@@ -1,80 +0,0 @@
-import { FC } from "react";
-import { observer } from "mobx-react-lite";
-import { entries } from "mobx";
-import cn from "classnames";
-
-import { ICurrentItem, IDropCell, ITargetCell } from "../../Interfaces";
-import { inventoryStore } from "store/Inventory.store";
-
-import style from "./sideinventory.module.scss";
-interface ISideInventoryProps {
-    title: string;
-    store: typeof inventoryStore;
-    setItem: (item: ICurrentItem) => void;
-    currentItem: ICurrentItem;
-    isCellDragged: boolean;
-    setDropCell: (data: IDropCell) => void;
-    setTargetCell: (data: ITargetCell) => void;
-    handleMouseDown: (_targetCell: IDropCell) => void;
-    handleContextMenu: (_targetCell: IDropCell, e: React.MouseEvent<HTMLDivElement, MouseEvent>) => void;
-    setSource: (img: string) => any;
-}
-
-const SideInventory: FC<ISideInventoryProps> = ({ title, store, setItem, currentItem, isCellDragged, setDropCell, setTargetCell, handleMouseDown, handleContextMenu, setSource }) => {
-    return (
-        <div className={style.sidepage}>
-            <div className={style.header}>
-                <div className={style.info}>
-                    <div className={style.title}>{title}</div>
-                </div>
-            </div>
-            <div className={style.content}>
-                {entries(store.sideInventory).map(([key, el]) => {
-                    const quality = store.getItemQuality(el);
-                    return (
-                        <div
-                            key={key + el?.hash || key}
-                            className={cn(style.cell, currentItem.component === "groundItems" && currentItem.id === parseInt(key) ? style.active : null)}
-                            onClick={() => {
-                                if (el) setItem({ component: "groundItems", id: parseInt(key), options: el?.options });
-                            }}
-                            onMouseDown={(e) => {
-                                const timeout = setTimeout(() => {
-                                    if (el?.type && e.button === 0) {
-                                        handleMouseDown({ component: "groundItems", id: parseInt(key) });
-                                        setTargetCell({ component: "groundItems", id: parseInt(key) });
-                                        setDropCell({ component: "groundItems", id: parseInt(key) });
-                                    }
-                                }, 100);
-
-                                document.body.onmouseup = () => {
-                                    clearTimeout(timeout);
-                                    document.body.onmouseup = null;
-                                };
-                            }}
-                            onContextMenu={(e) => {
-                                e.preventDefault();
-                                if (el?.type) {
-                                    handleContextMenu({ component: "groundItems", id: parseInt(key) }, e);
-                                }
-                            }}
-                            onMouseEnter={() => isCellDragged && setDropCell({ component: "groundItems", id: parseInt(key) })}
-                            onMouseLeave={() => setDropCell({ component: null, id: null })}
-                        >
-                            {el?.type && (
-                                <>
-                                    <div className={style.quality} style={{ background: `linear-gradient(to top, ${quality}, #C373F360 60%, #C373F300)` }} />
-                                    <img className={style.image} src={setSource(`${el?.image}`)} alt="#" />
-                                    {el?.count > 1 && <div className={style.count}>{el?.count}</div>}
-                                    <div className={style.gender}>{el?.gender !== undefined && el?.gender !== null ? (el?.gender === 0 ? "м" : "ж") : null}</div>
-                                </>
-                            )}
-                        </div>
-                    );
-                })}
-            </div>
-        </div>
-    );
-};
-
-export default observer(SideInventory);
diff --git a/frontend/src/pages/hud/Inventory/components/SidePages/sideinventory.module.scss b/frontend/src/pages/hud/Inventory/components/SidePages/sideinventory.module.scss
deleted file mode 100644
index cfad94b5d59f6f9dd6179f37f4d4067cfc65cd52..0000000000000000000000000000000000000000
--- a/frontend/src/pages/hud/Inventory/components/SidePages/sideinventory.module.scss
+++ /dev/null
@@ -1,225 +0,0 @@
-@import "../../../../../styles/vars.scss";
-
-.sidepage {
-    width: 43.814815vh;
-    overflow: hidden;
-    margin-bottom: 2.3148148148vh;
-    animation: slide-left 0.5s cubic-bezier(0.250, 0.460, 0.450, 0.940) forwards;
-
-
-    @keyframes slide-left {
-        0% {
-            transform: translateX(100px);
-            opacity: 0;
-        }
-
-        50% {
-            opacity: .5;
-        }
-
-        100% {
-            transform: translateX(0px);
-            opacity: 1;
-        }
-    }
-
-    .header {
-        width: 100%;
-        display: flex;
-        align-items: center;
-        text-shadow: 0 0.18518518518518517vh 0.18518518518518517vh rgba(0, 0, 0, 0.53);
-
-        .info {
-            display: flex;
-            align-items: center;
-            justify-content: center;
-            padding: 0.4629629629629629vh 0.9259259259259258vh;
-            width: 100%;
-
-            box-shadow: -1.3888888888888888vh 0.4629629629629629vh 0.9259259259259258vh #00000057;
-            background: $global-color;
-
-
-            border-top-left-radius: .5vh;
-            border-top-right-radius: .5vh;
-
-            .title {
-                font-family: $global-font;
-                font-size: 1.5vh;
-                text-transform: uppercase;
-            }
-
-        }
-
-        .weight {
-            font-size: 1.3888888888888888vh;
-        }
-    }
-
-    .content {
-        position: relative;
-
-        display: grid;
-        grid-template-columns: repeat(6, 1fr);
-        grid-template-rows: repeat(4, 1fr);
-
-        padding: 1.3888888888888888vh 0 0 1.3888888888888888vh;
-
-        background: rgba(0, 0, 0, 0.541);
-
-
-
-        .cell {
-            position: relative;
-            width: 5.666666666666667vh;
-            height: 5.666666666666667vh;
-            margin-bottom: 1.3888888888888888vh;
-            margin-right: 1.3888888888888888vh;
-            display: flex;
-            align-items: center;
-            justify-content: center;
-            border-radius: .3vh;
-            background-color: $global-color;
-            border: 0.18518518518518517vh solid grey;
-            border-radius: 1vh;
-
-            text-shadow: 0 0.18518518518518517vh 0.18518518518518517vh rgba(0, 0, 0, 0.53);
-
-            .image {
-                position: absolute;
-                width: 70%;
-                height: 100%;
-                pointer-events: none;
-            }
-
-            .quality {
-                position: absolute;
-                left: 50%;
-                top: 0;
-                transform: translateX(-50%);
-
-                width: 100%;
-                height: 100%;
-                border-radius: .5vh;
-                pointer-events: none;
-            }
-
-            .count {
-                position: absolute;
-                top: 0;
-                left: 50%;
-                transform: translate(-50%, -50%);
-                font-family: $global-font;
-                pointer-events: none;
-            }
-        }
-
-        .locked {
-            position: relative;
-
-            width: 5.666666666666667vh;
-            height: 5.666666666666667vh;
-
-            margin-bottom: 1.3888888888888888vh;
-            margin-right: 1.3888888888888888vh;
-
-            display: flex;
-            align-items: center;
-            justify-content: center;
-            border-radius: 1vh;
-
-            overflow: hidden;
-
-            background-color: $global-color;
-            border: 0.18518518518518517vh solid grey;
-            //  border-radius: .5vh;
-
-            &::before {
-                content: '';
-                opacity: .3;
-                width: 50%;
-                height: 50%;
-
-                background: url(../../../../../assets/images/hud/inventory/icons/lockedslot.svg) no-repeat;
-                background-size: cover;
-            }
-
-        }
-
-        .second_lock {
-            position: absolute;
-            top: 60%;
-
-            background: linear-gradient(to right, #28272b, #ff000085);
-
-
-            width: 100%;
-            height: 31%;
-
-            display: flex;
-            flex-direction: column;
-            align-items: center;
-            justify-content: center;
-
-            text-shadow: 0 0.18518518518518517vh 0.18518518518518517vh rgba(0, 0, 0, 0.53);
-            font-size: 1.0185185185185184vh;
-            text-align: center;
-
-            .title {
-                text-transform: uppercase;
-                font-family: Arial, Helvetica, sans-serif;
-            }
-
-            .subtitle {
-                text-transform: uppercase;
-                font-family: Arial, Helvetica, sans-serif;
-            }
-        }
-
-
-
-        .options {
-            position: absolute;
-            right: 0;
-            top: 0;
-            transform: translateX(100%);
-
-            .element {
-                position: relative;
-                width: 10.185185185185185vh;
-                height: 4.166666666666666vh;
-                margin-bottom: 1.3888888888888888vh;
-
-                display: flex;
-                align-items: center;
-                justify-content: center;
-
-                text-shadow: 0 0.18518518518518517vh 0.18518518518518517vh rgba(0, 0, 0, 0.53);
-
-                background: linear-gradient(to right, #ffffff57, #8C899257);
-
-
-                overflow: hidden;
-
-                &::before {
-                    content: '';
-                    position: absolute;
-                    left: 0;
-                    top: 0;
-
-                    width: 10%;
-                    height: 150%;
-
-                    background: linear-gradient(to right, rgba(0, 0, 0, 0.53), rgba(0, 0, 0, 0.53), #00000000);
-                    filter: blur(0.37037037037037035vh);
-
-                    pointer-events: none;
-                }
-            }
-        }
-    }
-}
-
-.active {
-    border: 0.18518518518518517vh solid #ffffff !important;
-}
\ No newline at end of file
diff --git a/frontend/src/pages/hud/Inventory/components/Split/SplitItem.tsx b/frontend/src/pages/hud/Inventory/components/Split/SplitItem.tsx
deleted file mode 100644
index 2954a4c08c296993694d2183233949c7e7afd1b9..0000000000000000000000000000000000000000
--- a/frontend/src/pages/hud/Inventory/components/Split/SplitItem.tsx
+++ /dev/null
@@ -1,92 +0,0 @@
-import { FC, useState, useMemo, useRef, useCallback } from "react";
-import { observer } from "mobx-react-lite";
-import { CenterComponent, ICurrentItem } from "../../Interfaces";
-
-import error from "assets/images/error.svg";
-import style from "./splititem.module.scss";
-import { RageShared } from "../../../../../../../source/shared";
-import { inventoryStore } from "store/Inventory.store";
-interface ISplitProps {
-    store: typeof inventoryStore;
-    viewingBackpack: string | null;
-    handleSplit: (item: RageShared.Inventory.Interfaces.IBaseItem, value: number) => void;
-    setMiddleComponent: (comp: CenterComponent) => void;
-    currentItem: ICurrentItem;
-}
-
-const Split: FC<ISplitProps> = ({ store, viewingBackpack, handleSplit, setMiddleComponent, currentItem }) => {
-    const [value, setValue] = useState(1);
-
-    const screen = useRef<HTMLDivElement>(null);
-
-    const setSource = useCallback((img: string) => {
-        try {
-            return new URL(`../../../../../assets/images/hud/inventory/items/${img}`, import.meta.url).href;
-        } catch (err) {
-            return error;
-        }
-    }, []);
-
-    const item = useMemo(() => {
-        if (currentItem.id === null || !currentItem.component) return null;
-
-        if (currentItem.component === "quickUse") {
-            const quickSlotData = store.quickUse[currentItem.id];
-            if (!quickSlotData || !quickSlotData.component || quickSlotData.id === null) return null;
-
-            const itemData = store.inventory[quickSlotData.component][quickSlotData.id];
-            return itemData;
-        } else if (currentItem.component === "backpack") {
-            if (!viewingBackpack) return null;
-            return store.getBackpackItemData(viewingBackpack, currentItem.id);
-        }
-        return currentItem.component === "clothes" ? store.clothes[currentItem.id] : store.inventory[currentItem.component][currentItem.id];
-    }, [currentItem.component, currentItem.id, store.clothes, store.inventory, store.quickUse, viewingBackpack]);
-
-    const changeSplitValue = useCallback(
-        (e: React.ChangeEvent<HTMLInputElement>) => {
-            if (!item) return;
-
-            let inputValue = parseInt(e.target.value, 10);
-            let newValue;
-            if (isNaN(inputValue) || inputValue < 1) {
-                newValue = 1;
-            } else if (inputValue > item.count - 1) {
-                newValue = item.count - 1;
-            } else {
-                newValue = inputValue;
-            }
-            setValue(newValue);
-        },
-        [item]
-    );
-
-    if (!item) return null;
-    return (
-        <div ref={screen} className={style.itemsplit}>
-            <div className={style.header}>
-                <div className={style.left}>
-                    <div className={style.line} style={{ "--color": store.getItemQuality(item) } as React.CSSProperties}></div>
-                    <div className={style.text}>split item</div>
-                </div>
-                <div className={style.close} onClick={() => setMiddleComponent("dropZone")}></div>
-            </div>
-            <div className={style.main}>
-                <div className={style.name}>{item?.name}</div>
-                <img src={setSource(`${item?.image}`)} alt="#" />
-                <div className={style.range}>
-                    <div className={style.slider}>
-                        <input type="range" max={item?.count - 1} min={1} value={value} onChange={(value) => setValue(Number(value.target.value))} />
-                    </div>
-                </div>
-                <input type="number" name="splitItem" value={value} onKeyDown={(b) => ["e", "E", "+", "-", ".", ","].includes(b.key) && b.preventDefault()} onChange={(e) => changeSplitValue(e)} />
-                <div className={style.text}>Use the slider or insert the value.</div>
-                <div className={style.button} onClick={() => handleSplit(item, value)}>
-                    SPLIT ITEM
-                </div>
-            </div>
-        </div>
-    );
-};
-
-export default observer(Split);
diff --git a/frontend/src/pages/hud/Inventory/components/Split/splititem.module.scss b/frontend/src/pages/hud/Inventory/components/Split/splititem.module.scss
deleted file mode 100644
index 734cc577337a0b40eed4ddf0f98f1ac4954ad9fc..0000000000000000000000000000000000000000
--- a/frontend/src/pages/hud/Inventory/components/Split/splititem.module.scss
+++ /dev/null
@@ -1,209 +0,0 @@
-@import '../../../../../styles/vars';
-
-.itemsplit {
-    position: absolute;
-    top: 50%;
-    left: 50%;
-    transform: translate(-50%, -50%);
-
-    width: 27.037037037037035vh;
-    height: 40.74074074074074vh;
-
-    display: flex;
-    flex-direction: column;
-
-
-    .header {
-        width: 100%;
-        height: 2.7777777777777777vh;
-
-        display: flex;
-
-        .left {
-            padding-left: 1.2037037037037037vh;
-
-            width: 100%;
-            height: 2.7777777777777777vh;
-
-            display: flex;
-            align-items: center;
-            background: $global-bg-transparent;
-
-            border-top-left-radius: .5vh;
-            border-top-right-radius: .5vh;
-
-
-            .text {
-                margin-left: 0.9259259259259258vh;
-                font-family: Arial, Helvetica, sans-serif;
-                text-transform: uppercase;
-                font-size: 1.2962962962962963vh;
-                color: #fff;
-                text-shadow: 0vh 0.09259259259259259vh 0.27777777777777773vh rgba(0, 0, 0, 0.75);
-            }
-        }
-
-        .close {
-            width: 2.7777777777777777vh;
-            height: 2.7777777777777777vh;
-
-            border-top-right-radius: .5vh;
-            display: flex;
-            align-items: center;
-            justify-content: center;
-
-            flex-shrink: 0;
-
-            background: red;
-
-            &::after {
-                content: '';
-                width: 1.8518518518518516vh;
-                height: 1.8518518518518516vh;
-                background: url(../../../../../assets/images/hud/inventory/close.svg) no-repeat;
-                background-size: cover;
-            }
-        }
-    }
-
-    .main {
-        width: 100%;
-        height: 37.87037037037037vh;
-
-        background: $global-bg-transparent;
-        // linear-gradient(270.21deg, rgba(140, 137, 146, 0.5) 11.36%, rgba(255, 255, 255, 0.5) 92.06%);
-
-        display: flex;
-        flex-direction: column;
-        justify-content: center;
-        align-items: center;
-
-
-        .name {
-            margin-top: 3.2407407407407405vh;
-
-            width: 19.25925925925926vh;
-            height: 3.518518518518518vh;
-
-            font-family: 'Beast Duh';
-            font-size: 3.4814814814814814vh;
-            color: #fff;
-            text-shadow: 0vh 0.09259259259259259vh 0.27777777777777773vh rgba(0, 0, 0, 0.75);
-            text-align: center;
-        }
-
-        & img {
-            margin-top: 3.333333333333333vh;
-            width: 6.481481481481481vh;
-            max-height: 6.944444444444444vh;
-
-            filter: drop-shadow(0vh 0.09259259259259259vh 0.27777777777777773vh rgba(0, 0, 0, 0.75));
-        }
-
-        .range {
-            & span {
-                opacity: 0.9;
-                width: 100%;
-
-                text-align: center;
-
-                font-family: Arial, Helvetica, sans-serif;
-                font-size: 1.3888888888888888vh;
-                color: white;
-                text-shadow: 0vh 0vh 1vh black;
-                text-transform: uppercase;
-            }
-
-            .slider {
-                width: 20vh;
-                margin-top: 0.9259259259259258vh;
-                display: flex;
-                align-items: center;
-                margin-bottom: 2.037037037vh;
-
-                & span {
-                    font-size: 0.9629629629629629vh;
-                }
-
-                & input[type='range'] {
-                    width: 100%;
-                    margin-top: 1vh;
-                    height: 0.57037037037037035vh;
-
-                    background-color: red;
-
-                    box-shadow: 0 0 0.5vh 0 #fff;
-                    border-radius: 0.27777777777777773vh;
-                    outline: none;
-                    appearance: none;
-                    -webkit-appearance: none;
-                    border: none;
-                    opacity: 0.7;
-
-                    &::-webkit-slider-thumb {
-                        appearance: none;
-                        -webkit-appearance: none;
-
-                        width: 1.8518518518518516vh;
-                        height: 1.8518518518518516vh;
-                        background-color: red;
-
-                        filter: drop-shadow(0 0 0.27777777777777773vh black);
-
-                        border-radius: 2vh;
-
-                        outline: none;
-                    }
-                }
-            }
-        }
-
-        & input {
-            outline: none;
-            border: none;
-            background: none;
-
-            font-family: $global-font;
-            font-size: 1.4814814814814814vh;
-            color: #fff;
-            text-shadow: 0vh 0.09259259259259259vh 0.27777777777777773vh rgba(0, 0, 0, 0.75);
-            text-align: center;
-        }
-
-        .text {
-            margin-top: 0.9259259259259258vh;
-            font-family: Arial, Helvetica, sans-serif;
-            color: white;
-            font-size: 1.2963vh;
-            text-align: center;
-        }
-
-        .button {
-            position: relative;
-            margin-top: auto;
-
-            width: 100%;
-            height: 4.0740740740740735vh;
-
-            display: flex;
-            align-items: center;
-            justify-content: center;
-
-            font-family: Arial, Helvetica, sans-serif;
-            font-size: 1.4814814814814814vh;
-
-            color: #fff;
-            text-shadow: 0vh 0vh 1vh black;
-            text-transform: uppercase;
-            background: $global-bg-reverted;
-            //  linear-gradient(270.21deg, rgba(140, 137, 146, 0.5) 11.36%, rgba(255, 255, 255, 0.5) 92.06%);
-
-            transition: all 0.1s ease-in;
-
-            &:hover {
-                background: #28272b;
-            }
-        }
-    }
-
-}
\ No newline at end of file
diff --git a/frontend/src/pages/hud/Inventory/inventory.module.scss b/frontend/src/pages/hud/Inventory/inventory.module.scss
deleted file mode 100644
index 5fd2ff4b8bf7c81acb70d448644b609c8d0ed0d4..0000000000000000000000000000000000000000
--- a/frontend/src/pages/hud/Inventory/inventory.module.scss
+++ /dev/null
@@ -1,186 +0,0 @@
-@import '../../../styles/vars';
-
-.inventory {
-	position: absolute;
-	width: 100vw;
-	height: 100vh;
-	display: flex;
-	align-items: center;
-	justify-content: center;
-
-	opacity: 0;
-	transition: opacity .2s;
-
-	// &::before {
-	// 	content: "";
-	// 	position: absolute;
-	// 	width: 30%;
-	// 	right: 0;
-	// 	height: 100%;
-	// 	background: linear-gradient(to left, #28272b, transparent);
-	// 	background-size: cover;
-	// }
-
-	// &::after {
-	// 	content: "";
-	// 	position: absolute;
-	// 	width: 30%;
-	// 	left: 0;
-	// 	height: 100%;
-	// 	background: linear-gradient(to right, #28272b, transparent);
-	// 	z-index: -1;
-	// }
-	.content {
-		width: 80%;
-		height: 75%;
-		position: relative;
-		background: linear-gradient(to right, rgba(40, 39, 43, 0.9) 0%, rgba(0, 0, 0, 0) 50%, rgba(40, 39, 43, 0.9) 100%);
-		filter: drop-shadow(0.18518518518518517vh 0.37037037037037035vh 0.5555555555555556vh #28272b);
-		display: flex;
-		align-items: flex-end;
-		justify-content: space-between;
-
-		border-radius: 1vh;
-
-		animation: spread-width .5s ease-in forwards;
-		transform-origin: center;
-
-		.left {
-			display: flex;
-			height: 100%;
-
-			opacity: 0;
-			transform: translateX(-50%);
-
-			transition: opacity .2s, transform .2s;
-
-			.adaptive {
-				display: flex;
-			}
-		}
-
-
-
-		.right {
-			height: 100%;
-
-			display: flex;
-			flex-direction: column;
-			justify-content: center;
-			align-items: flex-end;
-
-			opacity: 0;
-
-			transition: opacity .2s, transform .2s;
-
-
-			.adaptive {
-				display: flex;
-				align-items: center;
-				flex-direction: column;
-				gap: 1vh;
-				margin-right: 5vh;
-
-			}
-		}
-	}
-}
-
-.active {
-	opacity: 1;
-}
-
-.active .content {
-
-	.left,
-	.right {
-		transform: translateX(0);
-		opacity: 1;
-	}
-}
-
-@media (aspect-ratio: 577/540) {
-	.inventory {
-		&-drop-zone {
-			transform: scale(0.7) translate(-50%, -50%);
-			transform-origin: left top;
-		}
-
-		.content {
-			.left {
-				.adaptive {
-					transform: scale(0.7);
-					transform-origin: left center;
-				}
-			}
-
-			.right {
-				margin-left: -3.5%;
-
-				.adaptive {
-					transform: scale(0.7) translateX(0) !important;
-					transform-origin: left center;
-				}
-			}
-		}
-
-	}
-
-	.confirmitemdrop {
-		transform: scale(0.7) translate(-50%, -50%);
-		transform-origin: center center;
-	}
-
-	.itemsplit {
-		transform: scale(0.7) translate(-50%, -50%);
-		transform-origin: center left;
-	}
-}
-
-@media (aspect-ratio: 4/3),
-(aspect-ratio: 5/4) {
-	.inventory {
-		&-drop-zone {
-			transform: scale(0.8) translate(-50%, -50%);
-			transform-origin: left top;
-		}
-
-		.content {
-			.left {
-				adaptive {
-					transform: scale(0.8);
-					transform-origin: left center;
-				}
-			}
-
-			.right {
-				padding-right: 5% !important;
-
-				.adaptive {
-					transform: scale(0.8) translateX(0) !important;
-					transform-origin: left center;
-				}
-			}
-		}
-
-		.confirmitemdrop {
-			transform: scale(0.8) translate(-50%, -50%);
-			transform-origin: center center;
-		}
-
-		.itemsplit {
-			transform: scale(0.8) translate(-50%, -50%);
-			transform-origin: center left;
-		}
-	}
-}
-
-@keyframes spread-width {
-	0% {
-		transform: scaleX(0);
-	}
-
-	100% {
-		transform: scaleX(1);
-	}
-}
\ No newline at end of file
diff --git a/frontend/src/pages/hud/MainHud/MainHud.tsx b/frontend/src/pages/hud/MainHud/MainHud.tsx
deleted file mode 100644
index c247366c6de4094e4451ea318bcce57c1a544c53..0000000000000000000000000000000000000000
--- a/frontend/src/pages/hud/MainHud/MainHud.tsx
+++ /dev/null
@@ -1,100 +0,0 @@
-import { observer } from "mobx-react-lite";
-import { FC, useMemo } from "react";
-import { entries } from "mobx";
-
-import { hudStore } from "store/Hud.store";
-import { playerStore } from "store/Player.store";
-
-import Speedometer from "./components/Speedometer";
-
-import star from "assets/images/hud/icons/star.svg";
-import ping from "assets/images/hud/icons/ping.svg";
-import users from "assets/images/hud/icons/user.svg";
-import ammoicon from "assets/images/hud/icons/ammo.svg";
-import areaicon from "assets/images/hud/icons/areaname.svg";
-import cashicon from "assets/images/hud/icons/cash.svg";
-
-import style from "./mainhud.module.scss";
-import { regExp } from "utils/Helpers.util";
-
-const MainHUD: FC<{ store: typeof hudStore; playerStore: typeof playerStore }> = ({ store, playerStore }) => {
-    const getWeaponImage = useMemo(() => {
-        return new URL(`../../../assets/images/hud/weapons/${playerStore.data.weapondata?.weapon}.svg`, import.meta.url).href;
-    }, [playerStore.data.weapondata]);
-
-    return (
-        <div className={style.mainhud}>
-            <div className={style.left}>
-                <div className={style.areainfo}>
-                    <img src={areaicon} alt="" />
-
-                    <div className={style.areadata}>
-                        <div className={style.areaname}>{store.areaData.area}</div>
-                        <div className={style.streetname}>{store.areaData.street}</div>
-                    </div>
-                </div>
-            </div>
-            <div className={style.center}></div>
-            <div className={style.right}>
-                <div className={style.servername}>
-                    <span style={{ color: "red" }}>RAGEMP ROLEPLAY</span>
-
-                    <div className={style.playerInfo}>
-                        <div className={style.id}>ID: {playerStore.data.id}</div>
-
-                        <div className={style.ping}>
-                            <img src={ping} alt="" />
-                            {playerStore.data.ping}
-                        </div>
-                        <div className={style.online}>
-                            <img src={users} alt="" />
-                            {playerStore.nowPlaying}
-                        </div>
-                    </div>
-                </div>
-
-                {playerStore.data.wantedLevel > 0 && (
-                    <div className={style.stars}>
-                        {Array.from({ length: playerStore.data.wantedLevel }).map((_e, x) => {
-                            return <img src={star} alt="star" key={x} />;
-                        })}
-                    </div>
-                )}
-
-                {playerStore.data.weapondata && (
-                    <div className={style.weaponInfo}>
-                        <img src={getWeaponImage} alt="" />
-                        <span className={style.ammodata}>
-                            <img src={ammoicon} alt="ammo" />
-                            {playerStore.data.weapondata.ammo}/{playerStore.data.weapondata.maxammo}
-                        </span>
-                    </div>
-                )}
-
-                <div className={style.cashinfo}>
-                    <img src={cashicon} alt="" />
-                    <div className={style.cash}>${("" + playerStore.data.cash).replace(regExp.money, "$1,")}</div>
-                </div>
-
-                <div className={style.keybindGuide}>
-                    {entries(playerStore.keybindGuide).map(([x, val], e) => {
-                        return (
-                            <div key={e} className={style.keybind}>
-                                <span className={style.key}>{x}</span>
-                                {val}
-                            </div>
-                        );
-                    })}
-                </div>
-
-                {store.vehicleData.isActive && (
-                    <div className={style.speedo}>
-                        <Speedometer store={store} />
-                    </div>
-                )}
-            </div>
-        </div>
-    );
-};
-
-export default observer(MainHUD);
diff --git a/frontend/src/pages/hud/MainHud/components/Speedometer.tsx b/frontend/src/pages/hud/MainHud/components/Speedometer.tsx
deleted file mode 100644
index 6862a5aae71286340e53ba3a2c0983505f80fd7c..0000000000000000000000000000000000000000
--- a/frontend/src/pages/hud/MainHud/components/Speedometer.tsx
+++ /dev/null
@@ -1,116 +0,0 @@
-import React from "react";
-import { observer } from "mobx-react-lite";
-import { hudStore } from "store/Hud.store";
-
-const Speedometer: React.FC<{ store: typeof hudStore }> = ({ store }) => {
-    const radius = 100;
-
-    const ticks = Array.from({ length: 11 }, (_, i) => i * (store.vehicleData.maxSpeed / 10)); // 11 ticks from 0 to maxSpeed
-
-    // Calculate the angle for the line pointing at the current speed
-    const angle = ((store.vehicleData.speed / store.vehicleData.maxSpeed) * 260 - 180) * (Math.PI / 180); // Adjust the angle calculation
-
-    const lineX = 120 + (radius - 10) * Math.cos(angle);
-    const lineY = 120 + (radius - 10) * Math.sin(angle);
-    const minorTickCount = 4;
-    const majorTickAngleStep = 260 / (ticks.length - 1);
-    const minorTickAngleStep = majorTickAngleStep / (minorTickCount + 1);
-
-    return (
-        <svg width="300" height="300" viewBox="0 0 240 240">
-            {/* Arc */}
-            <circle
-                cx="120"
-                cy="120"
-                r={90}
-                fill="rgba(0, 0, 0, 0.5)"
-                strokeDasharray={0} // Use fullCircumference for strokeDasharray
-                strokeDashoffset={0}
-                transform="rotate(180 120 120)"
-            />
-            {/* Speed arc */}
-            <circle
-                cx="120"
-                cy="120"
-                r={radius}
-                stroke={"#28272b"}
-                strokeWidth="20"
-                fill="none"
-                strokeDasharray={0} // Use fullCircumference for strokeDasharray
-                strokeDashoffset={0}
-                transform="rotate(180 120 120)"
-                style={{ transition: "stroke-dashoffset 0.5s ease" }}
-            />
-            <line x1="120" y1="120" x2={lineX} y2={lineY} stroke="#fff" strokeWidth="2" />
-
-            <circle cx="120" cy="120" r="20" fill="#28272b" stroke="#28272b" />
-            <text x="115" y="128" fontFamily="Beast Duh" fontSize="20" fill="white">
-                {store.vehicleData.gear}
-            </text>
-            <rect x="97" y="140" width="50" height="20" fill="#28272b" />
-            <text x="98.5" y="155.5" fontFamily="Beast Duh" fontSize="15" fill="white">
-                {store.vehicleData.speed.toFixed()} KM/H
-            </text>
-            {ticks.map((tick, index) => {
-                const majorAngle = (index * majorTickAngleStep - 180) * (Math.PI / 180);
-                const majorX1 = 120 + radius * Math.cos(majorAngle);
-                const majorY1 = 120 + radius * Math.sin(majorAngle);
-                const majorX2 = 120 + (radius - 20) * Math.cos(majorAngle);
-                const majorY2 = 120 + (radius - 20) * Math.sin(majorAngle);
-                const textX = 120 + (radius - 35) * Math.cos(majorAngle);
-                const textY = 120 + (radius - 35) * Math.sin(majorAngle);
-
-                return (
-                    <g key={tick}>
-                        {/* Major tick line */}
-                        <line x1={majorX1} y1={majorY1} x2={majorX2} y2={majorY2} stroke={store.vehicleData.speed >= tick ? "red" : "white"} strokeWidth="2" />
-                        {/* Major tick text */}
-                        <text x={textX} y={textY} textAnchor="middle" fontFamily="Arial" fontSize="12" fill="#fff" dy=".35em">
-                            {tick}
-                        </text>
-
-                        {/* Minor ticks */}
-                        {index < ticks.length - 1 &&
-                            Array.from({ length: minorTickCount }).map((_, minorIndex) => {
-                                const minorAngle = (index * majorTickAngleStep + (minorIndex + 1) * minorTickAngleStep - 180) * (Math.PI / 180);
-                                const minorX1 = 120 + radius * Math.cos(minorAngle);
-                                const minorY1 = 120 + radius * Math.sin(minorAngle);
-                                const minorX2 = 120 + (radius - 10) * Math.cos(minorAngle);
-                                const minorY2 = 120 + (radius - 10) * Math.sin(minorAngle);
-
-                                // Calculate the minor tick value for speed comparison
-                                const minorTickValue = tick + ((minorIndex + 1) / (minorTickCount + 1)) * (ticks[index + 1] - tick);
-
-                                return (
-                                    <line key={minorIndex} x1={minorX1} y1={minorY1} x2={minorX2} y2={minorY2} stroke={store.vehicleData.speed >= minorTickValue ? "red" : "white"} strokeWidth="1" />
-                                );
-                            })}
-                    </g>
-                );
-            })}
-            {/* <path
-                d="M9.00018 0C9.53061 0 10.0393 0.210714 10.4144 0.585786C10.7895 0.960859 11.0002 1.46957 11.0002 2C11.0002 3.11 10.1102 4 9.00018 4C8.46974 4 7.96104 3.78929 7.58596 3.41421C7.21089 3.03914 7.00018 2.53043 7.00018 2C7.00018 1.46957 7.21089 0.960859 7.58596 0.585786C7.96104 0.210714 8.46974 0 9.00018 0ZM9.39018 12.79C10.8107 12.7845 12.2301 12.868 13.6402 13.04C13.7002 10.32 13.4602 7.92 13.0002 7C12.8702 6.73 12.6902 6.5 12.5002 6.3L4.43018 13.22C5.79018 13 7.50018 12.79 9.39018 12.79ZM4.46018 15C4.59018 16.74 4.85018 18.5 5.27018 20H7.34018C7.05018 19.12 6.84018 18.09 6.68018 17C6.68018 17 9.00018 16.56 11.3202 17C11.1602 18.09 10.9502 19.12 10.6602 20H12.7302C13.1702 18.45 13.4302 16.61 13.5602 14.79C12.1764 14.6237 10.7839 14.5402 9.39018 14.54C7.46018 14.54 5.78018 14.75 4.46018 15ZM9.00018 5C9.00018 5 6.00018 5 5.00018 7C4.66018 7.68 4.44018 9.15 4.37018 10.96L10.9202 5.34C9.93018 5 9.00018 5 9.00018 5ZM15.5702 3.67L14.4302 2.34L10.9202 5.35C11.4702 5.54 12.0502 5.84 12.5002 6.3L15.5702 3.67ZM17.6702 13.83C17.5802 13.8 16.1402 13.33 13.6402 13.04C13.6302 13.61 13.6002 14.2 13.5602 14.79C15.8102 15.07 17.1002 15.5 17.1202 15.5L17.6702 13.83ZM4.37018 10.96L0.430176 14.34L1.32018 15.82C1.34018 15.81 2.50018 15.36 4.46018 15C4.35018 13.59 4.32018 12.2 4.37018 10.96Z"
-                fill="#fff"
-                transform="translate(90, 180)"
-            /> */}
-
-            <path
-                d="M16 11H13V13H16V11ZM19 18H0V8L8 0H18C18.2652 0 18.5196 0.105357 18.7071 0.292893C18.8946 0.48043 19 0.734784 19 1V18ZM8.83 2L2.83 8H17V2H8.83Z"
-                fill={store.vehicleData.locked ? "darkred" : "#fff"}
-                transform="translate(90, 180)"
-            />
-
-            <path
-                d="M15.6119 0.955929C12.8649 -0.265071 9.56194 1.23393 9.23194 4.42893C9.07636 5.94762 8.99892 7.47329 8.99994 8.99993C8.99994 10.7299 9.09694 12.2689 9.23094 13.5699C9.56094 16.7659 12.8649 18.2649 15.6119 17.0439L15.8369 16.9439C17.3736 16.2609 18.6792 15.1468 19.5955 13.7367C20.5119 12.3266 20.9996 10.6811 20.9996 8.99943C20.9996 7.31778 20.5119 5.67221 19.5955 4.26213C18.6792 2.85206 17.3736 1.73799 15.8369 1.05493L15.6119 0.954929V0.955929ZM7.37194 3.92793C7.61076 3.82437 7.79979 3.63177 7.89886 3.39106C7.99793 3.15034 7.99924 2.88048 7.90249 2.63882C7.80575 2.39715 7.61859 2.20274 7.38077 2.09688C7.14296 1.99103 6.87325 1.98208 6.62894 2.07193L1.62894 4.07193C1.39162 4.17638 1.20416 4.36891 1.10608 4.60893C1.00799 4.84894 1.00697 5.11767 1.10322 5.35842C1.19947 5.59918 1.38547 5.79314 1.62198 5.89939C1.85849 6.00564 2.12703 6.01587 2.37094 5.92793L7.37194 3.92793ZM7.92794 7.62793C7.97673 7.74986 8.00103 7.88021 7.99945 8.01153C7.99786 8.14286 7.97042 8.27258 7.9187 8.3933C7.86698 8.51402 7.79198 8.62336 7.698 8.7151C7.60401 8.80683 7.49288 8.87915 7.37094 8.92793L2.37094 10.9279C2.24855 10.9791 2.11721 11.0054 1.98457 11.0053C1.85193 11.0052 1.72063 10.9787 1.59832 10.9273C1.47601 10.876 1.36514 10.8008 1.27216 10.7062C1.17918 10.6116 1.10595 10.4995 1.05674 10.3763C1.00752 10.2531 0.9833 10.1214 0.985488 9.98877C0.987675 9.85614 1.01623 9.72528 1.06948 9.60379C1.12273 9.48231 1.19962 9.37263 1.29567 9.28115C1.39172 9.18966 1.50501 9.11821 1.62894 9.07093L6.62894 7.07093C6.75093 7.02216 6.88134 6.99791 7.01271 6.99956C7.14408 7.00122 7.27383 7.02874 7.39456 7.08056C7.51529 7.13238 7.62462 7.20748 7.71631 7.30157C7.808 7.39566 7.88025 7.5069 7.92894 7.62893L7.92794 7.62793ZM7.37094 13.9279C7.61314 13.8267 7.80582 13.6343 7.90742 13.3923C8.00901 13.1502 8.01136 12.878 7.91397 12.6342C7.81657 12.3905 7.62723 12.1948 7.38682 12.0894C7.14641 11.984 6.8742 11.9774 6.62894 12.0709L1.62894 14.0709C1.38674 14.1721 1.19405 14.3645 1.09246 14.6066C0.990865 14.8486 0.988513 15.1209 1.08591 15.3646C1.18331 15.6084 1.37265 15.8041 1.61306 15.9095C1.85347 16.0149 2.12568 16.0215 2.37094 15.9279L7.37094 13.9279Z"
-                fill={store.vehicleData.lights ? "aqua" : "#fff"}
-                transform="translate(65, 165)"
-            />
-
-            <path d="M6 0V2H9V4H6L4 6V9H2V6H0V14H2V11H4V14H7L9 16H17V12H19V15H22V5H19V8H17V4H11V2H14V0H6Z" fill={store.vehicleData.engine ? "green" : "darkred"} transform="translate(50, 140)" />
-
-            {/* BD1111 */}
-        </svg>
-    );
-};
-
-export default observer(Speedometer);
diff --git a/frontend/src/pages/hud/MainHud/mainhud.module.scss b/frontend/src/pages/hud/MainHud/mainhud.module.scss
deleted file mode 100644
index c23003fff6fc029990302b09ff007d33ff2fd17f..0000000000000000000000000000000000000000
--- a/frontend/src/pages/hud/MainHud/mainhud.module.scss
+++ /dev/null
@@ -1,285 +0,0 @@
-@import "../../../styles/vars";
-
-.mainhud {
-
-    position: absolute;
-    display: flex;
-    align-items: center;
-    justify-content: space-between;
-    z-index: -1;
-    height: 100%;
-    width: 100%;
-    filter: drop-shadow(0 0 0.46296296296296297vh black);
-
-    .left {
-        width: 59.25925925925926vh;
-        height: 100%;
-
-
-        .areainfo {
-            position: absolute;
-            left: 28vh;
-            display: flex;
-            align-items: center;
-            justify-content: center;
-            background: $global-bg-transparent-reverted;
-            width: 20vh;
-            height: 5vh;
-            border-top-right-radius: 1vh;
-            border-bottom-right-radius: 1vh;
-            bottom: 1.5vh;
-
-            img {
-                width: 2.314814814814815vh;
-                height: 2.314814814814815vh;
-            }
-
-            .areadata {
-                display: flex;
-                flex-direction: column;
-                align-items: center;
-
-                .areaname {
-                    font-family: $global-font;
-                    text-shadow: 0 0 0.9259259259259259vh black;
-                }
-
-                .streetname {
-                    font-family: Arial, Helvetica, sans-serif;
-                    text-shadow: 0 0 0.9259259259259259vh black;
-                }
-            }
-        }
-    }
-
-    .center {
-        width: 59.25925925925926vh;
-        height: 100%;
-    }
-
-    .right {
-        width: 59.25925925925926vh;
-        height: 100%;
-
-
-        .cashinfo {
-            position: absolute;
-            right: 1vh;
-            top: 25vh;
-            font-size:2.5vh;
-            font-family: 'Beast Duh', sans-serif;
-            display: flex;
-            align-items: center;
-            gap: 1vh;
-            justify-content: center;
-            border-radius: .5vh;
-            text-shadow: .1vh .1vh 2vh black;
-            background: $global-bg-transparent;
-
-            .cash {
-                font-family: 'Beast Duh', sans-serif;
-                padding: .2vh;
-            }
-
-            img {
-                width: 2.314814814814815vh;
-                height: 2.314814814814815vh;
-                margin-left: 1vh;
-            }
-        }
-
-        .servername {
-            position: absolute;
-            right: 0vh;
-            top: 1vh;
-            width: 20vh;
-            font-size: 3vh;
-            font-family: 'Beast Duh';
-            display: flex;
-            flex-direction: column;
-            align-items: center;
-            justify-content: center;
-            background-color: transparent;
-            border-radius: .5vh;
-            text-shadow: .1vh .1vh 2vh black;
-            background: $global-bg-transparent;
-
-            .playerInfo {
-                display: flex;
-                font-weight: bold;
-                border-radius: .5vh;
-                gap: 2vh;
-
-                &::before {
-                    content: "";
-
-                    position: absolute;
-                    width: 90%;
-                    height: 1%;
-                    background: $global-bg;
-                    right: 1vh;
-                    top: 3.7vh;
-
-                }
-
-                .id,
-                .ping,
-                .online {
-                    display: flex;
-                    align-items: center;
-                    justify-content: center;
-                    flex-direction: row;
-                    font-family: Arial, Helvetica, sans-serif;
-                    font-size: 1.5vh;
-                    text-shadow: 0 0 1vh black;
-
-                    img {
-                        width: 2.314814814814815vh;
-                        height: 2.314814814814815vh;
-                    }
-                }
-
-                .ping {}
-
-                .online {}
-
-
-
-            }
-        }
-
-
-        .stars {
-            position: absolute;
-            top: 8.5vh;
-            right: 0vh;
-            width: 20vh;
-            display: flex;
-            align-items: end;
-            justify-content: center;
-            gap: 0.5vh;
-            background: linear-gradient(to right, rgba(0, 0, 255, 0.473), rgba(255, 0, 0, 0.418));
-            border-radius: .5vh;
-
-            img {
-                width: 2.5vh;
-                height: 2.5vh;
-            }
-        }
-
-        .weaponInfo {
-            position: absolute;
-            top: 13vh;
-            right: 0vh;
-            width: 15vh;
-
-            display: flex;
-            align-items: center;
-            justify-content: center;
-            flex-direction: column;
-
-            border-radius: .5vh;
-            background: $global-bg-transparent;
-
-            img {
-                width: 12vh;
-                height: 5vh;
-                transform: rotateY(180deg);
-
-            }
-
-
-            .ammodata {
-                position: relative;
-                bottom: .5vh;
-                background-color: #28272b;
-                border-radius: .5vh;
-                padding: .5vh;
-                font-family: $global-font;
-
-                display: flex;
-                align-items: center;
-                justify-content: center;
-
-                img {
-                    width: 2vh;
-                    height: 1.5vh;
-                }
-            }
-        }
-
-        .keybindGuide {
-            position: absolute;
-            right: 0vh;
-            top: 40vh;
-
-            width: 13vh;
-            display: flex;
-            flex-direction: column;
-            gap: .5vh;
-
-            .keybind {
-                display: flex;
-                align-items: center;
-
-                font-family: $global-font;
-                text-shadow: 0vh 0vh 1vh black;
-                font-size: 1.5vh;
-                border-radius: .5vh;
-
-                background: $global-bg-transparent;
-
-                .key {
-                    background: #28272b;
-                    display: flex;
-                    align-items: center;
-                    justify-content: center;
-
-                    width: 3vh;
-                    height: 3vh;
-
-                    margin-right: 1vh;
-                    border: .3vh solid rgba(255, 0, 0, 0.534);
-                    border-radius: .5vh;
-                    padding: .5vh;
-                }
-            }
-
-        }
-
-        .speedo {
-            position: absolute;
-            bottom: 0;
-            right: 0;
-            animation: slide-left 0.3s ease-in forwards;
-
-            @keyframes slide-left {
-                0% {
-                    bottom: -30vh;
-                }
-
-                100% {
-                    bottom: 0;
-                }
-            }
-
-            &::before {
-                content: "";
-                position: absolute;
-                width: 80%;
-                height: 80%;
-                bottom: 2.5vh;
-                right: 2vh;
-                z-index: -1;
-                background: $global-bg-reverted;
-                box-shadow: 0vh 0vh 2vh black;
-                border-radius: 20vh;
-            }
-
-            svg {
-                width: 25vh;
-                height: 25vh;
-            }
-        }
-    }
-}
\ No newline at end of file
diff --git a/frontend/src/pages/hud/Nativemenu/NativeMenu.tsx b/frontend/src/pages/hud/Nativemenu/NativeMenu.tsx
deleted file mode 100644
index f04634b4261ac0cb1e6a1406eccc14b729e151e4..0000000000000000000000000000000000000000
--- a/frontend/src/pages/hud/Nativemenu/NativeMenu.tsx
+++ /dev/null
@@ -1,25 +0,0 @@
-import { FC, useEffect, useRef } from "react";
-
-import { observer } from "mobx-react-lite";
-import Container from "./components/Container";
-
-import style from "./nativemenu.module.scss";
-import { nativemenuStore } from "store/Nativemenu.store";
-
-const NativeMenu: FC<{ store: typeof nativemenuStore }> = ({ store }) => {
-    if (!store.menu.isActive) return null;
-
-    return (
-        <div className={style.main}>
-            <div className={style.header}>
-                <div className={style.title}>{store.menu.header.title}</div>
-                <div className={style.text}>{store.menu.header.desc}</div>
-            </div>
-            <div className={style.container}>
-                <Container store={store} data={store.menu.items} depth={0} />
-            </div>
-        </div>
-    );
-};
-
-export default observer(NativeMenu);
diff --git a/frontend/src/pages/hud/Nativemenu/components/Container.tsx b/frontend/src/pages/hud/Nativemenu/components/Container.tsx
deleted file mode 100644
index 052319fe7253e57f931a964046f08a51a508476b..0000000000000000000000000000000000000000
--- a/frontend/src/pages/hud/Nativemenu/components/Container.tsx
+++ /dev/null
@@ -1,79 +0,0 @@
-import { FC, useCallback, useState, useEffect, useRef } from "react";
-
-import Button from "./types/Button";
-import CheckBox from "./types/CheckBox";
-import Switch from "./types/Switch";
-
-import { nativemenuStore } from "store/Nativemenu.store";
-import style from "./container.module.scss";
-import { RageShared } from "../../../../../../source/shared";
-
-interface IContainerProps {
-    store: typeof nativemenuStore;
-    data: RageShared.Interfaces.INativeMenuItem[];
-    name?: string;
-    depth: number;
-}
-
-const Container: FC<IContainerProps> = ({ store, data, name, depth }) => {
-    const [currentIndex, setCurrentIndex] = useState(0);
-
-    const scrollAbleRefs = useRef<(HTMLDivElement | null)[]>([]);
-
-    const handleKeyPressDown = useCallback(
-        (e: KeyboardEvent) => {
-            const isUpArrow = e.key === "ArrowUp";
-            const isDownArrow = e.key === "ArrowDown";
-
-            if (isUpArrow || isDownArrow) {
-                const direction = isUpArrow ? -1 : 1;
-                const nextIndex = (currentIndex + direction + data.length) % data.length;
-                setCurrentIndex(nextIndex);
-            }
-        },
-        [currentIndex, data]
-    );
-
-    const handleItemClick = useCallback(
-        (itemindex: number) => {
-            setCurrentIndex(itemindex);
-        },
-        [currentIndex, setCurrentIndex]
-    );
-
-    useEffect(() => {
-        const currentItem = scrollAbleRefs.current[currentIndex];
-        if (currentItem) {
-            currentItem.scrollIntoView({ behavior: "auto", block: "nearest" });
-        }
-    }, [currentIndex]);
-
-    useEffect(() => {
-        document.addEventListener("keydown", handleKeyPressDown);
-        return () => document.removeEventListener("keydown", handleKeyPressDown);
-    }, [handleKeyPressDown]);
-
-    useEffect(() => {
-        setCurrentIndex(0);
-    }, []);
-
-    return (
-        <>
-            {data.map((el, idx: number) => {
-                return (
-                    <div key={idx} className={style.main} onClick={() => handleItemClick(idx)} ref={(el) => (scrollAbleRefs.current[idx] = el)}>
-                        {el.type === 0 ? (
-                            <Button store={store} {...{ el, idx, currentIndex }} />
-                        ) : el.type === 1 ? (
-                            <CheckBox store={store} {...{ el, idx, currentIndex }} />
-                        ) : (
-                            <Switch store={store} {...{ el, idx, currentIndex }} />
-                        )}
-                    </div>
-                );
-            })}
-        </>
-    );
-};
-
-export default Container;
diff --git a/frontend/src/pages/hud/Nativemenu/components/container.module.scss b/frontend/src/pages/hud/Nativemenu/components/container.module.scss
deleted file mode 100644
index 7077ed7054577d58f147f87fa7a6b4c8a4bd9e06..0000000000000000000000000000000000000000
--- a/frontend/src/pages/hud/Nativemenu/components/container.module.scss
+++ /dev/null
@@ -1,3 +0,0 @@
-.main {
-    width: 100%;
-}
\ No newline at end of file
diff --git a/frontend/src/pages/hud/Nativemenu/components/types/Button.tsx b/frontend/src/pages/hud/Nativemenu/components/types/Button.tsx
deleted file mode 100644
index 7e737c56ac31748b7bbf68b95fe2685b9fe2e79b..0000000000000000000000000000000000000000
--- a/frontend/src/pages/hud/Nativemenu/components/types/Button.tsx
+++ /dev/null
@@ -1,49 +0,0 @@
-import { FC, useCallback, useEffect } from "react";
-import EventManager from "utils/EventManager.util";
-
-import style from "./listitem.module.scss";
-import { RageShared } from "../../../../../../../source/shared";
-import { nativemenuStore } from "store/Nativemenu.store";
-
-interface IButtonProps {
-    store: typeof nativemenuStore;
-    el: RageShared.Interfaces.INativeMenuItem;
-    idx: number;
-    currentIndex: number;
-}
-
-const Button: FC<IButtonProps> = ({ store, el, idx, currentIndex }) => {
-    const handleKeyPressDown = useCallback(
-        (e: KeyboardEvent) => {
-            if (currentIndex === idx && e.key === "Enter") {
-                EventManager.emitServer("nativemenu", "onSelectItem", { id: store.menu.id, listitem: currentIndex, name: el.name, uid: el.uid });
-            }
-        },
-        [currentIndex, el.value, idx]
-    );
-
-    useEffect(() => {
-        document.addEventListener("keydown", handleKeyPressDown);
-        return () => document.removeEventListener("keydown", handleKeyPressDown);
-    }, [handleKeyPressDown]);
-
-    return (
-        <div className={style.main} onClick={() => EventManager.emitServer("nativemenu", "onSelectItem", { id: store.menu.id, listitem: currentIndex, name: el.name, uid: el.uid })}>
-            {currentIndex === idx && (
-                <svg xmlns="http://www.w3.org/2000/svg" width="11.115" height="18" viewBox="0 0 11.115 18">
-                    <path
-                        id="Icon_material-keyboard-arrow-left"
-                        data-name="Icon material-keyboard-arrow-left"
-                        d="M23.115,24.135l-6.87-6.885,6.87-6.885L21,8.25l-9,9,9,9Z"
-                        transform="translate(23.115 26.25) rotate(180)"
-                        opacity="1"
-                        fill="red"
-                    ></path>
-                </svg>
-            )}
-            <div className={style.title}>{el.name}</div>
-        </div>
-    );
-};
-
-export default Button;
diff --git a/frontend/src/pages/hud/Nativemenu/components/types/CheckBox.tsx b/frontend/src/pages/hud/Nativemenu/components/types/CheckBox.tsx
deleted file mode 100644
index 246ddbfed03616c33d9dc2d9c6b233a4cead1c1a..0000000000000000000000000000000000000000
--- a/frontend/src/pages/hud/Nativemenu/components/types/CheckBox.tsx
+++ /dev/null
@@ -1,65 +0,0 @@
-import { FC, useCallback, useEffect } from "react";
-import { observer } from "mobx-react-lite";
-import cn from "classnames";
-import EventManager from "utils/EventManager.util";
-
-import { nativemenuStore } from "store/Nativemenu.store";
-import style from "./listitem.module.scss";
-import { RageShared } from "../../../../../../../source/shared";
-
-interface ICheckBoxProps {
-    store: typeof nativemenuStore;
-    el: RageShared.Interfaces.INativeMenuItem;
-    idx: number;
-    currentIndex: number;
-}
-
-const CheckBox: FC<ICheckBoxProps> = ({ store, el, idx, currentIndex }) => {
-    const handleKeyPressDown = useCallback(
-        (e: KeyboardEvent) => {
-            if (currentIndex === idx && e.key === "Enter") {
-                changeCheckboxValue(el);
-            }
-        },
-        [currentIndex, el.uid, el.value, idx, store]
-    );
-
-    const changeCheckboxValue = useCallback((el: RageShared.Interfaces.INativeMenuItem) => {
-        EventManager.emitServer("nativemenu", "onCheckboxChange", { id: store.menu.id, name: el.name, value: !el.value });
-        if (el.uid) store.changeValue(el.uid, !el.value);
-    }, []);
-
-    useEffect(() => {
-        document.addEventListener("keydown", handleKeyPressDown);
-
-        return () => document.removeEventListener("keydown", handleKeyPressDown);
-    }, [handleKeyPressDown]);
-
-    return (
-        <div className={style.main}>
-            {currentIndex === idx && (
-                <svg xmlns="http://www.w3.org/2000/svg" width="11.115" height="18" viewBox="0 0 11.115 18">
-                    <path
-                        id="Icon_material-keyboard-arrow-left"
-                        data-name="Icon material-keyboard-arrow-left"
-                        d="M23.115,24.135l-6.87-6.885,6.87-6.885L21,8.25l-9,9,9,9Z"
-                        transform="translate(23.115 26.25) rotate(180)"
-                        opacity="1"
-                        fill="red"
-                    ></path>
-                </svg>
-            )}
-            <div className={style.title}>{el.name}</div>
-            <div className={style.checkbox}>
-                <div
-                    className={cn(style.box, el.value && style.box_active)}
-                    onClick={() => {
-                        changeCheckboxValue(el);
-                    }}
-                ></div>
-            </div>
-        </div>
-    );
-};
-
-export default observer(CheckBox);
diff --git a/frontend/src/pages/hud/Nativemenu/components/types/Switch.tsx b/frontend/src/pages/hud/Nativemenu/components/types/Switch.tsx
deleted file mode 100644
index 513434fe48e8857af8926108c5c9a538fed00996..0000000000000000000000000000000000000000
--- a/frontend/src/pages/hud/Nativemenu/components/types/Switch.tsx
+++ /dev/null
@@ -1,93 +0,0 @@
-import { FC, useState, useCallback, useEffect } from "react";
-import { observer } from "mobx-react-lite";
-import EventManager from "utils/EventManager.util";
-import { nativemenuStore } from "store/Nativemenu.store";
-
-import style from "./listitem.module.scss";
-import { RageShared } from "../../../../../../../source/shared";
-
-interface ISwitchProps {
-    store: typeof nativemenuStore;
-    el: RageShared.Interfaces.INativeMenuItem;
-    idx: number;
-    currentIndex: number;
-}
-
-const Switch: FC<ISwitchProps> = ({ store, el, idx, currentIndex }) => {
-    if (!el.data) return null;
-    const [currentIndexSwitch, setCurrentIndexSwitch] = useState(0);
-
-    const updateIndex = useCallback(
-        (direction: number) => {
-            if (!el.data) return;
-
-            const newIndex = (currentIndexSwitch + direction + el.data.length) % el.data.length;
-            setCurrentIndexSwitch(newIndex);
-
-            if (el.uid) {
-                store.changeValue(el.uid, el.data[newIndex]);
-                EventManager.emitServer("nativemenu", "onSwitchChange", el.data[newIndex]);
-            }
-        },
-        [currentIndexSwitch, el.data, el.uid, store]
-    );
-
-    const handleKeyPressDown = useCallback(
-        (e: KeyboardEvent) => {
-            if (currentIndex === idx && (e.key === "ArrowLeft" || e.key === "ArrowRight")) {
-                updateIndex(e.key === "ArrowLeft" ? -1 : 1);
-            }
-        },
-        [currentIndex, idx, updateIndex]
-    );
-
-    useEffect(() => {
-        document.addEventListener("keydown", handleKeyPressDown);
-        return () => document.removeEventListener("keydown", handleKeyPressDown);
-    }, [handleKeyPressDown]);
-
-    return (
-        <div className={style.main}>
-            {currentIndex === idx && (
-                <svg xmlns="http://www.w3.org/2000/svg" width="11.115" height="18" viewBox="0 0 11.115 18">
-                    <path
-                        id="Icon_material-keyboard-arrow-left"
-                        data-name="Icon material-keyboard-arrow-left"
-                        d="M23.115,24.135l-6.87-6.885,6.87-6.885L21,8.25l-9,9,9,9Z"
-                        transform="translate(23.115 26.25) rotate(180)"
-                        opacity="1"
-                        fill="red"
-                    ></path>
-                </svg>
-            )}
-            <div className={style.title}>{el.name}</div>
-            <div className={style.switch}>
-                <div className={style.button_left} onClick={() => updateIndex(-1)}>
-                    <svg xmlns="http://www.w3.org/2000/svg" width="11.115" height="18" viewBox="0 0 11.115 18">
-                        <path
-                            id="Icon_material-keyboard-arrow-left"
-                            data-name="Icon material-keyboard-arrow-left"
-                            d="M23.115,24.135l-6.87-6.885,6.87-6.885L21,8.25l-9,9,9,9Z"
-                            transform="translate(23.115 26.25) rotate(180)"
-                            opacity="0.8"
-                        />
-                    </svg>
-                </div>
-                <div className={style.value}>{el.data[currentIndexSwitch]}</div>
-                <div className={style.button_right} onClick={() => updateIndex(1)}>
-                    <svg xmlns="http://www.w3.org/2000/svg" width="11.115" height="18" viewBox="0 0 11.115 18">
-                        <path
-                            id="Icon_material-keyboard-arrow-left"
-                            data-name="Icon material-keyboard-arrow-left"
-                            d="M23.115,24.135l-6.87-6.885,6.87-6.885L21,8.25l-9,9,9,9Z"
-                            transform="translate(23.115 26.25) rotate(180)"
-                            opacity="0.8"
-                        />
-                    </svg>
-                </div>
-            </div>
-        </div>
-    );
-};
-
-export default observer(Switch);
diff --git a/frontend/src/pages/hud/Nativemenu/components/types/listitem.module.scss b/frontend/src/pages/hud/Nativemenu/components/types/listitem.module.scss
deleted file mode 100644
index f33f3c06bd92d200bd7f92ce7f2a75395413ae92..0000000000000000000000000000000000000000
--- a/frontend/src/pages/hud/Nativemenu/components/types/listitem.module.scss
+++ /dev/null
@@ -1,123 +0,0 @@
-.main {
-    position: relative;
-    padding-left: 1.1vh;
-    width: 100%;
-    height: 4.166666666666666vh;
-    display: flex;
-    align-items: center;
-    background: linear-gradient(45deg,#000,#6832327a);
-
-    svg {
-        width: 1.2vh;
-        height: 2vh;
-    }
-
-    &::before {
-        content: '';
-        position: absolute;
-        bottom: 0;
-        left: 0;
-
-        width: 100%;
-        height: 0.18518518518518517vh;
-
-        background: linear-gradient(45deg, red, black);
-    }
-
-    .title {
-        margin-top: -0.37037037037037035vh;
-        width: 100%;
-
-        font-family: Arial, Helvetica, sans-serif;
-        font-size: 1.6296296296293vh;
-        text-transform: capitalize;
-
-        color: #FFFFFF;
-        overflow: hidden;
-        margin-left: 1vh;
-        filter: drop-shadow(0 0 1vh black);
-    }
-
-    .checkbox {
-        position: relative;
-        margin-right: 1.8518518518518516vh;
-
-        width: 2.4074074074074066vh;
-        height: 1.574074074074074vh;
-
-        flex-shrink: 0;
-        border-radius: .5vh;
-
-        background: rgba(0, 0, 0, .5);
-
-        .box {
-            position: absolute;
-            left: 0;
-            width: 100%;
-            height: 100%;
-            border-radius: .5vh;
-
-            background: #000;
-
-            transition: 0.3s;
-
-            &:hover {
-                background: #EAEAEA;
-            }
-        }
-        .box_active {
-            background: #00aa00;
-        }
-    }
-
-    .switch {
-        width: 19.055556vh;
-        height: 4.166666666666666vh;
-        display: flex;
-        align-items: center;
-        flex-shrink: 0;
-
-        .button_left,
-        .button_right {
-            width: 3vh;
-            height: 3vh;
-
-            display: flex;
-            align-items: center;
-            justify-content: center;
-            flex-shrink: 0;
-
-            background: red;
-            border-radius: .5vh;
-
-
-            & svg {
-                width: 1.111111111111111vh;
-                height: 1.6666666666666665vh;
-            }
-
-            &:hover {
-                opacity: .7;
-            }
-        }
-
-        .button_left {
-            transform: rotate(180deg);
-        }
-
-        .value {
-            width: 100%;
-            height: 100%;
-
-            display: flex;
-            align-items: center;
-            justify-content: center;
-
-            font-family: Arial, Helvetica, sans-serif;
-            font-size: 1.96296296296293vh;
-            line-height: 2.1296296296296293vh;
-            color: #FFFFFF;
-
-        }
-    }
-}
\ No newline at end of file
diff --git a/frontend/src/pages/hud/Nativemenu/nativemenu.module.scss b/frontend/src/pages/hud/Nativemenu/nativemenu.module.scss
deleted file mode 100644
index da5b5ed65c4809e43f96e1876342c42ba692067b..0000000000000000000000000000000000000000
--- a/frontend/src/pages/hud/Nativemenu/nativemenu.module.scss
+++ /dev/null
@@ -1,82 +0,0 @@
-@import "../../../styles/vars";
-
-.main {
-    position: absolute;
-    right: 5vh;
-    top: 10vh;
-    transform: translate(-50%, 0%);
-    padding-bottom: 1.8518518518518516vh;
-
-    width: 34vh;
-    background: linear-gradient(to bottom, #28272b, transparent);
-    border-radius: .5vh;
-
-    display: flex;
-    flex-direction: column;
-
-    .header {
-        width: 100%;
-        height: 13.518519vh;
-        display: flex;
-        align-items: center;
-        justify-content: center;
-        flex-direction: column;
-        flex-shrink: 0;
-
-        filter: drop-shadow(0 0 1vh black);
-        border-top-left-radius: .5vh;
-        border-top-right-radius: .5vh;
-        text-shadow: 0 0 1vh black;
-
-        .title {
-            font-family: 'Beast Duh', sans-serif;
-            font-size: 3.1296296296296293vh;
-            color: #fff;
-        }
-
-        .text {
-            margin-top: 0.4629629629629629vh;
-            font-family: Arial, Helvetica, sans-serif;
-            font-size: 1.2962962962962963vh;
-            color: #fff;
-            opacity: 1;
-        }
-    }
-
-    .container {
-        position: relative;
-        width: 100%;
-        max-height: 0;
-        overflow: hidden;
-
-        display: flex;
-        flex-direction: column;
-
-        animation: slideDown 0.5s ease-in-out forwards;
-
-        overflow-y: scroll;
-
-        &::-webkit-scrollbar {
-            display: none;
-        }
-
-        &::before {
-            content: '';
-            top: 0;
-            left: 0;
-            width: 100%;
-            height: 0.18518518518518517vh;
-            background: linear-gradient(90deg, rgba(0, 0, 0, 0) 0%, rgba(255, 255, 255, 0.8) 48.1%, rgba(0, 0, 0, 0) 100%);
-        }
-    }
-
-    @keyframes slideDown {
-        from {
-            max-height: 0;
-        }
-        to {
-            max-height: 50vh;
-        }
-    }
-
-}
diff --git a/frontend/src/pages/hud/hud.module.scss b/frontend/src/pages/hud/hud.module.scss
deleted file mode 100644
index 800039efd55068041ec6395a71833cba85edd333..0000000000000000000000000000000000000000
--- a/frontend/src/pages/hud/hud.module.scss
+++ /dev/null
@@ -1 +0,0 @@
-.main {}
\ No newline at end of file
diff --git a/frontend/src/pages/index.ts b/frontend/src/pages/index.ts
deleted file mode 100644
index 7de7d400b4e84718c964b051aaf953a1dc66715c..0000000000000000000000000000000000000000
--- a/frontend/src/pages/index.ts
+++ /dev/null
@@ -1 +0,0 @@
-import.meta.glob("./*/*.tsx", { eager: true });
diff --git a/frontend/src/pages/selectcharacter/SelectCharacter.tsx b/frontend/src/pages/selectcharacter/SelectCharacter.tsx
deleted file mode 100644
index ebde4630a8a50e3a89f01e0b19c261949d876fa5..0000000000000000000000000000000000000000
--- a/frontend/src/pages/selectcharacter/SelectCharacter.tsx
+++ /dev/null
@@ -1,60 +0,0 @@
-import { observer } from "mobx-react-lite";
-import { FC, useCallback } from "react";
-import { playerStore } from "store/Player.store";
-import style from "./selectcharacter.module.scss";
-import EventManager from "utils/EventManager.util";
-
-import moneyIcon from "assets/images/selector/icons/money.svg";
-import bankIcon from "assets/images/selector/icons/bank.svg";
-import { createComponent } from "src/hoc/registerComponent";
-
-const CharacterSelector: FC<{ store: typeof playerStore }> = observer(({ store }) => {
-    const selectCharacter = useCallback((id: number) => {
-        EventManager.emitServer("character", "select", id);
-    }, []);
-
-    const createCharacter = useCallback(() => {
-        EventManager.emitServer("character", "create");
-    }, []);
-
-    return (
-        <div className={style.main}>
-            <div className={style.header}>
-                CHARACTER SELECTION
-                <span className={style.desc}>Select or create a character to continue</span>
-            </div>
-
-            <div className={style.characters}>
-                {store.characters.map((x, i) => {
-                    return x.type === 0 ? (
-                        <div className={style.create} key={i} onClick={() => createCharacter()}>
-                            <span>Create Character</span>
-                        </div>
-                    ) : (
-                        <div className={style.character} key={i} onClick={() => selectCharacter(x.id)}>
-                            <div className={style.name}>{x.name}</div>
-                            <div className={style.data}>
-                                <span className={style.level}>{x.level}</span>
-                                <span className={style.money}>
-                                    <img src={moneyIcon} alt="money" />${x.money}
-                                </span>
-                                <span className={style.bank}>
-                                    <img src={bankIcon} alt="money" />${x.bank}
-                                </span>
-                            </div>
-                            <span className={style.spawn}>SPAWN CHARACTER</span>
-                        </div>
-                    );
-                })}
-            </div>
-        </div>
-    );
-});
-
-// export default observer(CharacterSelector);
-
-export default createComponent({
-    props: { store: playerStore },
-    component: CharacterSelector,
-    pageName: "selectcharacter"
-});
diff --git a/frontend/src/pages/selectcharacter/selectcharacter.module.scss b/frontend/src/pages/selectcharacter/selectcharacter.module.scss
deleted file mode 100644
index 6ea4925205f2b9ba4496676e2698a84d74ba219e..0000000000000000000000000000000000000000
--- a/frontend/src/pages/selectcharacter/selectcharacter.module.scss
+++ /dev/null
@@ -1,233 +0,0 @@
-.main {
-    width: 100vw;
-    height: 100vh;
-    position: absolute;
-
-    background: url('../../assets/images/selector/bg.svg') no-repeat;
-    background-size: cover;
-
-    &::before {
-        position: absolute;
-        content: "";
-        width: 100%;
-        height: 100%;
-
-        background: url('../../assets/images/selector/crazy.png') no-repeat;
-        background-size: cover;
-        opacity: .1;
-
-    }
-
-    .header {
-        position: relative;
-        top: 2vh;
-        display: flex;
-        align-items: center;
-
-        justify-content: center;
-        font-family: 'Beast Duh';
-        flex-direction: column;
-        font-size: 3.7037037037037037vh;
-        text-shadow: 0vh 0vh 5vh black;
-
-        .desc {
-            font-size: 1.8518518518518519vh;
-            font-family: Arial, Helvetica, sans-serif;
-            text-transform: uppercase;
-        }
-    }
-
-    .characters {
-        position: relative;
-        display: flex;
-        align-items: center;
-        justify-content: center;
-        margin-top: 15vh;
-        gap: 2vh;
-
-        .character {
-
-            font-family: Arial, Helvetica, sans-serif;
-            border-radius: .5vh;
-            width: 30vh;
-            height: 60vh;
-            background: linear-gradient(45deg, #8b4646, transparent);
-            transition: all .2s;
-            animation: slideInCenter 1s ease-in-out forwards;
-
-            &:hover {
-                width: 35vh;
-                background-color: rgba(0, 0, 0, 0.6);
-
-                .spawn {
-                    opacity: 1;
-                }
-            }
-
-            &::before {
-                content: "";
-                position: absolute;
-                width: 30vh;
-                height: 60vh;
-
-                background: url('../../assets/images/selector/3.svg') no-repeat;
-                background-repeat: no-repeat;
-                background-size: cover;
-
-                opacity: .3;
-                z-index: -1;
-            }
-
-
-            .name {
-                position: relative;
-                font-size: 1.8518518518518519vh;
-                font-weight: bold;
-                text-shadow: 0vh 0vh 1vh black;
-                text-transform: uppercase;
-
-            }
-
-            .data {
-                position: relative;
-                top: 15vh;
-                display: flex;
-                flex-direction: column;
-                justify-content: space-between;
-
-                .level {
-                    position: relative;
-                    top: -5vh;
-                    font-family: 'Beast Duh';
-                    opacity: .2;
-                    font-size: 25vh;
-                }
-
-                .money,
-                .bank {
-                    position: relative;
-                    font-family: 'Beast Duh';
-                    font-size: 3.5vh;
-                    top: -10vh;
-                    opacity: .8;
-                    display: flex;
-                    align-items: center;
-                    gap: .5vh;
-
-                    img {
-                        width: 4vh;
-                    }
-                }
-
-                .money {
-                    color: green;
-                }
-
-                .bank {
-                    color: lightblue;
-                }
-
-                .spawn {
-                    opacity: 0;
-                }
-            }
-
-            .spawn {
-
-                position: relative;
-                display: flex;
-                align-items: center;
-                justify-content: center;
-                top: 12.5vh;
-                font-size: 3vh;
-                font-family: 'Beast Duh';
-                background-color: #2d2f34;
-                opacity: 0;
-                transition: opacity .2s ease-in;
-            }
-        }
-
-        .create {
-            display: flex;
-            align-items: center;
-            justify-content: center;
-            font-family: 'Beast Duh';
-            font-size: 1.8518518518518519vh;
-            border-radius: .5vh;
-            width: 30vh;
-            height: 60vh;
-            background-color: rgba(0, 0, 0, 0.3);
-            transition: all .2s;
-            animation: slideInCenter 1s ease-in-out forwards;
-
-            & span {
-                margin-top: 25vh;
-
-            }
-
-            &:hover {
-                width: 35vh;
-                font-size: 3vh;
-                background-color: rgba(0, 0, 0, 0.6);
-                outline: .5vh solid rgba(255, 0, 0, 0.397);
-            }
-
-            &::before {
-                content: "";
-                position: absolute;
-                width: 11.11111111111111vh;
-                height: 11.11111111111111vh;
-
-                background: url('../../assets/images/selector/create.svg') no-repeat;
-                background-repeat: no-repeat;
-                background-size: contain;
-
-                opacity: .5;
-                z-index: -1;
-            }
-
-
-        }
-
-
-        .character:nth-child(1),
-        .create:nth-child(1) {
-            animation: slideInLeft 1s ease-in-out forwards;
-        }
-
-        .character:nth-child(3),
-        .create:nth-child(3) {
-            animation: slideInRight 1s ease-in-out forwards;
-        }
-    }
-}
-
-@keyframes slideInCenter {
-    from {
-        transform: translateY(100%);
-    }
-
-    to {
-        transform: translateY(0);
-    }
-}
-
-@keyframes slideInLeft {
-    from {
-        transform: translateX(-100%);
-    }
-
-    to {
-        transform: translateX(0);
-    }
-}
-
-@keyframes slideInRight {
-    from {
-        transform: translateX(100%);
-    }
-
-    to {
-        transform: translateX(0);
-    }
-}
\ No newline at end of file
diff --git a/frontend/src/pages/tattooshop/TattooShop.tsx b/frontend/src/pages/tattooshop/TattooShop.tsx
deleted file mode 100644
index d3f6190990d38089dfdee70c514192a78d6812b5..0000000000000000000000000000000000000000
--- a/frontend/src/pages/tattooshop/TattooShop.tsx
+++ /dev/null
@@ -1,17 +0,0 @@
-import { FC } from "react";
-import { observer } from "mobx-react-lite";
-import EventManager from "utils/EventManager.util";
-import style from "./tattooshop.module.scss";
-import { tattooShopStore } from "store/Tattoo.store";
-import { createComponent } from "src/hoc/registerComponent";
-
-const TattooShop: FC<{
-    store: typeof tattooShopStore;
-}> = observer(({ store }) => {
-    return <div style={{ color: "black" }}>comingsoon</div>;
-});
-export default createComponent({
-    props: { store: tattooShopStore },
-    component: TattooShop,
-    pageName: "tattooshop"
-});
diff --git a/frontend/src/pages/tattooshop/tattooshop.module.scss b/frontend/src/pages/tattooshop/tattooshop.module.scss
deleted file mode 100644
index e69de29bb2d1d6434b8b29ae775ad8c2e48c5391..0000000000000000000000000000000000000000
diff --git a/frontend/src/stores/CharCreator.store.ts b/frontend/src/stores/CharCreator.store.ts
deleted file mode 100644
index 1024b4ec42882005fc1e5a29305ea0a38ab27a8a..0000000000000000000000000000000000000000
--- a/frontend/src/stores/CharCreator.store.ts
+++ /dev/null
@@ -1,77 +0,0 @@
-import { observable, makeAutoObservable } from "mobx";
-import EventManager from "utils/EventManager.util";
-
-const defaultData = {
-    sex: 0,
-    name: { firstname: "", lastname: "" },
-    parents: { father: 0, mother: 0, leatherMix: 0, similarity: 0 },
-    hair: { head: 0, eyebrows: 0, chest: 0, beard: 0 },
-    face: {
-        0: 0, // 0 > noseWidth
-        1: 0, // 1 > nosePeakHeight
-        2: 0, // 2 > nosePeakLength
-        3: 0, // 3 > noseBoneHeight
-        4: 0, // 4 > nosePeakLowering
-        5: 0, // 5 > noseBoneTwist
-        6: 0, // 6 > eyebrowHeight
-        7: 0, // 7 > eyebrowForward
-        8: 0, // 8 > cheekboneHeight
-        9: 0, // 9 > cheekboneWidth
-        10: 0, // 10 > cheekWidth
-        11: 0, // 11 > eyesWidth
-        12: 0, // 12 > lips
-        13: 0, // 13 > jawBoneWidth
-        14: 0, // 14 > jawBoneBackLength
-        15: 0, // 15 > ChimpBoneLowering
-        16: 0, // 16 > ChimpBoneLength
-        17: 0, // 17 > ChimpBoneWidth
-        18: 0, // 18 > ChimpHole
-        19: 0 // 19 > neckWidth
-    },
-    clothes: {
-        hats: {
-            drawable: 0 as number,
-            texture: 0 as number,
-        },
-        tops: {
-            drawable: 0 as number,
-            texture: 0 as number,
-        },
-        pants: {
-            drawable: 0 as number,
-            texture: 0 as number,
-        },
-        shoes: {
-            drawable: 0 as number,
-            texture: 0 as number,
-        } as any,
-    },
-    color: { head: 0, eyebrows: 0, eyes: 0, chest: 0, beard: 0 }
-};
-
-class _CreatorStore {
-    data = observable.object(defaultData);
-    lastFather = 0;
-    lastMother = 0;
-    constructor() {
-        makeAutoObservable(this);
-        this.createEvents();
-    }
-
-    fetchData(data: any) {
-        return (this.data = data);
-    }
-
-    resetData() {
-        this.data = defaultData;
-        this.lastFather = 0;
-        this.lastMother = 0;
-    }
-
-    public createEvents() {
-        EventManager.addHandler("creator", "resetData", () => this.resetData());
-        EventManager.addHandler("creator", "setData", (data: typeof this.data) => this.fetchData(data));
-        EventManager.stopAddingHandler("creator");
-    }
-}
-export const creatorStore = new _CreatorStore();
diff --git a/frontend/src/stores/Chat.store.ts b/frontend/src/stores/Chat.store.ts
deleted file mode 100644
index 5421370c3a40163b5e690ff66e0660984b51cc6d..0000000000000000000000000000000000000000
--- a/frontend/src/stores/Chat.store.ts
+++ /dev/null
@@ -1,89 +0,0 @@
-import { observable, makeAutoObservable } from "mobx";
-import EventManager from "utils/EventManager.util";
-
-interface IChatSettings {
-    timestamp: boolean;
-    fontsize: number;
-    background: boolean;
-}
-
-class _ChatStore {
-    isActive: boolean = false;
-    commandList: string[] = observable.array(["/goto", "/help", "/ban", "/kick", "/mute", "/unmute"]);
-
-    messages: string[] = observable.array([
-        // 'this is a long <span style="color:red">test text hello 123</span>, this is a long test text hello 123, this is a long test text hello 123',
-        // 'this is a long <span style="color:red">test text hello 123</span>, this is a long test text hello 123, this is a long test text hello 123',
-        // 'this is a long <span style="color:red">test text hello 123</span>, this is a long test text hello 123, this is a long test text hello 123',
-        // 'this is a long <span style="color:red">test text hello 123</span>, this is a long test text hello 123, this is a long test text hello 123',
-        // 'this is a long <span style="color:red">test text hello 123</span>, this is a long test text hello 123, this is a long test text hello 123',
-        // 'this is a long <span style="color:red">test text hello 123</span>, this is a long test text hello 123, this is a long test text hello 123',
-        // 'this is a long <span style="color:red">test text hello 123</span>, this is a long test text hello 123, this is a long test text hello 123',
-        // 'this is a long <span style="color:red">test text hello 123</span>, this is a long test text hello 123, this is a long test text hello 123',
-        // 'this is a long <span style="color:red">test text hello 123</span>, this is a long test text hello 123, this is a long test text hello 123',
-        // 'this is a long <span style="color:red">test text hello 123</span>, this is a long test text hello 123, this is a long test text hello 123',
-        // 'this is a long <span style="color:red">test text hello 123</span>, this is a long test text hello 123, this is a long test text hello 123',
-        // 'this is a long <span style="color:red">test text hello 123</span>, this is a long test text hello 123, this is a long test text hello 123',
-        // 'this is a long <span style="color:red">test text hello 123</span>, this is a long test text hello 123, this is a long test text hello 123',
-        // 'this is a long <span style="color:red">test text hello 123</span>, this is a long test text hello 123, this is a long test text hello 123',
-        // 'this is a long <span style="color:red">test text hello 123</span>, this is a long test text hello 123, this is a long test text hello 123',
-        // 'this is a long <span style="color:red">test text hello 123</span>, this is a long test text hello 123, this is a long test text hello 123',
-        // 'this is a long <span style="color:red">test text hello 123</span>, this is a long test text hello 123, this is a long test text hello 123',
-        // 'this is a long <span style="color:red">test text hello 123</span>, this is a long test text hello 123, this is a long test text hello 123',
-        // 'this is a long <span style="color:red">test text hello 123</span>, this is a long test text hello 123, this is a long test text hello 123',
-        // 'this is a long <span style="color:red">test text hello 123</span>, this is a long test text hello 123, this is a long test text hello 123',
-        // 'this is a long <span style="color:red">test text hello 123</span>, this is a long test text hello 123, this is a long test text hello 123',
-        // 'this is a long <span style="color:red">test text hello 123</span>, this is a long test text hello 123, this is a long test text hello 123',
-        // 'this is a long <span style="color:red">test text hello 123</span>, this is a long test text hello 123, this is a long test text hello 123',
-        // 'this is a long <span style="color:red">test text hello 123</span>, this is a long test text hello 123, this is a long test text hello 123'
-    ]);
-
-    lastMessages: string[] = observable.array([]);
-
-    historyCounter: number = -1;
-
-    settings: IChatSettings = observable.object({
-        background: false,
-        fontsize: 1.48888889,
-        timestamp: false
-    });
-
-    constructor() {
-        makeAutoObservable(this);
-        this.createEvents();
-    }
-
-    setActive(data: boolean) {
-        this.isActive = data;
-    }
-
-    updateLastMessages(text: string) {
-        if (text.length > 0) {
-            let message = text.trim();
-            let history = [...this.lastMessages];
-
-            history.unshift(message);
-            if (history.length > 100) {
-                history = history.slice(0, 100);
-            }
-            this.lastMessages = history;
-        }
-    }
-
-    fetchNewMessage(obj: string) {
-        this.messages.push(obj);
-        if (this.messages.length > 150) this.messages.shift();
-    }
-
-    fetchCommandList(commands: string[]) {
-        this.commandList = commands;
-    }
-
-    public createEvents() {
-        EventManager.addHandler("chat", "setActive", (data: boolean) => this.setActive(data));
-        EventManager.addHandler("chat", "setCommands", (data: string[]) => this.fetchCommandList(data));
-        EventManager.stopAddingHandler("chat");
-    }
-}
-
-export const chatStore = new _ChatStore();
diff --git a/frontend/src/stores/Hud.store.ts b/frontend/src/stores/Hud.store.ts
deleted file mode 100644
index 91aef0c0822805bea69dc657f4b94d0a46536e1a..0000000000000000000000000000000000000000
--- a/frontend/src/stores/Hud.store.ts
+++ /dev/null
@@ -1,106 +0,0 @@
-import { makeAutoObservable, observable } from "mobx";
-import EventManager from "utils/EventManager.util";
-import { RageShared } from "../../../source/shared";
-
-interface IMenuItems {
-    id: number;
-    text: string;
-    type: number;
-    subItems?: IMenuItems[];
-}
-interface IInteractionMenu {
-    isActive: boolean;
-    items: IMenuItems[];
-}
-
-class _HudStore {
-    interactionMenu: IInteractionMenu = observable.object({
-        isActive: false,
-        items: [
-            // { id: 0, type: 0, text: "Seatbelt" },
-            // { id: 0, type: 0, text: "Lights" },
-            // { id: 0, type: 0, text: "Trunk" },
-            // { id: 0, type: 0, text: "Boot" },
-            // {
-            //     id: 0,
-            //     type: 0,
-            //     text: "Other Options",
-            //     subItems: [
-            //         { id: 0, type: 0, text: "Lock Vehicle" },
-            //         { id: 0, type: 0, text: "Lock Vehicle" },
-            //         { id: 0, type: 0, text: "Lock Vehicle" },
-            //         { id: 0, type: 0, text: "Lock Vehicle" },
-            //         { id: 0, type: 0, text: "Lock Vehicle" },
-            //         { id: 0, type: 0, text: "Lock Vehicle" },
-            //         { id: 0, type: 0, text: "Lock Vehicle" },
-            //         { id: 0, type: 0, text: "Lock Vehicle" },
-            //         { id: 0, type: 0, text: "Lock Vehicle" },
-            //         { id: 0, type: 0, text: "Lock Vehicle" },
-            //         { id: 0, type: 0, text: "Lock Vehicle" },
-            //         { id: 0, type: 0, text: "Lock Vehicle" }
-            //     ]
-            // }
-        ]
-    });
-
-    interactButton: RageShared.Interfaces.IInteractButton | null = null;
-    //     observable.object({
-    //     button: "E",
-    //     time: 10,
-    //     image: "pistol",
-    //     count: 100,
-    //     rarity: -1,
-    //     header: "Pistol MK2",
-    //     description: "To pickup this item, press E",
-    //     autoStart: false
-    // });
-
-    areaData: { area: string; street: string } = observable.object({
-        area: "San Andreas",
-        street: "Los SAntos International"
-    });
-
-    vehicleData: RageShared.Vehicles.Interfaces.SpeedometerData = observable.object({
-        isActive: false,
-        gear: 5,
-        engine: true,
-        lights: true,
-        locked: true,
-        speed: 0,
-        maxSpeed: 400
-    });
-
-    constructor() {
-        makeAutoObservable(this);
-        this.createEvents();
-    }
-    setInteractionMenu(data: IInteractionMenu) {
-        this.interactionMenu = data;
-    }
-    hideInteraction() {
-        this.setInteractionMenu({ isActive: false, items: [] });
-    }
-
-    setVehicleData<K extends keyof RageShared.Vehicles.Interfaces.SpeedometerData>(data: { key: K; data: RageShared.Vehicles.Interfaces.SpeedometerData[K] }) {
-        if (typeof this.vehicleData[data.key] === "undefined") return console.log(data.key, "dont exist");
-        this.vehicleData[data.key] = data.data;
-    }
-
-    setAreaData(data: { area: string; street: string }) {
-        this.areaData = data;
-    }
-
-    setInteractButtonData(data: RageShared.Interfaces.IInteractButton | null) {
-        this.interactButton = data;
-    }
-
-    public createEvents() {
-        EventManager.addHandler("hud", "setInteraction", (data: any) => this.setInteractionMenu(data));
-        EventManager.addHandler("hud", "setVehicleData", (data: any) => this.setVehicleData(data));
-        EventManager.addHandler("hud", "setAreaData", (data: { area: string; street: string }) => this.setAreaData(data));
-        EventManager.addHandler("hud", "showInteractionButton", (data: RageShared.Interfaces.IInteractButton | null) => this.setInteractButtonData(data));
-        EventManager.stopAddingHandler("hud");
-    }
-}
-
-export const hudStore = new _HudStore();
diff --git a/frontend/src/stores/Inventory.store.ts b/frontend/src/stores/Inventory.store.ts
deleted file mode 100644
index 42a278970b6991f4010e792de29233de253ef5ca..0000000000000000000000000000000000000000
--- a/frontend/src/stores/Inventory.store.ts
+++ /dev/null
@@ -1,353 +0,0 @@
-import { makeObservable, observable, action, set, values, makeAutoObservable } from "mobx";
-import EventManager from "utils/EventManager.util";
-import { RageShared } from "../../../source/shared";
-
-interface ICategory {
-    [key: string]: { [key: number]: RageShared.Inventory.Interfaces.IBaseItem | null };
-}
-/**
- * Represents an inventory store.
- */
-class _InventoryStore {
-    /** Indicates if the inventory is visible. */
-    isVisible: boolean = false;
-
-    /** The current weight of the inventory. */
-    currentWeight = 0;
-
-    /** The maximum allowed weight of the inventory. */
-    maxInventoryWeight = 40;
-
-    /** The clothes items in the inventory. */
-    clothes: { [key: number]: RageShared.Inventory.Interfaces.IBaseItem | null } = observable.object({
-        0: null,
-        1: null,
-        2: null,
-        3: null,
-        4: null,
-        5: null,
-        6: null,
-        7: null,
-        8: null,
-        9: null,
-        10: null,
-        11: null,
-        12: null,
-        13: null
-    });
-
-    /** The quick use items in the inventory. */
-    quickUse: { [key: number]: { component: string; id: number } | null } = observable.object({
-        0: null,
-        1: null,
-        2: null,
-        3: null,
-        4: null,
-        5: null
-    });
-
-    /** The main inventory categorized by type. */
-    inventory: ICategory = observable.object({
-        pockets: {
-            "0": null,
-            "1": null,
-            //  {
-            //     type: "weapon_dagger",
-            //     typeCategory: "weapon",
-            //     hash: "",
-            //     key: "",
-            //     quality: 0,
-            //     image: "dagger.svg",
-            //     render: "dagger.svg",
-            //     name: "dagger",
-            //     description: "",
-            //     count: 1,
-            //     weight: 0.6,
-            //     maxStack: 1,
-            //     options: ["drop", "trade", "fast"],
-
-            //     gender: null,
-            //     isPlaced: false,
-            //     modelHash: "w_me_dagger"
-            // },
-            "2": null,
-            // {
-            //     type: "backpack",
-            //     typeCategory: "clothing",
-            //     hash: "123123-asdasd-123123",
-            //     key: "",
-            //     quality: 0,
-            //     image: "backpack.svg",
-            //     render: "backpack.svg",
-            //     name: "Backpack",
-            //     description: "Increases inventory capacity.",
-            //     count: 1,
-            //     weight: 5,
-            //     maxStack: 1,
-            //     isPlaced: false,
-            //     options: ["open", "putOn", "drop", "trade"],
-            //     gender: null,
-            //     modelHash: "vw_prop_vw_backpack_01a",
-            //     items: {
-            //         0: null,
-            //         1: null,
-            //         2: null,
-            //         3: null,
-            //         4: null,
-            //         5: null,
-            //         6: null,
-            //         7: null,
-            //         8: null,
-            //         9: null,
-            //         10: null,
-            //         11: null,
-            //         12: null,
-            //         13: null,
-            //         14: null,
-            //         15: null,
-            //         16: null,
-            //         17: null,
-            //         18: null,
-            //         19: null,
-            //         20: null,
-            //         21: null,
-            //         22: null,
-            //         23: null
-            //     }
-            // },
-            "3": null,
-            "4": null,
-            "5": null,
-            "6": null,
-            "7": null,
-            "8": null,
-            "9": null,
-            "10": null,
-            "11": null,
-            "12": null,
-            "13": null,
-            "14": null,
-            "15": null,
-            "16": null,
-            "17": null
-        }
-    });
-
-    /** The side inventory items. */
-    sideInventory: { [key: number]: RageShared.Inventory.Interfaces.IBaseItem | null } = observable.object({
-        0: null,
-        1: null,
-        2: null,
-        3: null,
-        4: null,
-        5: null,
-        6: null,
-        7: null,
-        8: null,
-        9: null,
-        10: null,
-        11: null,
-        12: null,
-        13: null,
-        14: null,
-        15: null,
-        16: null,
-        17: null,
-        18: null,
-        19: null,
-        20: null,
-        21: null,
-        22: null,
-        23: null
-    });
-
-    /** The list of players around the current player. */
-    playersAround: any[] = [];
-
-    constructor() {
-        makeAutoObservable(this);
-        this.createEvents();
-        this.calcInventoryWeight();
-    }
-
-    /**
-     * Sets the maximum weight of the inventory.
-     * @param {number} number - The new maximum weight.
-     */
-    setInventoryMaxWeight(number: number) {
-        this.maxInventoryWeight = number;
-    }
-
-    /**
-     * Sets the visibility of the inventory.
-     * @param {boolean} bool - The new visibility state.
-     */
-    setVisible(bool: boolean) {
-        this.isVisible = bool;
-    }
-
-    /**
-     * Checks if an item is in the quick use slots.
-     * @param {number} id - The ID of the item.
-     * @returns {boolean} True if the item is in quick use, otherwise false.
-     */
-    public isItemInQuickUse(component: string, id: number): boolean {
-        return values(this.quickUse).find((x) => x && x.id === id && x.component === component) ? true : false;
-    }
-
-    /**
-     * Calculates the total weight of the items in the backpack.
-     * @returns {number} The total backpack weight.
-     */
-    public calculateBackpackWeight(): number {
-        const backpackData = this.clothes[7];
-        if (!backpackData || !backpackData.items) return 0;
-        return 0;
-    }
-
-    /**
-     * Calculates the total weight of the inventory.
-     */
-    calcInventoryWeight() {
-        const calculateWeight = (items: any[]) => items.reduce((acc, item) => acc + (item ? item.weight * item.count : 0), 0);
-        const pocketsWeight = calculateWeight(Object.values(this.inventory.pockets).filter((el) => el && el.weight));
-        const backpackWeight = this.calculateBackpackWeight();
-        this.currentWeight = parseFloat((pocketsWeight + backpackWeight).toFixed(3));
-    }
-
-    /**
-     * Gets the quality color of an item.
-     * @param {RageShared.Inventory.IBaseItem | null} itemData - The item data.
-     * @returns {string} The quality color in hex format.
-     */
-    public getItemQuality(itemData: RageShared.Inventory.Interfaces.IBaseItem | null) {
-        const qualityColors: { [key: number]: string } = {
-            0: "#B7C2F8",
-            1: "#8A9EFF",
-            2: "#C970FF",
-            3: "#FF8888",
-            4: "#FFD139"
-        };
-        return itemData ? qualityColors[itemData.quality] || "#FFFFFF00" : "#FFFFFF00";
-    }
-
-    public findItemByUUID(uuid: string) {
-        let data = values(this.inventory.pockets).find((x) => x && x.hash === uuid);
-        if (!data) data = values(this.clothes).find((x) => x && x.hash === uuid);
-        return data ?? null;
-    }
-
-    public getBackpackItemData(hash: string | null, slot: number) {
-        if (!hash) return null;
-
-        const item = this.findItemByUUID(hash);
-        if (!item || !item.items) return null;
-        return item.items[slot];
-    }
-
-    /**
-     * Changes the inventory data and optionally recalculates the weight.
-     * @param {{ component: string | null; id: number | null }} data - The data to change.
-     * @param {any} obj - The new object data.
-     * @param {boolean} recalculateWeight - Whether to recalculate the weight.
-     * @param {string | null} [linkedBackpack=null] - The linked backpack ID if applicable.
-     */
-    changeInventoryData(data: { component: string | null; id: number | null }, obj: any, recalculateWeight: boolean, linkedBackpack: string | null = null) {
-        if (data.component === null || data.id === null) return;
-        if (data.component === "clothes") {
-            set(this.clothes, data.id, obj);
-        } else if (data.component === "quickUse") {
-            set(this.quickUse, data.id, obj);
-        } else if (data.component === "backpack" && linkedBackpack) {
-            const backpack = this.findItemByUUID(linkedBackpack);
-            if (!backpack || !backpack.items) return;
-            backpack.items[data.id] = obj;
-        } else if (data.component === "groundItems") {
-            this.sideInventory[data.id] = obj;
-        } else this.inventory[data.component][data.id] = obj;
-        if (recalculateWeight) this.calcInventoryWeight();
-    }
-
-    /**
-     * Fetches quick use items.
-     * @param {{ [key: number]: { component: string; id: number } | null }} items - The quick use items.
-     */
-    fetchQuickUseItems(items: { [key: number]: { component: string; id: number } | null }) {
-        this.quickUse = items;
-    }
-
-    /**
-     * Fetches clothes data and recalculates inventory weight.
-     * @param {{ [key: number]: RageShared.Inventory.IBaseItem }} obj - The clothes data.
-     */
-    fetchClothesData(obj: { [key: number]: RageShared.Inventory.Interfaces.IBaseItem }) {
-        this.clothes = obj;
-        this.calcInventoryWeight();
-    }
-
-    /**
-     * Sets the clothes data for a specific slot and recalculates inventory weight.
-     * @param {number} id - The slot ID.
-     * @param {RageShared.Inventory.IBaseItem} data - The item data.
-     */
-    setClothesData(id: number, data: RageShared.Inventory.Interfaces.IBaseItem) {
-        if (!(id in this.clothes)) return;
-        this.clothes[id] = data;
-        this.calcInventoryWeight();
-    }
-
-    /**
-     * Fetches the inventory data and recalculates inventory weight.
-     * @param {ICategory} obj - The inventory data.
-     */
-    fetchInventoryData(obj: ICategory) {
-        this.inventory = obj;
-        this.calcInventoryWeight();
-    }
-
-    /**
-     * Fetches a specific inventory item and recalculates inventory weight.
-     * @param {string} component - The inventory component.
-     * @param {number} slot - The slot number.
-     * @param {RageShared.Inventory.IBaseItem | null} obj - The item data.
-     */
-    fetchInventoryItem(component: string, slot: number, obj: RageShared.Inventory.Interfaces.IBaseItem | null) {
-        this.inventory[component][slot] = obj;
-        this.calcInventoryWeight();
-    }
-
-    /**
-     * Fetches the players around the current player.
-     * @param {any[]} array - The array of players.
-     */
-    fetchPlayersAround(array: any[]) {
-        this.playersAround = array;
-    }
-
-    /**
-     * Fetches the ground items.
-     * @param {typeof this.sideInventory} items - The ground items data.
-     */
-    fetchGroundItems(items: typeof this.sideInventory) {
-        this.sideInventory = items;
-    }
-
-    public createEvents() {
-        EventManager.addHandler("inventory", "setVisible", (enable: boolean) => this.setVisible(enable));
-        EventManager.addHandler("inventory", "setClothes", (obj: { [key: number]: RageShared.Inventory.Interfaces.IBaseItem }) => this.fetchClothesData(obj));
-        EventManager.addHandler("inventory", "setClothesItem", (id: number, data: RageShared.Inventory.Interfaces.IBaseItem) => this.setClothesData(id, data));
-
-        EventManager.addHandler("inventory", "setInventory", (obj: { [key: string]: { [key: number]: RageShared.Inventory.Interfaces.IBaseItem | null } }) => this.fetchInventoryData(obj));
-        EventManager.addHandler("inventory", "setQuickUseItems", (obj: { [key: number]: { component: string; id: number } | null }) => this.fetchQuickUseItems(obj));
-        EventManager.addHandler("inventory", "setInventoryItem", (component: string, slot: number, obj: RageShared.Inventory.Interfaces.IBaseItem | null) =>
-            this.fetchInventoryItem(component, slot, obj)
-        );
-
-        EventManager.addHandler("inventory", "setDroppedItems", (items: any) => this.fetchGroundItems(items));
-
-        EventManager.addHandler("inventory", "setPlayersAround", (array: any) => this.fetchPlayersAround(array));
-        EventManager.addHandler("inventory", "setMaxWeight", (weight: number) => this.setInventoryMaxWeight(weight));
-    }
-}
-
-export const inventoryStore = new _InventoryStore();
diff --git a/frontend/src/stores/Nativemenu.store.ts b/frontend/src/stores/Nativemenu.store.ts
deleted file mode 100644
index 8e6ac3b9c800cb6cac49756a7fcd0128bd8bdffd..0000000000000000000000000000000000000000
--- a/frontend/src/stores/Nativemenu.store.ts
+++ /dev/null
@@ -1,35 +0,0 @@
-import { makeAutoObservable } from "mobx";
-import EventManager from "utils/EventManager.util";
-import { RageShared } from "../../../source/shared";
-
-class NativemenuStore {
-    menu: RageShared.Interfaces.INativeMenu = {
-        id: -1,
-        isActive: false,
-        header: { title: "", desc: "" },
-        items: []
-    };
-
-    constructor() {
-        makeAutoObservable(this);
-        this.createEvents();
-    }
-
-    changeValue(uid: number, newValue: any) {
-        const itemdata = this.menu.items.find((x) => x.uid === uid);
-        if (!itemdata) return;
-        itemdata.value = newValue;
-    }
-
-    setMenu(data: RageShared.Interfaces.INativeMenu) {
-        this.menu = data;
-    }
-
-    public emitChange(action: string, data: any) {}
-
-    public createEvents() {
-        EventManager.addHandler("nativemenu", "setData", (data: RageShared.Interfaces.INativeMenu) => this.setMenu(data));
-        EventManager.stopAddingHandler("nativemenu");
-    }
-}
-export const nativemenuStore = new NativemenuStore();
diff --git a/frontend/src/stores/Player.store.ts b/frontend/src/stores/Player.store.ts
deleted file mode 100644
index 18ad7b78b3ef6a100bfb29294b95dac82338ae78..0000000000000000000000000000000000000000
--- a/frontend/src/stores/Player.store.ts
+++ /dev/null
@@ -1,109 +0,0 @@
-import { makeAutoObservable, observable } from "mobx";
-import EventManager from "utils/EventManager.util";
-import { RageShared } from "../../../source/shared";
-
-interface ISettings {
-    email: string;
-    buttons: { [key: string]: Array<{ id: number; type: string; name: string; keyCode: number; event?: string }> };
-    display: Array<{ id: number; type: string; name: string; action: boolean }>;
-}
-
-class _PlayerStore {
-    nowPlaying: number = 0;
-
-    bankData: { accountnumber: number; balance: number; pincode: number } | null = {
-        accountnumber: 0,
-        balance: 1,
-        pincode: 1234
-    };
-
-    data: RageShared.Players.Interfaces.IPlayerData = observable.object({
-        id: 3000,
-        gender: 0,
-        ping: 47,
-        isDead: false,
-        cash: 0,
-        weapondata: {
-            ammo: 30,
-            maxammo: 260,
-            weapon: "weapon_assaultrifle"
-        },
-        wantedLevel: 5,
-
-        deathTime: 30
-    });
-    keybindGuide: { [key: string]: string } = {
-        E: "Inventory",
-        B: "Main Menu",
-        C: "Voice Chat",
-        D: "Interaction"
-    };
-
-    characters: RageShared.Players.Interfaces.ICharacters[] = observable.array([
-        // { type: 1, bank: 2322, id: 0, lastlogin: "12/12/2024", level: 233, money: 232, name: "Daddyss dev" },
-        // { type: 1, bank: 2322, id: 1, lastlogin: "12/12/2024", level: 2, money: 232, name: "Daddyss dev" },
-        // { type: 0, bank: 2322, id: 1, lastlogin: "12/12/2024", level: 2, money: 232, name: "Daddyss dev" }
-    ]);
-
-    settings: ISettings = {
-        email: "",
-        buttons: {
-            general: [{ id: 1, type: "default", name: "Inventory", event: "k_open_inv", keyCode: 9 }],
-            vehicle: [{ id: 16, type: "default", name: "seat belt", keyCode: 75 }],
-            fastslots: [{ id: 24, type: "fast", name: "action one", keyCode: 49 }]
-        },
-
-        display: [
-            { id: 0, type: "player", name: "Show Nametags", action: false },
-            { id: 8, type: "hud", name: "Display HUD", action: false }
-        ]
-    };
-
-    isQueuePaused = false;
-
-    constructor() {
-        makeAutoObservable(this);
-        this.createEvents();
-    }
-
-    setCharacters(characters: any) {
-        this.characters = characters;
-    }
-
-    setData<K extends keyof RageShared.Players.Interfaces.IPlayerData>(data: K, value: any) {
-        this.data[data] = value;
-    }
-
-    setKeybindData(data: { [key: string]: string }) {
-        this.keybindGuide = data;
-    }
-
-    setNowPlaying(data: number) {
-        this.nowPlaying = data;
-    }
-    setKeybindings(array: typeof this.settings.buttons) {
-        this.settings.buttons = array;
-    }
-    setDisplaySettings(array: typeof this.settings.display) {
-        this.settings.display = array;
-    }
-
-    setSettingsData(obj: typeof this.settings) {
-        this.settings = obj;
-    }
-
-    public createEvents() {
-        EventManager.addHandler("player", "setCharacters", (data: any[]) => this.setCharacters(data));
-        EventManager.addHandler("player", "setNowPlaying", (amount: number) => this.setNowPlaying(amount));
-        EventManager.addHandler("player", "setPlayerData", (data: any, key: any) => this.setData(data, key));
-        EventManager.addHandler("player", "setKeybindData", (keys: { [key: string]: string }) => this.setKeybindData(keys));
-
-        EventManager.addHandler("player", "setSettings", (obj: typeof this.settings) => this.setSettingsData(obj));
-        EventManager.addHandler("player", "setKeybindings", (arr: typeof this.settings.buttons) => this.setKeybindings(arr));
-        EventManager.addHandler("player", "setDisplaySettings", (arr: typeof this.settings.display) => this.setDisplaySettings(arr));
-
-        EventManager.stopAddingHandler("player");
-    }
-}
-
-export const playerStore = new _PlayerStore();
diff --git a/frontend/src/stores/Tattoo.store.ts b/frontend/src/stores/Tattoo.store.ts
deleted file mode 100644
index 5d209c75175c293453e486a8c2b3ef6d063d1c9d..0000000000000000000000000000000000000000
--- a/frontend/src/stores/Tattoo.store.ts
+++ /dev/null
@@ -1,9 +0,0 @@
-import { makeObservable, observable, action, makeAutoObservable } from "mobx";
-
-class _TattooShopStore {
-    constructor() {
-        makeAutoObservable(this);
-    }
-}
-
-export const tattooShopStore = new _TattooShopStore();
diff --git a/frontend/src/stores/index.ts b/frontend/src/stores/index.ts
deleted file mode 100644
index ce061c3098c4e9c5e810ce3b9e3c7ff9c3b4b4a2..0000000000000000000000000000000000000000
--- a/frontend/src/stores/index.ts
+++ /dev/null
@@ -1,6 +0,0 @@
-const modulePaths = import.meta.glob("./*.store.ts");
-
-for (const path in modulePaths) {
-    /* @vite-ignore */
-    import(path);
-}
diff --git a/frontend/src/styles/fonts.scss b/frontend/src/styles/fonts.scss
deleted file mode 100644
index 6a11d97123a8b9f7ef6f549b314f382426e3111b..0000000000000000000000000000000000000000
--- a/frontend/src/styles/fonts.scss
+++ /dev/null
@@ -1,4 +0,0 @@
-@font-face {
-    font-family: "Beast Duh";
-    src: url("../assets/fonts/BebasNeue-Regular.ttf");
-}
\ No newline at end of file
diff --git a/frontend/src/utils/NotifyManager.util.ts b/frontend/src/utils/NotifyManager.util.ts
deleted file mode 100644
index 7d0cf35a808c045beea6db36165a2f5be28030b6..0000000000000000000000000000000000000000
--- a/frontend/src/utils/NotifyManager.util.ts
+++ /dev/null
@@ -1,36 +0,0 @@
-import { toast } from "react-toastify";
-
-class Notify {
-    show(type: "loading" | "promise" | "success" | "info" | "error" | "warning" | "warn" | "dark", message: string, skin: "light" | "dark" | "colored" = "dark") {
-        //@ts-ignore
-        return toast[type](message, { theme: skin });
-    }
-
-    error(message: string, skin: "light" | "dark" | "colored" = "dark") {
-        return toast.error(message, { theme: skin });
-    }
-    loading(message: string, skin: "light" | "dark" | "colored" = "dark") {
-        return toast.loading(message, { theme: skin });
-    }
-    success(message: string, skin: "light" | "dark" | "colored" = "dark") {
-        return toast.success(message, { theme: skin });
-    }
-    info(message: string, skin: "light" | "dark" | "colored" = "dark") {
-        return toast.info(message, { theme: skin });
-    }
-    warning(message: string, skin: "light" | "dark" | "colored" = "dark") {
-        return toast.warning(message, { theme: skin });
-    }
-    warn(message: string, skin: "light" | "dark" | "colored" = "dark") {
-        return toast.warn(message, { theme: skin });
-    }
-    dark(message: string, skin: "light" | "dark" | "colored" = "dark") {
-        return toast.dark(message, { theme: skin });
-    }
-    clear() {
-        return toast.dismiss();
-    }
-}
-
-const Notification = new Notify();
-export default Notification;
diff --git a/frontend/tsconfig.json b/frontend/tsconfig.json
index 578cef2cd9d1c325fd956c508f25cd101d591aff..4b34df1571f7bfb636c02bbb718603cc2d9d1382 100644
--- a/frontend/tsconfig.json
+++ b/frontend/tsconfig.json
@@ -1,60 +1,3 @@
 {
-    "compilerOptions": {
-        "baseUrl": ".",
-        "lib": [
-            "dom",
-            "dom.iterable",
-            "esnext"
-        ],
-        "target": "ESNext",
-        "types": [
-            "@types/node",
-            "vite/client"
-        ],
-        "isolatedModules": false,
-        "allowJs": true,
-        "skipLibCheck": true,
-        "esModuleInterop": true,
-        "allowSyntheticDefaultImports": true,
-        "strict": true,
-        "forceConsistentCasingInFileNames": true,
-        "noFallthroughCasesInSwitch": true,
-        "module": "esnext",
-        "moduleResolution": "Node",
-        "experimentalDecorators": true,
-        "emitDecoratorMetadata": true,
-        "sourceMap": false,
-        "resolveJsonModule": true,
-        "noEmit": true,
-        "jsx": "react-jsx",
-        "paths": {
-            "assets/*": [
-                "src/assets/*"
-            ],
-            "components/*": [
-                "src/components/*"
-            ],
-            "pages/*": [
-                "src/pages/*"
-            ],
-            "store/*": [
-                "src/stores/*"
-            ],
-            "styles/*": [
-                "src/styles/*"
-            ],
-            "utils/*": [
-                "src/utils/*"
-            ],
-            "configs/*": [
-                "src/configs/*"
-            ],
-            "shared/*": [
-                "../../source/shared/*"
-            ]
-        }
-    },
-    "include": [
-        "./src/**/*"
-    ]
-}
\ No newline at end of file
+  "extends": "./.nuxt/tsconfig.json"
+}
diff --git a/frontend/src/utils/EventManager.util.ts b/frontend/utils/EventManager.util.ts
similarity index 98%
rename from frontend/src/utils/EventManager.util.ts
rename to frontend/utils/EventManager.util.ts
index d989b1eabfc456b3de45f8b01fa0c0a3f1c15ab5..4f889f7fe3d254cdbbe2490bbe72da509ac1130d 100644
--- a/frontend/src/utils/EventManager.util.ts
+++ b/frontend/utils/EventManager.util.ts
@@ -1,26 +1,26 @@
-const isDev = process.env.NODE_ENV === "development";
+const isDev = import.meta.env.DEV;
 type EventHandler = (...args: any[]) => void;
 
 interface EventEntry {
     target: string;
     name: string;
     handler: EventHandler;
 }
 
 /**
  * Class to manage events, including adding, updating, and calling event handlers.
  */
 class _EventManager {
     private eventsInMemory: EventEntry[] = [];
 
     /**
      * Adds an event handler if it does not already exist.
      *
      * @param {string} target - The target of the event.
      * @param {string} name - The name of the event.
      * @param {EventHandler} handler - The handler function for the event.
      */
     public addHandler(target: string, name: string, handler: EventHandler): void {
         if (!this.eventsInMemory.some((event) => event.target === target && event.name === name)) {
             this.eventsInMemory.push({ target, name, handler });
         }
diff --git a/frontend/src/utils/Helpers.util.ts b/frontend/utils/Helpers.util.ts
similarity index 100%
rename from frontend/src/utils/Helpers.util.ts
rename to frontend/utils/Helpers.util.ts
diff --git a/frontend/utils/NotifyManager.util.ts b/frontend/utils/NotifyManager.util.ts
new file mode 100644
index 0000000000000000000000000000000000000000..4939eeeafd5b788c39e30def7373b74f35b0acf5
--- /dev/null
+++ b/frontend/utils/NotifyManager.util.ts
@@ -0,0 +1,73 @@
+type NotificationType =
+  | "loading"
+  | "promise"
+  | "success"
+  | "info"
+  | "error"
+  | "warning"
+  | "warn"
+  | "dark";
+
+type NotificationSkin = "light" | "dark" | "colored";
+
+type NotificationPayload = {
+  type: NotificationType;
+  message: string;
+  skin: NotificationSkin;
+};
+
+type NotificationHandler = (payload: NotificationPayload) => void;
+
+class Notify {
+  private handlers = new Set<NotificationHandler>();
+
+  subscribe(handler: NotificationHandler) {
+    this.handlers.add(handler);
+    return () => this.handlers.delete(handler);
+  }
+
+  clear() {
+    this.handlers.clear();
+  }
+
+  private emit(type: NotificationType, message: string, skin: NotificationSkin) {
+    const payload: NotificationPayload = { type, message, skin };
+    this.handlers.forEach((handler) => handler(payload));
+  }
+
+  show(type: NotificationType, message: string, skin: NotificationSkin = "dark") {
+    this.emit(type, message, skin);
+  }
+
+  error(message: string, skin: NotificationSkin = "dark") {
+    this.emit("error", message, skin);
+  }
+
+  loading(message: string, skin: NotificationSkin = "dark") {
+    this.emit("loading", message, skin);
+  }
+
+  success(message: string, skin: NotificationSkin = "dark") {
+    this.emit("success", message, skin);
+  }
+
+  info(message: string, skin: NotificationSkin = "dark") {
+    this.emit("info", message, skin);
+  }
+
+  warning(message: string, skin: NotificationSkin = "dark") {
+    this.emit("warning", message, skin);
+  }
+
+  warn(message: string, skin: NotificationSkin = "dark") {
+    this.emit("warn", message, skin);
+  }
+
+  dark(message: string, skin: NotificationSkin = "dark") {
+    this.emit("dark", message, skin);
+  }
+}
+
+const Notification = new Notify();
+export type { NotificationPayload, NotificationType, NotificationSkin };
+export default Notification;
diff --git a/frontend/vite-env.d.ts b/frontend/vite-env.d.ts
deleted file mode 100644
index 83b9f3f4417a43443d775ff4d3ee365b33a584ef..0000000000000000000000000000000000000000
--- a/frontend/vite-env.d.ts
+++ /dev/null
@@ -1,51 +0,0 @@
-/// <reference types="vite/client" />
-/// <reference path="../source/shared/index.ts" />
-
-declare module "*.style.scss" {
-    const classes: { readonly [key: string]: string };
-    export default classes;
-}
-declare module "*.wav";
-declare module "*.mp3";
-declare module "*.webp";
-declare module "*.webm";
-declare module "*.png";
-interface Mp {
-    events: EventMpPool;
-    trigger(name: string, ...args: any[]): void;
-    invoke(name: string, ...args: any[]): void;
-}
-
-interface EventMpPool {
-    /**
-     * This function calls registered Remote Procedure Call (RPC) from browser to client-side and expects a callback.
-     *
-     * @param procName
-     * @param args Data you want to send to the client.
-     * @returns Returns a promise
-     *
-     * @example
-     * ```js
-     * await mp.events.callProc('test_proc', 'test');
-     * ```
-     *
-     *
-     */
-    callProc<T = any>(procName: string, ...args: any[]): Promise<T>;
-
-    /**
-     * Adds browser event that can be called from client side
-     * @param name Event name
-     * @param callback
-     */
-    add(name: string, callback: (...args: any[]) => void): void;
-    add(names: { [name: string]: (...args: any[]) => void }): void;
-    remove(name: string): void;
-    call(name: string): void;
-}
-
-interface Window {
-    mp: Mp;
-}
-
-declare var mp: Mp;
diff --git a/frontend/vite.config.ts b/frontend/vite.config.ts
deleted file mode 100644
index e6c777966d7c1cc3fc77d50fdf9e1d1aa08484a1..0000000000000000000000000000000000000000
--- a/frontend/vite.config.ts
+++ /dev/null
@@ -1,22 +0,0 @@
-import { defineConfig } from "vite";
-import react from "@vitejs/plugin-react";
-import viteTsconfigPaths from "vite-tsconfig-paths";
-
-export default defineConfig({
-    base: "",
-    build: {
-        reportCompressedSize: false,
-        outDir: "../client_packages/package2/dist",
-        emptyOutDir: true,
-        minify: "esbuild",
-        chunkSizeWarningLimit: 5000
-    },
-    plugins: [react(), viteTsconfigPaths()],
-    server: {
-        open: true,
-        port: 3000
-    },
-    resolve: {
-        alias: {}
-    }
-});
diff --git a/package.json b/package.json
index 88c0800f274d8022bb562e034fee2cd467362b21..4882499c8f83a80006a7979ce9658c308c25f423 100644
--- a/package.json
+++ b/package.json
@@ -1,39 +1,39 @@
 {
 	"name": "ragemp-rp-gamemode",
 	"version": "0.0.8",
 	"description": "A RAGEMP roleplay gamemode",
 	"main": "index.js",
 	"homepage": ".",
 	"scripts": {
 		"watch:server": "npx webpack --watch --profile --config ./config/webpack.server.js",
 		"build:server": "npx webpack --profile --config ./config/webpack.server.js",
 		"watch:client": "npx webpack --watch --profile --config ./config/webpack.client.js",
 		"build:client": "npx webpack --profile --config ./config/webpack.client.js",
 		"watch:both": "concurrently \"npm run watch:client\" \"npm run watch:server\"",
-		"watch:cef": "cd ./frontend && npm install && npm run start",
-		"build:cef": "cd ./frontend && npm install && npm run build",
+                "watch:cef": "cd ./frontend && npm install && npm run dev",
+                "build:cef": "cd ./frontend && npm install && npm run build",
 		"format-client": "prettier --config .prettierrc \"./source/client/**/*.ts\" --write",
 		"format-server": "prettier --config .prettierrc \"./source/server/**/*.ts\" --write"
 	},
 	"keywords": [
 		"RAGEMP",
 		"GTA5",
 		"GRA5RP",
 		"roleplay",
 		"rpserver",
 		"rpscript",
 		"rpgamemode",
 		"gamemode"
 	],
 	"author": "rShr0x",
 	"license": "MIT",
 	"dependencies": {
 		"bufferutil": "^4.0.7",
 		"colorette": "^2.0.19",
 		"discord-webhook-node": "^1.1.8",
 		"dotenv": "^16.0.3",
 		"keycode": "^2.2.1",
 		"lodash": "^4.17.21",
 		"node-cron": "^3.0.2",
 		"pg": "^8.11.1",
 		"reflect-metadata": "^0.1.14",
EOF
)